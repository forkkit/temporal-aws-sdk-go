// Generated by https://github.com/temporalio/temporal-aws-sdk/cmd/temporal-aws-sdk-gen/main.go
// from https://github.com/aws/aws-sdk-go.
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

{{ $name := .Name -}}
{{ $lowerName := .Name |ToLower -}}
package awsactivities

import (
	"context"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
{{- range .Imports }}
	"github.com/aws/aws-sdk-go/service/{{ . }}"
{{- end }}
	"github.com/aws/aws-sdk-go/service/{{ $lowerName }}/{{ $lowerName }}iface"
	"temporal.io/aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken
type _ request.Option

type {{ $name }}Activities struct {
	client {{ $lowerName }}iface.{{ $name }}API
}

func New{{ $name }}Activities(session *session.Session, config ...*aws.Config) *{{ $name }}Activities {
	client := {{ $lowerName }}.New(session, config...)
	return &{{ $name }}Activities{client: client}
}

{{- range $i, $method := .Methods }}

{{ if IsNil $method.Output -}}
func (a *{{ $name }}Activities) {{ $method.Name }}(ctx context.Context, input *{{ $method.Input.Package }}.{{ $method.Input.Name }}) error {
{{- if HasPrefix $method.Name "WaitUntil" }}
	return internal.WaitUntilActivity(ctx, func(ctx context.Context, options ...request.WaiterOption) error {
		return a.client.{{ $method.Name }}WithContext(ctx, input, options...)
	})
{{- else }}
	{{- if HasField $method.Input "ClientToken" }}
		internal.SetClientToken(ctx, &input.ClientToken)
	{{- end }}
	return a.client.{{ $method.Name }}WithContext(ctx, input)
{{- end }}
}
{{- else -}}
func (a *{{ $name }}Activities) {{ $method.Name }}(ctx context.Context, input *{{ $method.Input.Package }}.{{ $method.Input.Name }}) (*{{ $method.Output.Package }}.{{ $method.Output.Name }}, error) {
	{{- if HasField $method.Input "ClientToken" }}
	internal.SetClientToken(ctx, &input.ClientToken)
	{{- end }}
	return a.client.{{ $method.Name }}WithContext(ctx, input)
}
{{- end }}
{{- end }}
