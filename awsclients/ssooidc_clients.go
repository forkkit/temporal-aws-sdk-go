// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/ssooidc"
	"go.temporal.io/sdk/workflow"
)

type SSOOIDCClient interface {
	CreateToken(ctx workflow.Context, input *ssooidc.CreateTokenInput) (*ssooidc.CreateTokenOutput, error)
	CreateTokenAsync(ctx workflow.Context, input *ssooidc.CreateTokenInput) *SsooidcCreateTokenFuture

	RegisterClient(ctx workflow.Context, input *ssooidc.RegisterClientInput) (*ssooidc.RegisterClientOutput, error)
	RegisterClientAsync(ctx workflow.Context, input *ssooidc.RegisterClientInput) *SsooidcRegisterClientFuture

	StartDeviceAuthorization(ctx workflow.Context, input *ssooidc.StartDeviceAuthorizationInput) (*ssooidc.StartDeviceAuthorizationOutput, error)
	StartDeviceAuthorizationAsync(ctx workflow.Context, input *ssooidc.StartDeviceAuthorizationInput) *SsooidcStartDeviceAuthorizationFuture
}

type SSOOIDCStub struct{}

func NewSSOOIDCStub() SSOOIDCClient {
	return &SSOOIDCStub{}
}

type SsooidcCreateTokenFuture struct {
	Future workflow.Future
}

func (r *SsooidcCreateTokenFuture) Get(ctx workflow.Context) (*ssooidc.CreateTokenOutput, error) {
	var output ssooidc.CreateTokenOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SsooidcRegisterClientFuture struct {
	Future workflow.Future
}

func (r *SsooidcRegisterClientFuture) Get(ctx workflow.Context) (*ssooidc.RegisterClientOutput, error) {
	var output ssooidc.RegisterClientOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SsooidcStartDeviceAuthorizationFuture struct {
	Future workflow.Future
}

func (r *SsooidcStartDeviceAuthorizationFuture) Get(ctx workflow.Context) (*ssooidc.StartDeviceAuthorizationOutput, error) {
	var output ssooidc.StartDeviceAuthorizationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SSOOIDCStub) CreateToken(ctx workflow.Context, input *ssooidc.CreateTokenInput) (*ssooidc.CreateTokenOutput, error) {
	var output ssooidc.CreateTokenOutput
	err := workflow.ExecuteActivity(ctx, "aws.ssooidc.CreateToken", input).Get(ctx, &output)
	return &output, err
}

func (a *SSOOIDCStub) CreateTokenAsync(ctx workflow.Context, input *ssooidc.CreateTokenInput) *SsooidcCreateTokenFuture {
	future := workflow.ExecuteActivity(ctx, "aws.ssooidc.CreateToken", input)
	return &SsooidcCreateTokenFuture{Future: future}
}

func (a *SSOOIDCStub) RegisterClient(ctx workflow.Context, input *ssooidc.RegisterClientInput) (*ssooidc.RegisterClientOutput, error) {
	var output ssooidc.RegisterClientOutput
	err := workflow.ExecuteActivity(ctx, "aws.ssooidc.RegisterClient", input).Get(ctx, &output)
	return &output, err
}

func (a *SSOOIDCStub) RegisterClientAsync(ctx workflow.Context, input *ssooidc.RegisterClientInput) *SsooidcRegisterClientFuture {
	future := workflow.ExecuteActivity(ctx, "aws.ssooidc.RegisterClient", input)
	return &SsooidcRegisterClientFuture{Future: future}
}

func (a *SSOOIDCStub) StartDeviceAuthorization(ctx workflow.Context, input *ssooidc.StartDeviceAuthorizationInput) (*ssooidc.StartDeviceAuthorizationOutput, error) {
	var output ssooidc.StartDeviceAuthorizationOutput
	err := workflow.ExecuteActivity(ctx, "aws.ssooidc.StartDeviceAuthorization", input).Get(ctx, &output)
	return &output, err
}

func (a *SSOOIDCStub) StartDeviceAuthorizationAsync(ctx workflow.Context, input *ssooidc.StartDeviceAuthorizationInput) *SsooidcStartDeviceAuthorizationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.ssooidc.StartDeviceAuthorization", input)
	return &SsooidcStartDeviceAuthorizationFuture{Future: future}
}
