// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/securityhub"
	"go.temporal.io/sdk/workflow"
)

type SecurityHubClient interface {
	AcceptInvitation(ctx workflow.Context, input *securityhub.AcceptInvitationInput) (*securityhub.AcceptInvitationOutput, error)
	AcceptInvitationAsync(ctx workflow.Context, input *securityhub.AcceptInvitationInput) *SecurityHubAcceptInvitationFuture

	BatchDisableStandards(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) (*securityhub.BatchDisableStandardsOutput, error)
	BatchDisableStandardsAsync(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) *SecurityHubBatchDisableStandardsFuture

	BatchEnableStandards(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) (*securityhub.BatchEnableStandardsOutput, error)
	BatchEnableStandardsAsync(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) *SecurityHubBatchEnableStandardsFuture

	BatchImportFindings(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) (*securityhub.BatchImportFindingsOutput, error)
	BatchImportFindingsAsync(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) *SecurityHubBatchImportFindingsFuture

	BatchUpdateFindings(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) (*securityhub.BatchUpdateFindingsOutput, error)
	BatchUpdateFindingsAsync(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) *SecurityHubBatchUpdateFindingsFuture

	CreateActionTarget(ctx workflow.Context, input *securityhub.CreateActionTargetInput) (*securityhub.CreateActionTargetOutput, error)
	CreateActionTargetAsync(ctx workflow.Context, input *securityhub.CreateActionTargetInput) *SecurityHubCreateActionTargetFuture

	CreateInsight(ctx workflow.Context, input *securityhub.CreateInsightInput) (*securityhub.CreateInsightOutput, error)
	CreateInsightAsync(ctx workflow.Context, input *securityhub.CreateInsightInput) *SecurityHubCreateInsightFuture

	CreateMembers(ctx workflow.Context, input *securityhub.CreateMembersInput) (*securityhub.CreateMembersOutput, error)
	CreateMembersAsync(ctx workflow.Context, input *securityhub.CreateMembersInput) *SecurityHubCreateMembersFuture

	DeclineInvitations(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) (*securityhub.DeclineInvitationsOutput, error)
	DeclineInvitationsAsync(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) *SecurityHubDeclineInvitationsFuture

	DeleteActionTarget(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) (*securityhub.DeleteActionTargetOutput, error)
	DeleteActionTargetAsync(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) *SecurityHubDeleteActionTargetFuture

	DeleteInsight(ctx workflow.Context, input *securityhub.DeleteInsightInput) (*securityhub.DeleteInsightOutput, error)
	DeleteInsightAsync(ctx workflow.Context, input *securityhub.DeleteInsightInput) *SecurityHubDeleteInsightFuture

	DeleteInvitations(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) (*securityhub.DeleteInvitationsOutput, error)
	DeleteInvitationsAsync(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) *SecurityHubDeleteInvitationsFuture

	DeleteMembers(ctx workflow.Context, input *securityhub.DeleteMembersInput) (*securityhub.DeleteMembersOutput, error)
	DeleteMembersAsync(ctx workflow.Context, input *securityhub.DeleteMembersInput) *SecurityHubDeleteMembersFuture

	DescribeActionTargets(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) (*securityhub.DescribeActionTargetsOutput, error)
	DescribeActionTargetsAsync(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) *SecurityHubDescribeActionTargetsFuture

	DescribeHub(ctx workflow.Context, input *securityhub.DescribeHubInput) (*securityhub.DescribeHubOutput, error)
	DescribeHubAsync(ctx workflow.Context, input *securityhub.DescribeHubInput) *SecurityHubDescribeHubFuture

	DescribeProducts(ctx workflow.Context, input *securityhub.DescribeProductsInput) (*securityhub.DescribeProductsOutput, error)
	DescribeProductsAsync(ctx workflow.Context, input *securityhub.DescribeProductsInput) *SecurityHubDescribeProductsFuture

	DescribeStandards(ctx workflow.Context, input *securityhub.DescribeStandardsInput) (*securityhub.DescribeStandardsOutput, error)
	DescribeStandardsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsInput) *SecurityHubDescribeStandardsFuture

	DescribeStandardsControls(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) (*securityhub.DescribeStandardsControlsOutput, error)
	DescribeStandardsControlsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) *SecurityHubDescribeStandardsControlsFuture

	DisableImportFindingsForProduct(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) (*securityhub.DisableImportFindingsForProductOutput, error)
	DisableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) *SecurityHubDisableImportFindingsForProductFuture

	DisableSecurityHub(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) (*securityhub.DisableSecurityHubOutput, error)
	DisableSecurityHubAsync(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) *SecurityHubDisableSecurityHubFuture

	DisassociateFromMasterAccount(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) (*securityhub.DisassociateFromMasterAccountOutput, error)
	DisassociateFromMasterAccountAsync(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) *SecurityHubDisassociateFromMasterAccountFuture

	DisassociateMembers(ctx workflow.Context, input *securityhub.DisassociateMembersInput) (*securityhub.DisassociateMembersOutput, error)
	DisassociateMembersAsync(ctx workflow.Context, input *securityhub.DisassociateMembersInput) *SecurityHubDisassociateMembersFuture

	EnableImportFindingsForProduct(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) (*securityhub.EnableImportFindingsForProductOutput, error)
	EnableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) *SecurityHubEnableImportFindingsForProductFuture

	EnableSecurityHub(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) (*securityhub.EnableSecurityHubOutput, error)
	EnableSecurityHubAsync(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) *SecurityHubEnableSecurityHubFuture

	GetEnabledStandards(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) (*securityhub.GetEnabledStandardsOutput, error)
	GetEnabledStandardsAsync(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) *SecurityHubGetEnabledStandardsFuture

	GetFindings(ctx workflow.Context, input *securityhub.GetFindingsInput) (*securityhub.GetFindingsOutput, error)
	GetFindingsAsync(ctx workflow.Context, input *securityhub.GetFindingsInput) *SecurityHubGetFindingsFuture

	GetInsightResults(ctx workflow.Context, input *securityhub.GetInsightResultsInput) (*securityhub.GetInsightResultsOutput, error)
	GetInsightResultsAsync(ctx workflow.Context, input *securityhub.GetInsightResultsInput) *SecurityHubGetInsightResultsFuture

	GetInsights(ctx workflow.Context, input *securityhub.GetInsightsInput) (*securityhub.GetInsightsOutput, error)
	GetInsightsAsync(ctx workflow.Context, input *securityhub.GetInsightsInput) *SecurityHubGetInsightsFuture

	GetInvitationsCount(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) (*securityhub.GetInvitationsCountOutput, error)
	GetInvitationsCountAsync(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) *SecurityHubGetInvitationsCountFuture

	GetMasterAccount(ctx workflow.Context, input *securityhub.GetMasterAccountInput) (*securityhub.GetMasterAccountOutput, error)
	GetMasterAccountAsync(ctx workflow.Context, input *securityhub.GetMasterAccountInput) *SecurityHubGetMasterAccountFuture

	GetMembers(ctx workflow.Context, input *securityhub.GetMembersInput) (*securityhub.GetMembersOutput, error)
	GetMembersAsync(ctx workflow.Context, input *securityhub.GetMembersInput) *SecurityHubGetMembersFuture

	InviteMembers(ctx workflow.Context, input *securityhub.InviteMembersInput) (*securityhub.InviteMembersOutput, error)
	InviteMembersAsync(ctx workflow.Context, input *securityhub.InviteMembersInput) *SecurityHubInviteMembersFuture

	ListEnabledProductsForImport(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) (*securityhub.ListEnabledProductsForImportOutput, error)
	ListEnabledProductsForImportAsync(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) *SecurityHubListEnabledProductsForImportFuture

	ListInvitations(ctx workflow.Context, input *securityhub.ListInvitationsInput) (*securityhub.ListInvitationsOutput, error)
	ListInvitationsAsync(ctx workflow.Context, input *securityhub.ListInvitationsInput) *SecurityHubListInvitationsFuture

	ListMembers(ctx workflow.Context, input *securityhub.ListMembersInput) (*securityhub.ListMembersOutput, error)
	ListMembersAsync(ctx workflow.Context, input *securityhub.ListMembersInput) *SecurityHubListMembersFuture

	ListTagsForResource(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) (*securityhub.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) *SecurityHubListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *securityhub.TagResourceInput) (*securityhub.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *securityhub.TagResourceInput) *SecurityHubTagResourceFuture

	UntagResource(ctx workflow.Context, input *securityhub.UntagResourceInput) (*securityhub.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *securityhub.UntagResourceInput) *SecurityHubUntagResourceFuture

	UpdateActionTarget(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) (*securityhub.UpdateActionTargetOutput, error)
	UpdateActionTargetAsync(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) *SecurityHubUpdateActionTargetFuture

	UpdateFindings(ctx workflow.Context, input *securityhub.UpdateFindingsInput) (*securityhub.UpdateFindingsOutput, error)
	UpdateFindingsAsync(ctx workflow.Context, input *securityhub.UpdateFindingsInput) *SecurityHubUpdateFindingsFuture

	UpdateInsight(ctx workflow.Context, input *securityhub.UpdateInsightInput) (*securityhub.UpdateInsightOutput, error)
	UpdateInsightAsync(ctx workflow.Context, input *securityhub.UpdateInsightInput) *SecurityHubUpdateInsightFuture

	UpdateSecurityHubConfiguration(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error)
	UpdateSecurityHubConfigurationAsync(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) *SecurityHubUpdateSecurityHubConfigurationFuture

	UpdateStandardsControl(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error)
	UpdateStandardsControlAsync(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) *SecurityHubUpdateStandardsControlFuture
}

type SecurityHubStub struct{}

func NewSecurityHubStub() SecurityHubClient {
	return &SecurityHubStub{}
}

type SecurityHubAcceptInvitationFuture struct {
	Future workflow.Future
}

func (r *SecurityHubAcceptInvitationFuture) Get(ctx workflow.Context) (*securityhub.AcceptInvitationOutput, error) {
	var output securityhub.AcceptInvitationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubBatchDisableStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubBatchDisableStandardsFuture) Get(ctx workflow.Context) (*securityhub.BatchDisableStandardsOutput, error) {
	var output securityhub.BatchDisableStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubBatchEnableStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubBatchEnableStandardsFuture) Get(ctx workflow.Context) (*securityhub.BatchEnableStandardsOutput, error) {
	var output securityhub.BatchEnableStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubBatchImportFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubBatchImportFindingsFuture) Get(ctx workflow.Context) (*securityhub.BatchImportFindingsOutput, error) {
	var output securityhub.BatchImportFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubBatchUpdateFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubBatchUpdateFindingsFuture) Get(ctx workflow.Context) (*securityhub.BatchUpdateFindingsOutput, error) {
	var output securityhub.BatchUpdateFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubCreateActionTargetFuture struct {
	Future workflow.Future
}

func (r *SecurityHubCreateActionTargetFuture) Get(ctx workflow.Context) (*securityhub.CreateActionTargetOutput, error) {
	var output securityhub.CreateActionTargetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubCreateInsightFuture struct {
	Future workflow.Future
}

func (r *SecurityHubCreateInsightFuture) Get(ctx workflow.Context) (*securityhub.CreateInsightOutput, error) {
	var output securityhub.CreateInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubCreateMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityHubCreateMembersFuture) Get(ctx workflow.Context) (*securityhub.CreateMembersOutput, error) {
	var output securityhub.CreateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDeclineInvitationsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDeclineInvitationsFuture) Get(ctx workflow.Context) (*securityhub.DeclineInvitationsOutput, error) {
	var output securityhub.DeclineInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDeleteActionTargetFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDeleteActionTargetFuture) Get(ctx workflow.Context) (*securityhub.DeleteActionTargetOutput, error) {
	var output securityhub.DeleteActionTargetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDeleteInsightFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDeleteInsightFuture) Get(ctx workflow.Context) (*securityhub.DeleteInsightOutput, error) {
	var output securityhub.DeleteInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDeleteInvitationsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDeleteInvitationsFuture) Get(ctx workflow.Context) (*securityhub.DeleteInvitationsOutput, error) {
	var output securityhub.DeleteInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDeleteMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDeleteMembersFuture) Get(ctx workflow.Context) (*securityhub.DeleteMembersOutput, error) {
	var output securityhub.DeleteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDescribeActionTargetsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDescribeActionTargetsFuture) Get(ctx workflow.Context) (*securityhub.DescribeActionTargetsOutput, error) {
	var output securityhub.DescribeActionTargetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDescribeHubFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDescribeHubFuture) Get(ctx workflow.Context) (*securityhub.DescribeHubOutput, error) {
	var output securityhub.DescribeHubOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDescribeProductsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDescribeProductsFuture) Get(ctx workflow.Context) (*securityhub.DescribeProductsOutput, error) {
	var output securityhub.DescribeProductsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDescribeStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDescribeStandardsFuture) Get(ctx workflow.Context) (*securityhub.DescribeStandardsOutput, error) {
	var output securityhub.DescribeStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDescribeStandardsControlsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDescribeStandardsControlsFuture) Get(ctx workflow.Context) (*securityhub.DescribeStandardsControlsOutput, error) {
	var output securityhub.DescribeStandardsControlsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDisableImportFindingsForProductFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDisableImportFindingsForProductFuture) Get(ctx workflow.Context) (*securityhub.DisableImportFindingsForProductOutput, error) {
	var output securityhub.DisableImportFindingsForProductOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDisableSecurityHubFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDisableSecurityHubFuture) Get(ctx workflow.Context) (*securityhub.DisableSecurityHubOutput, error) {
	var output securityhub.DisableSecurityHubOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDisassociateFromMasterAccountFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDisassociateFromMasterAccountFuture) Get(ctx workflow.Context) (*securityhub.DisassociateFromMasterAccountOutput, error) {
	var output securityhub.DisassociateFromMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubDisassociateMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityHubDisassociateMembersFuture) Get(ctx workflow.Context) (*securityhub.DisassociateMembersOutput, error) {
	var output securityhub.DisassociateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubEnableImportFindingsForProductFuture struct {
	Future workflow.Future
}

func (r *SecurityHubEnableImportFindingsForProductFuture) Get(ctx workflow.Context) (*securityhub.EnableImportFindingsForProductOutput, error) {
	var output securityhub.EnableImportFindingsForProductOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubEnableSecurityHubFuture struct {
	Future workflow.Future
}

func (r *SecurityHubEnableSecurityHubFuture) Get(ctx workflow.Context) (*securityhub.EnableSecurityHubOutput, error) {
	var output securityhub.EnableSecurityHubOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetEnabledStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetEnabledStandardsFuture) Get(ctx workflow.Context) (*securityhub.GetEnabledStandardsOutput, error) {
	var output securityhub.GetEnabledStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetFindingsFuture) Get(ctx workflow.Context) (*securityhub.GetFindingsOutput, error) {
	var output securityhub.GetFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetInsightResultsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetInsightResultsFuture) Get(ctx workflow.Context) (*securityhub.GetInsightResultsOutput, error) {
	var output securityhub.GetInsightResultsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetInsightsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetInsightsFuture) Get(ctx workflow.Context) (*securityhub.GetInsightsOutput, error) {
	var output securityhub.GetInsightsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetInvitationsCountFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetInvitationsCountFuture) Get(ctx workflow.Context) (*securityhub.GetInvitationsCountOutput, error) {
	var output securityhub.GetInvitationsCountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetMasterAccountFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetMasterAccountFuture) Get(ctx workflow.Context) (*securityhub.GetMasterAccountOutput, error) {
	var output securityhub.GetMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubGetMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityHubGetMembersFuture) Get(ctx workflow.Context) (*securityhub.GetMembersOutput, error) {
	var output securityhub.GetMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubInviteMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityHubInviteMembersFuture) Get(ctx workflow.Context) (*securityhub.InviteMembersOutput, error) {
	var output securityhub.InviteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubListEnabledProductsForImportFuture struct {
	Future workflow.Future
}

func (r *SecurityHubListEnabledProductsForImportFuture) Get(ctx workflow.Context) (*securityhub.ListEnabledProductsForImportOutput, error) {
	var output securityhub.ListEnabledProductsForImportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubListInvitationsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubListInvitationsFuture) Get(ctx workflow.Context) (*securityhub.ListInvitationsOutput, error) {
	var output securityhub.ListInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubListMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityHubListMembersFuture) Get(ctx workflow.Context) (*securityhub.ListMembersOutput, error) {
	var output securityhub.ListMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *SecurityHubListTagsForResourceFuture) Get(ctx workflow.Context) (*securityhub.ListTagsForResourceOutput, error) {
	var output securityhub.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubTagResourceFuture struct {
	Future workflow.Future
}

func (r *SecurityHubTagResourceFuture) Get(ctx workflow.Context) (*securityhub.TagResourceOutput, error) {
	var output securityhub.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubUntagResourceFuture struct {
	Future workflow.Future
}

func (r *SecurityHubUntagResourceFuture) Get(ctx workflow.Context) (*securityhub.UntagResourceOutput, error) {
	var output securityhub.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubUpdateActionTargetFuture struct {
	Future workflow.Future
}

func (r *SecurityHubUpdateActionTargetFuture) Get(ctx workflow.Context) (*securityhub.UpdateActionTargetOutput, error) {
	var output securityhub.UpdateActionTargetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubUpdateFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityHubUpdateFindingsFuture) Get(ctx workflow.Context) (*securityhub.UpdateFindingsOutput, error) {
	var output securityhub.UpdateFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubUpdateInsightFuture struct {
	Future workflow.Future
}

func (r *SecurityHubUpdateInsightFuture) Get(ctx workflow.Context) (*securityhub.UpdateInsightOutput, error) {
	var output securityhub.UpdateInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubUpdateSecurityHubConfigurationFuture struct {
	Future workflow.Future
}

func (r *SecurityHubUpdateSecurityHubConfigurationFuture) Get(ctx workflow.Context) (*securityhub.UpdateSecurityHubConfigurationOutput, error) {
	var output securityhub.UpdateSecurityHubConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityHubUpdateStandardsControlFuture struct {
	Future workflow.Future
}

func (r *SecurityHubUpdateStandardsControlFuture) Get(ctx workflow.Context) (*securityhub.UpdateStandardsControlOutput, error) {
	var output securityhub.UpdateStandardsControlOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) AcceptInvitation(ctx workflow.Context, input *securityhub.AcceptInvitationInput) (*securityhub.AcceptInvitationOutput, error) {
	var output securityhub.AcceptInvitationOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.AcceptInvitation", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) AcceptInvitationAsync(ctx workflow.Context, input *securityhub.AcceptInvitationInput) *SecurityHubAcceptInvitationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.AcceptInvitation", input)
	return &SecurityHubAcceptInvitationFuture{Future: future}
}

func (a *SecurityHubStub) BatchDisableStandards(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) (*securityhub.BatchDisableStandardsOutput, error) {
	var output securityhub.BatchDisableStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchDisableStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchDisableStandardsAsync(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) *SecurityHubBatchDisableStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchDisableStandards", input)
	return &SecurityHubBatchDisableStandardsFuture{Future: future}
}

func (a *SecurityHubStub) BatchEnableStandards(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) (*securityhub.BatchEnableStandardsOutput, error) {
	var output securityhub.BatchEnableStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchEnableStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchEnableStandardsAsync(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) *SecurityHubBatchEnableStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchEnableStandards", input)
	return &SecurityHubBatchEnableStandardsFuture{Future: future}
}

func (a *SecurityHubStub) BatchImportFindings(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) (*securityhub.BatchImportFindingsOutput, error) {
	var output securityhub.BatchImportFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchImportFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchImportFindingsAsync(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) *SecurityHubBatchImportFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchImportFindings", input)
	return &SecurityHubBatchImportFindingsFuture{Future: future}
}

func (a *SecurityHubStub) BatchUpdateFindings(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) (*securityhub.BatchUpdateFindingsOutput, error) {
	var output securityhub.BatchUpdateFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchUpdateFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchUpdateFindingsAsync(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) *SecurityHubBatchUpdateFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchUpdateFindings", input)
	return &SecurityHubBatchUpdateFindingsFuture{Future: future}
}

func (a *SecurityHubStub) CreateActionTarget(ctx workflow.Context, input *securityhub.CreateActionTargetInput) (*securityhub.CreateActionTargetOutput, error) {
	var output securityhub.CreateActionTargetOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateActionTarget", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) CreateActionTargetAsync(ctx workflow.Context, input *securityhub.CreateActionTargetInput) *SecurityHubCreateActionTargetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateActionTarget", input)
	return &SecurityHubCreateActionTargetFuture{Future: future}
}

func (a *SecurityHubStub) CreateInsight(ctx workflow.Context, input *securityhub.CreateInsightInput) (*securityhub.CreateInsightOutput, error) {
	var output securityhub.CreateInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) CreateInsightAsync(ctx workflow.Context, input *securityhub.CreateInsightInput) *SecurityHubCreateInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateInsight", input)
	return &SecurityHubCreateInsightFuture{Future: future}
}

func (a *SecurityHubStub) CreateMembers(ctx workflow.Context, input *securityhub.CreateMembersInput) (*securityhub.CreateMembersOutput, error) {
	var output securityhub.CreateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) CreateMembersAsync(ctx workflow.Context, input *securityhub.CreateMembersInput) *SecurityHubCreateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateMembers", input)
	return &SecurityHubCreateMembersFuture{Future: future}
}

func (a *SecurityHubStub) DeclineInvitations(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) (*securityhub.DeclineInvitationsOutput, error) {
	var output securityhub.DeclineInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeclineInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeclineInvitationsAsync(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) *SecurityHubDeclineInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeclineInvitations", input)
	return &SecurityHubDeclineInvitationsFuture{Future: future}
}

func (a *SecurityHubStub) DeleteActionTarget(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) (*securityhub.DeleteActionTargetOutput, error) {
	var output securityhub.DeleteActionTargetOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteActionTarget", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteActionTargetAsync(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) *SecurityHubDeleteActionTargetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteActionTarget", input)
	return &SecurityHubDeleteActionTargetFuture{Future: future}
}

func (a *SecurityHubStub) DeleteInsight(ctx workflow.Context, input *securityhub.DeleteInsightInput) (*securityhub.DeleteInsightOutput, error) {
	var output securityhub.DeleteInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteInsightAsync(ctx workflow.Context, input *securityhub.DeleteInsightInput) *SecurityHubDeleteInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInsight", input)
	return &SecurityHubDeleteInsightFuture{Future: future}
}

func (a *SecurityHubStub) DeleteInvitations(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) (*securityhub.DeleteInvitationsOutput, error) {
	var output securityhub.DeleteInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteInvitationsAsync(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) *SecurityHubDeleteInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInvitations", input)
	return &SecurityHubDeleteInvitationsFuture{Future: future}
}

func (a *SecurityHubStub) DeleteMembers(ctx workflow.Context, input *securityhub.DeleteMembersInput) (*securityhub.DeleteMembersOutput, error) {
	var output securityhub.DeleteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteMembersAsync(ctx workflow.Context, input *securityhub.DeleteMembersInput) *SecurityHubDeleteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteMembers", input)
	return &SecurityHubDeleteMembersFuture{Future: future}
}

func (a *SecurityHubStub) DescribeActionTargets(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) (*securityhub.DescribeActionTargetsOutput, error) {
	var output securityhub.DescribeActionTargetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeActionTargets", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeActionTargetsAsync(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) *SecurityHubDescribeActionTargetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeActionTargets", input)
	return &SecurityHubDescribeActionTargetsFuture{Future: future}
}

func (a *SecurityHubStub) DescribeHub(ctx workflow.Context, input *securityhub.DescribeHubInput) (*securityhub.DescribeHubOutput, error) {
	var output securityhub.DescribeHubOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeHub", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeHubAsync(ctx workflow.Context, input *securityhub.DescribeHubInput) *SecurityHubDescribeHubFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeHub", input)
	return &SecurityHubDescribeHubFuture{Future: future}
}

func (a *SecurityHubStub) DescribeProducts(ctx workflow.Context, input *securityhub.DescribeProductsInput) (*securityhub.DescribeProductsOutput, error) {
	var output securityhub.DescribeProductsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeProducts", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeProductsAsync(ctx workflow.Context, input *securityhub.DescribeProductsInput) *SecurityHubDescribeProductsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeProducts", input)
	return &SecurityHubDescribeProductsFuture{Future: future}
}

func (a *SecurityHubStub) DescribeStandards(ctx workflow.Context, input *securityhub.DescribeStandardsInput) (*securityhub.DescribeStandardsOutput, error) {
	var output securityhub.DescribeStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeStandardsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsInput) *SecurityHubDescribeStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandards", input)
	return &SecurityHubDescribeStandardsFuture{Future: future}
}

func (a *SecurityHubStub) DescribeStandardsControls(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) (*securityhub.DescribeStandardsControlsOutput, error) {
	var output securityhub.DescribeStandardsControlsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandardsControls", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeStandardsControlsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) *SecurityHubDescribeStandardsControlsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandardsControls", input)
	return &SecurityHubDescribeStandardsControlsFuture{Future: future}
}

func (a *SecurityHubStub) DisableImportFindingsForProduct(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) (*securityhub.DisableImportFindingsForProductOutput, error) {
	var output securityhub.DisableImportFindingsForProductOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableImportFindingsForProduct", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) *SecurityHubDisableImportFindingsForProductFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableImportFindingsForProduct", input)
	return &SecurityHubDisableImportFindingsForProductFuture{Future: future}
}

func (a *SecurityHubStub) DisableSecurityHub(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) (*securityhub.DisableSecurityHubOutput, error) {
	var output securityhub.DisableSecurityHubOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableSecurityHub", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisableSecurityHubAsync(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) *SecurityHubDisableSecurityHubFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableSecurityHub", input)
	return &SecurityHubDisableSecurityHubFuture{Future: future}
}

func (a *SecurityHubStub) DisassociateFromMasterAccount(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) (*securityhub.DisassociateFromMasterAccountOutput, error) {
	var output securityhub.DisassociateFromMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateFromMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisassociateFromMasterAccountAsync(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) *SecurityHubDisassociateFromMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateFromMasterAccount", input)
	return &SecurityHubDisassociateFromMasterAccountFuture{Future: future}
}

func (a *SecurityHubStub) DisassociateMembers(ctx workflow.Context, input *securityhub.DisassociateMembersInput) (*securityhub.DisassociateMembersOutput, error) {
	var output securityhub.DisassociateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisassociateMembersAsync(ctx workflow.Context, input *securityhub.DisassociateMembersInput) *SecurityHubDisassociateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateMembers", input)
	return &SecurityHubDisassociateMembersFuture{Future: future}
}

func (a *SecurityHubStub) EnableImportFindingsForProduct(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) (*securityhub.EnableImportFindingsForProductOutput, error) {
	var output securityhub.EnableImportFindingsForProductOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableImportFindingsForProduct", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) EnableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) *SecurityHubEnableImportFindingsForProductFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableImportFindingsForProduct", input)
	return &SecurityHubEnableImportFindingsForProductFuture{Future: future}
}

func (a *SecurityHubStub) EnableSecurityHub(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) (*securityhub.EnableSecurityHubOutput, error) {
	var output securityhub.EnableSecurityHubOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableSecurityHub", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) EnableSecurityHubAsync(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) *SecurityHubEnableSecurityHubFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableSecurityHub", input)
	return &SecurityHubEnableSecurityHubFuture{Future: future}
}

func (a *SecurityHubStub) GetEnabledStandards(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) (*securityhub.GetEnabledStandardsOutput, error) {
	var output securityhub.GetEnabledStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetEnabledStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetEnabledStandardsAsync(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) *SecurityHubGetEnabledStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetEnabledStandards", input)
	return &SecurityHubGetEnabledStandardsFuture{Future: future}
}

func (a *SecurityHubStub) GetFindings(ctx workflow.Context, input *securityhub.GetFindingsInput) (*securityhub.GetFindingsOutput, error) {
	var output securityhub.GetFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetFindingsAsync(ctx workflow.Context, input *securityhub.GetFindingsInput) *SecurityHubGetFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetFindings", input)
	return &SecurityHubGetFindingsFuture{Future: future}
}

func (a *SecurityHubStub) GetInsightResults(ctx workflow.Context, input *securityhub.GetInsightResultsInput) (*securityhub.GetInsightResultsOutput, error) {
	var output securityhub.GetInsightResultsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsightResults", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetInsightResultsAsync(ctx workflow.Context, input *securityhub.GetInsightResultsInput) *SecurityHubGetInsightResultsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsightResults", input)
	return &SecurityHubGetInsightResultsFuture{Future: future}
}

func (a *SecurityHubStub) GetInsights(ctx workflow.Context, input *securityhub.GetInsightsInput) (*securityhub.GetInsightsOutput, error) {
	var output securityhub.GetInsightsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsights", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetInsightsAsync(ctx workflow.Context, input *securityhub.GetInsightsInput) *SecurityHubGetInsightsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsights", input)
	return &SecurityHubGetInsightsFuture{Future: future}
}

func (a *SecurityHubStub) GetInvitationsCount(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) (*securityhub.GetInvitationsCountOutput, error) {
	var output securityhub.GetInvitationsCountOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInvitationsCount", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetInvitationsCountAsync(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) *SecurityHubGetInvitationsCountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInvitationsCount", input)
	return &SecurityHubGetInvitationsCountFuture{Future: future}
}

func (a *SecurityHubStub) GetMasterAccount(ctx workflow.Context, input *securityhub.GetMasterAccountInput) (*securityhub.GetMasterAccountOutput, error) {
	var output securityhub.GetMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetMasterAccountAsync(ctx workflow.Context, input *securityhub.GetMasterAccountInput) *SecurityHubGetMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMasterAccount", input)
	return &SecurityHubGetMasterAccountFuture{Future: future}
}

func (a *SecurityHubStub) GetMembers(ctx workflow.Context, input *securityhub.GetMembersInput) (*securityhub.GetMembersOutput, error) {
	var output securityhub.GetMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetMembersAsync(ctx workflow.Context, input *securityhub.GetMembersInput) *SecurityHubGetMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMembers", input)
	return &SecurityHubGetMembersFuture{Future: future}
}

func (a *SecurityHubStub) InviteMembers(ctx workflow.Context, input *securityhub.InviteMembersInput) (*securityhub.InviteMembersOutput, error) {
	var output securityhub.InviteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.InviteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) InviteMembersAsync(ctx workflow.Context, input *securityhub.InviteMembersInput) *SecurityHubInviteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.InviteMembers", input)
	return &SecurityHubInviteMembersFuture{Future: future}
}

func (a *SecurityHubStub) ListEnabledProductsForImport(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) (*securityhub.ListEnabledProductsForImportOutput, error) {
	var output securityhub.ListEnabledProductsForImportOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListEnabledProductsForImport", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListEnabledProductsForImportAsync(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) *SecurityHubListEnabledProductsForImportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListEnabledProductsForImport", input)
	return &SecurityHubListEnabledProductsForImportFuture{Future: future}
}

func (a *SecurityHubStub) ListInvitations(ctx workflow.Context, input *securityhub.ListInvitationsInput) (*securityhub.ListInvitationsOutput, error) {
	var output securityhub.ListInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListInvitationsAsync(ctx workflow.Context, input *securityhub.ListInvitationsInput) *SecurityHubListInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListInvitations", input)
	return &SecurityHubListInvitationsFuture{Future: future}
}

func (a *SecurityHubStub) ListMembers(ctx workflow.Context, input *securityhub.ListMembersInput) (*securityhub.ListMembersOutput, error) {
	var output securityhub.ListMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListMembersAsync(ctx workflow.Context, input *securityhub.ListMembersInput) *SecurityHubListMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListMembers", input)
	return &SecurityHubListMembersFuture{Future: future}
}

func (a *SecurityHubStub) ListTagsForResource(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) (*securityhub.ListTagsForResourceOutput, error) {
	var output securityhub.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListTagsForResourceAsync(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) *SecurityHubListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListTagsForResource", input)
	return &SecurityHubListTagsForResourceFuture{Future: future}
}

func (a *SecurityHubStub) TagResource(ctx workflow.Context, input *securityhub.TagResourceInput) (*securityhub.TagResourceOutput, error) {
	var output securityhub.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) TagResourceAsync(ctx workflow.Context, input *securityhub.TagResourceInput) *SecurityHubTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.TagResource", input)
	return &SecurityHubTagResourceFuture{Future: future}
}

func (a *SecurityHubStub) UntagResource(ctx workflow.Context, input *securityhub.UntagResourceInput) (*securityhub.UntagResourceOutput, error) {
	var output securityhub.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UntagResourceAsync(ctx workflow.Context, input *securityhub.UntagResourceInput) *SecurityHubUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UntagResource", input)
	return &SecurityHubUntagResourceFuture{Future: future}
}

func (a *SecurityHubStub) UpdateActionTarget(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) (*securityhub.UpdateActionTargetOutput, error) {
	var output securityhub.UpdateActionTargetOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateActionTarget", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateActionTargetAsync(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) *SecurityHubUpdateActionTargetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateActionTarget", input)
	return &SecurityHubUpdateActionTargetFuture{Future: future}
}

func (a *SecurityHubStub) UpdateFindings(ctx workflow.Context, input *securityhub.UpdateFindingsInput) (*securityhub.UpdateFindingsOutput, error) {
	var output securityhub.UpdateFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateFindingsAsync(ctx workflow.Context, input *securityhub.UpdateFindingsInput) *SecurityHubUpdateFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateFindings", input)
	return &SecurityHubUpdateFindingsFuture{Future: future}
}

func (a *SecurityHubStub) UpdateInsight(ctx workflow.Context, input *securityhub.UpdateInsightInput) (*securityhub.UpdateInsightOutput, error) {
	var output securityhub.UpdateInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateInsightAsync(ctx workflow.Context, input *securityhub.UpdateInsightInput) *SecurityHubUpdateInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateInsight", input)
	return &SecurityHubUpdateInsightFuture{Future: future}
}

func (a *SecurityHubStub) UpdateSecurityHubConfiguration(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error) {
	var output securityhub.UpdateSecurityHubConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateSecurityHubConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateSecurityHubConfigurationAsync(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) *SecurityHubUpdateSecurityHubConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateSecurityHubConfiguration", input)
	return &SecurityHubUpdateSecurityHubConfigurationFuture{Future: future}
}

func (a *SecurityHubStub) UpdateStandardsControl(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error) {
	var output securityhub.UpdateStandardsControlOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateStandardsControl", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateStandardsControlAsync(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) *SecurityHubUpdateStandardsControlFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateStandardsControl", input)
	return &SecurityHubUpdateStandardsControlFuture{Future: future}
}
