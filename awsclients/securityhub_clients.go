// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/securityhub"
	"go.temporal.io/sdk/workflow"
)

type SecurityHubClient interface {
	AcceptInvitation(ctx workflow.Context, input *securityhub.AcceptInvitationInput) (*securityhub.AcceptInvitationOutput, error)
	AcceptInvitationAsync(ctx workflow.Context, input *securityhub.AcceptInvitationInput) *SecurityhubAcceptInvitationFuture

	BatchDisableStandards(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) (*securityhub.BatchDisableStandardsOutput, error)
	BatchDisableStandardsAsync(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) *SecurityhubBatchDisableStandardsFuture

	BatchEnableStandards(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) (*securityhub.BatchEnableStandardsOutput, error)
	BatchEnableStandardsAsync(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) *SecurityhubBatchEnableStandardsFuture

	BatchImportFindings(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) (*securityhub.BatchImportFindingsOutput, error)
	BatchImportFindingsAsync(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) *SecurityhubBatchImportFindingsFuture

	BatchUpdateFindings(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) (*securityhub.BatchUpdateFindingsOutput, error)
	BatchUpdateFindingsAsync(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) *SecurityhubBatchUpdateFindingsFuture

	CreateActionTarget(ctx workflow.Context, input *securityhub.CreateActionTargetInput) (*securityhub.CreateActionTargetOutput, error)
	CreateActionTargetAsync(ctx workflow.Context, input *securityhub.CreateActionTargetInput) *SecurityhubCreateActionTargetFuture

	CreateInsight(ctx workflow.Context, input *securityhub.CreateInsightInput) (*securityhub.CreateInsightOutput, error)
	CreateInsightAsync(ctx workflow.Context, input *securityhub.CreateInsightInput) *SecurityhubCreateInsightFuture

	CreateMembers(ctx workflow.Context, input *securityhub.CreateMembersInput) (*securityhub.CreateMembersOutput, error)
	CreateMembersAsync(ctx workflow.Context, input *securityhub.CreateMembersInput) *SecurityhubCreateMembersFuture

	DeclineInvitations(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) (*securityhub.DeclineInvitationsOutput, error)
	DeclineInvitationsAsync(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) *SecurityhubDeclineInvitationsFuture

	DeleteActionTarget(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) (*securityhub.DeleteActionTargetOutput, error)
	DeleteActionTargetAsync(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) *SecurityhubDeleteActionTargetFuture

	DeleteInsight(ctx workflow.Context, input *securityhub.DeleteInsightInput) (*securityhub.DeleteInsightOutput, error)
	DeleteInsightAsync(ctx workflow.Context, input *securityhub.DeleteInsightInput) *SecurityhubDeleteInsightFuture

	DeleteInvitations(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) (*securityhub.DeleteInvitationsOutput, error)
	DeleteInvitationsAsync(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) *SecurityhubDeleteInvitationsFuture

	DeleteMembers(ctx workflow.Context, input *securityhub.DeleteMembersInput) (*securityhub.DeleteMembersOutput, error)
	DeleteMembersAsync(ctx workflow.Context, input *securityhub.DeleteMembersInput) *SecurityhubDeleteMembersFuture

	DescribeActionTargets(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) (*securityhub.DescribeActionTargetsOutput, error)
	DescribeActionTargetsAsync(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) *SecurityhubDescribeActionTargetsFuture

	DescribeHub(ctx workflow.Context, input *securityhub.DescribeHubInput) (*securityhub.DescribeHubOutput, error)
	DescribeHubAsync(ctx workflow.Context, input *securityhub.DescribeHubInput) *SecurityhubDescribeHubFuture

	DescribeProducts(ctx workflow.Context, input *securityhub.DescribeProductsInput) (*securityhub.DescribeProductsOutput, error)
	DescribeProductsAsync(ctx workflow.Context, input *securityhub.DescribeProductsInput) *SecurityhubDescribeProductsFuture

	DescribeStandards(ctx workflow.Context, input *securityhub.DescribeStandardsInput) (*securityhub.DescribeStandardsOutput, error)
	DescribeStandardsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsInput) *SecurityhubDescribeStandardsFuture

	DescribeStandardsControls(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) (*securityhub.DescribeStandardsControlsOutput, error)
	DescribeStandardsControlsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) *SecurityhubDescribeStandardsControlsFuture

	DisableImportFindingsForProduct(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) (*securityhub.DisableImportFindingsForProductOutput, error)
	DisableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) *SecurityhubDisableImportFindingsForProductFuture

	DisableSecurityHub(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) (*securityhub.DisableSecurityHubOutput, error)
	DisableSecurityHubAsync(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) *SecurityhubDisableSecurityHubFuture

	DisassociateFromMasterAccount(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) (*securityhub.DisassociateFromMasterAccountOutput, error)
	DisassociateFromMasterAccountAsync(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) *SecurityhubDisassociateFromMasterAccountFuture

	DisassociateMembers(ctx workflow.Context, input *securityhub.DisassociateMembersInput) (*securityhub.DisassociateMembersOutput, error)
	DisassociateMembersAsync(ctx workflow.Context, input *securityhub.DisassociateMembersInput) *SecurityhubDisassociateMembersFuture

	EnableImportFindingsForProduct(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) (*securityhub.EnableImportFindingsForProductOutput, error)
	EnableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) *SecurityhubEnableImportFindingsForProductFuture

	EnableSecurityHub(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) (*securityhub.EnableSecurityHubOutput, error)
	EnableSecurityHubAsync(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) *SecurityhubEnableSecurityHubFuture

	GetEnabledStandards(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) (*securityhub.GetEnabledStandardsOutput, error)
	GetEnabledStandardsAsync(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) *SecurityhubGetEnabledStandardsFuture

	GetFindings(ctx workflow.Context, input *securityhub.GetFindingsInput) (*securityhub.GetFindingsOutput, error)
	GetFindingsAsync(ctx workflow.Context, input *securityhub.GetFindingsInput) *SecurityhubGetFindingsFuture

	GetInsightResults(ctx workflow.Context, input *securityhub.GetInsightResultsInput) (*securityhub.GetInsightResultsOutput, error)
	GetInsightResultsAsync(ctx workflow.Context, input *securityhub.GetInsightResultsInput) *SecurityhubGetInsightResultsFuture

	GetInsights(ctx workflow.Context, input *securityhub.GetInsightsInput) (*securityhub.GetInsightsOutput, error)
	GetInsightsAsync(ctx workflow.Context, input *securityhub.GetInsightsInput) *SecurityhubGetInsightsFuture

	GetInvitationsCount(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) (*securityhub.GetInvitationsCountOutput, error)
	GetInvitationsCountAsync(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) *SecurityhubGetInvitationsCountFuture

	GetMasterAccount(ctx workflow.Context, input *securityhub.GetMasterAccountInput) (*securityhub.GetMasterAccountOutput, error)
	GetMasterAccountAsync(ctx workflow.Context, input *securityhub.GetMasterAccountInput) *SecurityhubGetMasterAccountFuture

	GetMembers(ctx workflow.Context, input *securityhub.GetMembersInput) (*securityhub.GetMembersOutput, error)
	GetMembersAsync(ctx workflow.Context, input *securityhub.GetMembersInput) *SecurityhubGetMembersFuture

	InviteMembers(ctx workflow.Context, input *securityhub.InviteMembersInput) (*securityhub.InviteMembersOutput, error)
	InviteMembersAsync(ctx workflow.Context, input *securityhub.InviteMembersInput) *SecurityhubInviteMembersFuture

	ListEnabledProductsForImport(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) (*securityhub.ListEnabledProductsForImportOutput, error)
	ListEnabledProductsForImportAsync(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) *SecurityhubListEnabledProductsForImportFuture

	ListInvitations(ctx workflow.Context, input *securityhub.ListInvitationsInput) (*securityhub.ListInvitationsOutput, error)
	ListInvitationsAsync(ctx workflow.Context, input *securityhub.ListInvitationsInput) *SecurityhubListInvitationsFuture

	ListMembers(ctx workflow.Context, input *securityhub.ListMembersInput) (*securityhub.ListMembersOutput, error)
	ListMembersAsync(ctx workflow.Context, input *securityhub.ListMembersInput) *SecurityhubListMembersFuture

	ListTagsForResource(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) (*securityhub.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) *SecurityhubListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *securityhub.TagResourceInput) (*securityhub.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *securityhub.TagResourceInput) *SecurityhubTagResourceFuture

	UntagResource(ctx workflow.Context, input *securityhub.UntagResourceInput) (*securityhub.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *securityhub.UntagResourceInput) *SecurityhubUntagResourceFuture

	UpdateActionTarget(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) (*securityhub.UpdateActionTargetOutput, error)
	UpdateActionTargetAsync(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) *SecurityhubUpdateActionTargetFuture

	UpdateFindings(ctx workflow.Context, input *securityhub.UpdateFindingsInput) (*securityhub.UpdateFindingsOutput, error)
	UpdateFindingsAsync(ctx workflow.Context, input *securityhub.UpdateFindingsInput) *SecurityhubUpdateFindingsFuture

	UpdateInsight(ctx workflow.Context, input *securityhub.UpdateInsightInput) (*securityhub.UpdateInsightOutput, error)
	UpdateInsightAsync(ctx workflow.Context, input *securityhub.UpdateInsightInput) *SecurityhubUpdateInsightFuture

	UpdateSecurityHubConfiguration(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error)
	UpdateSecurityHubConfigurationAsync(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) *SecurityhubUpdateSecurityHubConfigurationFuture

	UpdateStandardsControl(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error)
	UpdateStandardsControlAsync(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) *SecurityhubUpdateStandardsControlFuture
}

type SecurityHubStub struct{}

func NewSecurityHubStub() SecurityHubClient {
	return &SecurityHubStub{}
}

type SecurityhubAcceptInvitationFuture struct {
	Future workflow.Future
}

func (r *SecurityhubAcceptInvitationFuture) Get(ctx workflow.Context) (*securityhub.AcceptInvitationOutput, error) {
	var output securityhub.AcceptInvitationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubBatchDisableStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubBatchDisableStandardsFuture) Get(ctx workflow.Context) (*securityhub.BatchDisableStandardsOutput, error) {
	var output securityhub.BatchDisableStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubBatchEnableStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubBatchEnableStandardsFuture) Get(ctx workflow.Context) (*securityhub.BatchEnableStandardsOutput, error) {
	var output securityhub.BatchEnableStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubBatchImportFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubBatchImportFindingsFuture) Get(ctx workflow.Context) (*securityhub.BatchImportFindingsOutput, error) {
	var output securityhub.BatchImportFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubBatchUpdateFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubBatchUpdateFindingsFuture) Get(ctx workflow.Context) (*securityhub.BatchUpdateFindingsOutput, error) {
	var output securityhub.BatchUpdateFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubCreateActionTargetFuture struct {
	Future workflow.Future
}

func (r *SecurityhubCreateActionTargetFuture) Get(ctx workflow.Context) (*securityhub.CreateActionTargetOutput, error) {
	var output securityhub.CreateActionTargetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubCreateInsightFuture struct {
	Future workflow.Future
}

func (r *SecurityhubCreateInsightFuture) Get(ctx workflow.Context) (*securityhub.CreateInsightOutput, error) {
	var output securityhub.CreateInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubCreateMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityhubCreateMembersFuture) Get(ctx workflow.Context) (*securityhub.CreateMembersOutput, error) {
	var output securityhub.CreateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDeclineInvitationsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDeclineInvitationsFuture) Get(ctx workflow.Context) (*securityhub.DeclineInvitationsOutput, error) {
	var output securityhub.DeclineInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDeleteActionTargetFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDeleteActionTargetFuture) Get(ctx workflow.Context) (*securityhub.DeleteActionTargetOutput, error) {
	var output securityhub.DeleteActionTargetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDeleteInsightFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDeleteInsightFuture) Get(ctx workflow.Context) (*securityhub.DeleteInsightOutput, error) {
	var output securityhub.DeleteInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDeleteInvitationsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDeleteInvitationsFuture) Get(ctx workflow.Context) (*securityhub.DeleteInvitationsOutput, error) {
	var output securityhub.DeleteInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDeleteMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDeleteMembersFuture) Get(ctx workflow.Context) (*securityhub.DeleteMembersOutput, error) {
	var output securityhub.DeleteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDescribeActionTargetsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDescribeActionTargetsFuture) Get(ctx workflow.Context) (*securityhub.DescribeActionTargetsOutput, error) {
	var output securityhub.DescribeActionTargetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDescribeHubFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDescribeHubFuture) Get(ctx workflow.Context) (*securityhub.DescribeHubOutput, error) {
	var output securityhub.DescribeHubOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDescribeProductsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDescribeProductsFuture) Get(ctx workflow.Context) (*securityhub.DescribeProductsOutput, error) {
	var output securityhub.DescribeProductsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDescribeStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDescribeStandardsFuture) Get(ctx workflow.Context) (*securityhub.DescribeStandardsOutput, error) {
	var output securityhub.DescribeStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDescribeStandardsControlsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDescribeStandardsControlsFuture) Get(ctx workflow.Context) (*securityhub.DescribeStandardsControlsOutput, error) {
	var output securityhub.DescribeStandardsControlsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDisableImportFindingsForProductFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDisableImportFindingsForProductFuture) Get(ctx workflow.Context) (*securityhub.DisableImportFindingsForProductOutput, error) {
	var output securityhub.DisableImportFindingsForProductOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDisableSecurityHubFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDisableSecurityHubFuture) Get(ctx workflow.Context) (*securityhub.DisableSecurityHubOutput, error) {
	var output securityhub.DisableSecurityHubOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDisassociateFromMasterAccountFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDisassociateFromMasterAccountFuture) Get(ctx workflow.Context) (*securityhub.DisassociateFromMasterAccountOutput, error) {
	var output securityhub.DisassociateFromMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubDisassociateMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityhubDisassociateMembersFuture) Get(ctx workflow.Context) (*securityhub.DisassociateMembersOutput, error) {
	var output securityhub.DisassociateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubEnableImportFindingsForProductFuture struct {
	Future workflow.Future
}

func (r *SecurityhubEnableImportFindingsForProductFuture) Get(ctx workflow.Context) (*securityhub.EnableImportFindingsForProductOutput, error) {
	var output securityhub.EnableImportFindingsForProductOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubEnableSecurityHubFuture struct {
	Future workflow.Future
}

func (r *SecurityhubEnableSecurityHubFuture) Get(ctx workflow.Context) (*securityhub.EnableSecurityHubOutput, error) {
	var output securityhub.EnableSecurityHubOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetEnabledStandardsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetEnabledStandardsFuture) Get(ctx workflow.Context) (*securityhub.GetEnabledStandardsOutput, error) {
	var output securityhub.GetEnabledStandardsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetFindingsFuture) Get(ctx workflow.Context) (*securityhub.GetFindingsOutput, error) {
	var output securityhub.GetFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetInsightResultsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetInsightResultsFuture) Get(ctx workflow.Context) (*securityhub.GetInsightResultsOutput, error) {
	var output securityhub.GetInsightResultsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetInsightsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetInsightsFuture) Get(ctx workflow.Context) (*securityhub.GetInsightsOutput, error) {
	var output securityhub.GetInsightsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetInvitationsCountFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetInvitationsCountFuture) Get(ctx workflow.Context) (*securityhub.GetInvitationsCountOutput, error) {
	var output securityhub.GetInvitationsCountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetMasterAccountFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetMasterAccountFuture) Get(ctx workflow.Context) (*securityhub.GetMasterAccountOutput, error) {
	var output securityhub.GetMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubGetMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityhubGetMembersFuture) Get(ctx workflow.Context) (*securityhub.GetMembersOutput, error) {
	var output securityhub.GetMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubInviteMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityhubInviteMembersFuture) Get(ctx workflow.Context) (*securityhub.InviteMembersOutput, error) {
	var output securityhub.InviteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubListEnabledProductsForImportFuture struct {
	Future workflow.Future
}

func (r *SecurityhubListEnabledProductsForImportFuture) Get(ctx workflow.Context) (*securityhub.ListEnabledProductsForImportOutput, error) {
	var output securityhub.ListEnabledProductsForImportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubListInvitationsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubListInvitationsFuture) Get(ctx workflow.Context) (*securityhub.ListInvitationsOutput, error) {
	var output securityhub.ListInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubListMembersFuture struct {
	Future workflow.Future
}

func (r *SecurityhubListMembersFuture) Get(ctx workflow.Context) (*securityhub.ListMembersOutput, error) {
	var output securityhub.ListMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *SecurityhubListTagsForResourceFuture) Get(ctx workflow.Context) (*securityhub.ListTagsForResourceOutput, error) {
	var output securityhub.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubTagResourceFuture struct {
	Future workflow.Future
}

func (r *SecurityhubTagResourceFuture) Get(ctx workflow.Context) (*securityhub.TagResourceOutput, error) {
	var output securityhub.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubUntagResourceFuture struct {
	Future workflow.Future
}

func (r *SecurityhubUntagResourceFuture) Get(ctx workflow.Context) (*securityhub.UntagResourceOutput, error) {
	var output securityhub.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubUpdateActionTargetFuture struct {
	Future workflow.Future
}

func (r *SecurityhubUpdateActionTargetFuture) Get(ctx workflow.Context) (*securityhub.UpdateActionTargetOutput, error) {
	var output securityhub.UpdateActionTargetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubUpdateFindingsFuture struct {
	Future workflow.Future
}

func (r *SecurityhubUpdateFindingsFuture) Get(ctx workflow.Context) (*securityhub.UpdateFindingsOutput, error) {
	var output securityhub.UpdateFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubUpdateInsightFuture struct {
	Future workflow.Future
}

func (r *SecurityhubUpdateInsightFuture) Get(ctx workflow.Context) (*securityhub.UpdateInsightOutput, error) {
	var output securityhub.UpdateInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubUpdateSecurityHubConfigurationFuture struct {
	Future workflow.Future
}

func (r *SecurityhubUpdateSecurityHubConfigurationFuture) Get(ctx workflow.Context) (*securityhub.UpdateSecurityHubConfigurationOutput, error) {
	var output securityhub.UpdateSecurityHubConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SecurityhubUpdateStandardsControlFuture struct {
	Future workflow.Future
}

func (r *SecurityhubUpdateStandardsControlFuture) Get(ctx workflow.Context) (*securityhub.UpdateStandardsControlOutput, error) {
	var output securityhub.UpdateStandardsControlOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) AcceptInvitation(ctx workflow.Context, input *securityhub.AcceptInvitationInput) (*securityhub.AcceptInvitationOutput, error) {
	var output securityhub.AcceptInvitationOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.AcceptInvitation", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) AcceptInvitationAsync(ctx workflow.Context, input *securityhub.AcceptInvitationInput) *SecurityhubAcceptInvitationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.AcceptInvitation", input)
	return &SecurityhubAcceptInvitationFuture{Future: future}
}

func (a *SecurityHubStub) BatchDisableStandards(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) (*securityhub.BatchDisableStandardsOutput, error) {
	var output securityhub.BatchDisableStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchDisableStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchDisableStandardsAsync(ctx workflow.Context, input *securityhub.BatchDisableStandardsInput) *SecurityhubBatchDisableStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchDisableStandards", input)
	return &SecurityhubBatchDisableStandardsFuture{Future: future}
}

func (a *SecurityHubStub) BatchEnableStandards(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) (*securityhub.BatchEnableStandardsOutput, error) {
	var output securityhub.BatchEnableStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchEnableStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchEnableStandardsAsync(ctx workflow.Context, input *securityhub.BatchEnableStandardsInput) *SecurityhubBatchEnableStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchEnableStandards", input)
	return &SecurityhubBatchEnableStandardsFuture{Future: future}
}

func (a *SecurityHubStub) BatchImportFindings(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) (*securityhub.BatchImportFindingsOutput, error) {
	var output securityhub.BatchImportFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchImportFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchImportFindingsAsync(ctx workflow.Context, input *securityhub.BatchImportFindingsInput) *SecurityhubBatchImportFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchImportFindings", input)
	return &SecurityhubBatchImportFindingsFuture{Future: future}
}

func (a *SecurityHubStub) BatchUpdateFindings(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) (*securityhub.BatchUpdateFindingsOutput, error) {
	var output securityhub.BatchUpdateFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchUpdateFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) BatchUpdateFindingsAsync(ctx workflow.Context, input *securityhub.BatchUpdateFindingsInput) *SecurityhubBatchUpdateFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.BatchUpdateFindings", input)
	return &SecurityhubBatchUpdateFindingsFuture{Future: future}
}

func (a *SecurityHubStub) CreateActionTarget(ctx workflow.Context, input *securityhub.CreateActionTargetInput) (*securityhub.CreateActionTargetOutput, error) {
	var output securityhub.CreateActionTargetOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateActionTarget", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) CreateActionTargetAsync(ctx workflow.Context, input *securityhub.CreateActionTargetInput) *SecurityhubCreateActionTargetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateActionTarget", input)
	return &SecurityhubCreateActionTargetFuture{Future: future}
}

func (a *SecurityHubStub) CreateInsight(ctx workflow.Context, input *securityhub.CreateInsightInput) (*securityhub.CreateInsightOutput, error) {
	var output securityhub.CreateInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) CreateInsightAsync(ctx workflow.Context, input *securityhub.CreateInsightInput) *SecurityhubCreateInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateInsight", input)
	return &SecurityhubCreateInsightFuture{Future: future}
}

func (a *SecurityHubStub) CreateMembers(ctx workflow.Context, input *securityhub.CreateMembersInput) (*securityhub.CreateMembersOutput, error) {
	var output securityhub.CreateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) CreateMembersAsync(ctx workflow.Context, input *securityhub.CreateMembersInput) *SecurityhubCreateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.CreateMembers", input)
	return &SecurityhubCreateMembersFuture{Future: future}
}

func (a *SecurityHubStub) DeclineInvitations(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) (*securityhub.DeclineInvitationsOutput, error) {
	var output securityhub.DeclineInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeclineInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeclineInvitationsAsync(ctx workflow.Context, input *securityhub.DeclineInvitationsInput) *SecurityhubDeclineInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeclineInvitations", input)
	return &SecurityhubDeclineInvitationsFuture{Future: future}
}

func (a *SecurityHubStub) DeleteActionTarget(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) (*securityhub.DeleteActionTargetOutput, error) {
	var output securityhub.DeleteActionTargetOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteActionTarget", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteActionTargetAsync(ctx workflow.Context, input *securityhub.DeleteActionTargetInput) *SecurityhubDeleteActionTargetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteActionTarget", input)
	return &SecurityhubDeleteActionTargetFuture{Future: future}
}

func (a *SecurityHubStub) DeleteInsight(ctx workflow.Context, input *securityhub.DeleteInsightInput) (*securityhub.DeleteInsightOutput, error) {
	var output securityhub.DeleteInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteInsightAsync(ctx workflow.Context, input *securityhub.DeleteInsightInput) *SecurityhubDeleteInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInsight", input)
	return &SecurityhubDeleteInsightFuture{Future: future}
}

func (a *SecurityHubStub) DeleteInvitations(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) (*securityhub.DeleteInvitationsOutput, error) {
	var output securityhub.DeleteInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteInvitationsAsync(ctx workflow.Context, input *securityhub.DeleteInvitationsInput) *SecurityhubDeleteInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteInvitations", input)
	return &SecurityhubDeleteInvitationsFuture{Future: future}
}

func (a *SecurityHubStub) DeleteMembers(ctx workflow.Context, input *securityhub.DeleteMembersInput) (*securityhub.DeleteMembersOutput, error) {
	var output securityhub.DeleteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DeleteMembersAsync(ctx workflow.Context, input *securityhub.DeleteMembersInput) *SecurityhubDeleteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DeleteMembers", input)
	return &SecurityhubDeleteMembersFuture{Future: future}
}

func (a *SecurityHubStub) DescribeActionTargets(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) (*securityhub.DescribeActionTargetsOutput, error) {
	var output securityhub.DescribeActionTargetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeActionTargets", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeActionTargetsAsync(ctx workflow.Context, input *securityhub.DescribeActionTargetsInput) *SecurityhubDescribeActionTargetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeActionTargets", input)
	return &SecurityhubDescribeActionTargetsFuture{Future: future}
}

func (a *SecurityHubStub) DescribeHub(ctx workflow.Context, input *securityhub.DescribeHubInput) (*securityhub.DescribeHubOutput, error) {
	var output securityhub.DescribeHubOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeHub", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeHubAsync(ctx workflow.Context, input *securityhub.DescribeHubInput) *SecurityhubDescribeHubFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeHub", input)
	return &SecurityhubDescribeHubFuture{Future: future}
}

func (a *SecurityHubStub) DescribeProducts(ctx workflow.Context, input *securityhub.DescribeProductsInput) (*securityhub.DescribeProductsOutput, error) {
	var output securityhub.DescribeProductsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeProducts", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeProductsAsync(ctx workflow.Context, input *securityhub.DescribeProductsInput) *SecurityhubDescribeProductsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeProducts", input)
	return &SecurityhubDescribeProductsFuture{Future: future}
}

func (a *SecurityHubStub) DescribeStandards(ctx workflow.Context, input *securityhub.DescribeStandardsInput) (*securityhub.DescribeStandardsOutput, error) {
	var output securityhub.DescribeStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeStandardsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsInput) *SecurityhubDescribeStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandards", input)
	return &SecurityhubDescribeStandardsFuture{Future: future}
}

func (a *SecurityHubStub) DescribeStandardsControls(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) (*securityhub.DescribeStandardsControlsOutput, error) {
	var output securityhub.DescribeStandardsControlsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandardsControls", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DescribeStandardsControlsAsync(ctx workflow.Context, input *securityhub.DescribeStandardsControlsInput) *SecurityhubDescribeStandardsControlsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DescribeStandardsControls", input)
	return &SecurityhubDescribeStandardsControlsFuture{Future: future}
}

func (a *SecurityHubStub) DisableImportFindingsForProduct(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) (*securityhub.DisableImportFindingsForProductOutput, error) {
	var output securityhub.DisableImportFindingsForProductOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableImportFindingsForProduct", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.DisableImportFindingsForProductInput) *SecurityhubDisableImportFindingsForProductFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableImportFindingsForProduct", input)
	return &SecurityhubDisableImportFindingsForProductFuture{Future: future}
}

func (a *SecurityHubStub) DisableSecurityHub(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) (*securityhub.DisableSecurityHubOutput, error) {
	var output securityhub.DisableSecurityHubOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableSecurityHub", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisableSecurityHubAsync(ctx workflow.Context, input *securityhub.DisableSecurityHubInput) *SecurityhubDisableSecurityHubFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisableSecurityHub", input)
	return &SecurityhubDisableSecurityHubFuture{Future: future}
}

func (a *SecurityHubStub) DisassociateFromMasterAccount(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) (*securityhub.DisassociateFromMasterAccountOutput, error) {
	var output securityhub.DisassociateFromMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateFromMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisassociateFromMasterAccountAsync(ctx workflow.Context, input *securityhub.DisassociateFromMasterAccountInput) *SecurityhubDisassociateFromMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateFromMasterAccount", input)
	return &SecurityhubDisassociateFromMasterAccountFuture{Future: future}
}

func (a *SecurityHubStub) DisassociateMembers(ctx workflow.Context, input *securityhub.DisassociateMembersInput) (*securityhub.DisassociateMembersOutput, error) {
	var output securityhub.DisassociateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) DisassociateMembersAsync(ctx workflow.Context, input *securityhub.DisassociateMembersInput) *SecurityhubDisassociateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.DisassociateMembers", input)
	return &SecurityhubDisassociateMembersFuture{Future: future}
}

func (a *SecurityHubStub) EnableImportFindingsForProduct(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) (*securityhub.EnableImportFindingsForProductOutput, error) {
	var output securityhub.EnableImportFindingsForProductOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableImportFindingsForProduct", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) EnableImportFindingsForProductAsync(ctx workflow.Context, input *securityhub.EnableImportFindingsForProductInput) *SecurityhubEnableImportFindingsForProductFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableImportFindingsForProduct", input)
	return &SecurityhubEnableImportFindingsForProductFuture{Future: future}
}

func (a *SecurityHubStub) EnableSecurityHub(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) (*securityhub.EnableSecurityHubOutput, error) {
	var output securityhub.EnableSecurityHubOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableSecurityHub", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) EnableSecurityHubAsync(ctx workflow.Context, input *securityhub.EnableSecurityHubInput) *SecurityhubEnableSecurityHubFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.EnableSecurityHub", input)
	return &SecurityhubEnableSecurityHubFuture{Future: future}
}

func (a *SecurityHubStub) GetEnabledStandards(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) (*securityhub.GetEnabledStandardsOutput, error) {
	var output securityhub.GetEnabledStandardsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetEnabledStandards", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetEnabledStandardsAsync(ctx workflow.Context, input *securityhub.GetEnabledStandardsInput) *SecurityhubGetEnabledStandardsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetEnabledStandards", input)
	return &SecurityhubGetEnabledStandardsFuture{Future: future}
}

func (a *SecurityHubStub) GetFindings(ctx workflow.Context, input *securityhub.GetFindingsInput) (*securityhub.GetFindingsOutput, error) {
	var output securityhub.GetFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetFindingsAsync(ctx workflow.Context, input *securityhub.GetFindingsInput) *SecurityhubGetFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetFindings", input)
	return &SecurityhubGetFindingsFuture{Future: future}
}

func (a *SecurityHubStub) GetInsightResults(ctx workflow.Context, input *securityhub.GetInsightResultsInput) (*securityhub.GetInsightResultsOutput, error) {
	var output securityhub.GetInsightResultsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsightResults", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetInsightResultsAsync(ctx workflow.Context, input *securityhub.GetInsightResultsInput) *SecurityhubGetInsightResultsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsightResults", input)
	return &SecurityhubGetInsightResultsFuture{Future: future}
}

func (a *SecurityHubStub) GetInsights(ctx workflow.Context, input *securityhub.GetInsightsInput) (*securityhub.GetInsightsOutput, error) {
	var output securityhub.GetInsightsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsights", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetInsightsAsync(ctx workflow.Context, input *securityhub.GetInsightsInput) *SecurityhubGetInsightsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInsights", input)
	return &SecurityhubGetInsightsFuture{Future: future}
}

func (a *SecurityHubStub) GetInvitationsCount(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) (*securityhub.GetInvitationsCountOutput, error) {
	var output securityhub.GetInvitationsCountOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInvitationsCount", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetInvitationsCountAsync(ctx workflow.Context, input *securityhub.GetInvitationsCountInput) *SecurityhubGetInvitationsCountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetInvitationsCount", input)
	return &SecurityhubGetInvitationsCountFuture{Future: future}
}

func (a *SecurityHubStub) GetMasterAccount(ctx workflow.Context, input *securityhub.GetMasterAccountInput) (*securityhub.GetMasterAccountOutput, error) {
	var output securityhub.GetMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetMasterAccountAsync(ctx workflow.Context, input *securityhub.GetMasterAccountInput) *SecurityhubGetMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMasterAccount", input)
	return &SecurityhubGetMasterAccountFuture{Future: future}
}

func (a *SecurityHubStub) GetMembers(ctx workflow.Context, input *securityhub.GetMembersInput) (*securityhub.GetMembersOutput, error) {
	var output securityhub.GetMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) GetMembersAsync(ctx workflow.Context, input *securityhub.GetMembersInput) *SecurityhubGetMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.GetMembers", input)
	return &SecurityhubGetMembersFuture{Future: future}
}

func (a *SecurityHubStub) InviteMembers(ctx workflow.Context, input *securityhub.InviteMembersInput) (*securityhub.InviteMembersOutput, error) {
	var output securityhub.InviteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.InviteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) InviteMembersAsync(ctx workflow.Context, input *securityhub.InviteMembersInput) *SecurityhubInviteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.InviteMembers", input)
	return &SecurityhubInviteMembersFuture{Future: future}
}

func (a *SecurityHubStub) ListEnabledProductsForImport(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) (*securityhub.ListEnabledProductsForImportOutput, error) {
	var output securityhub.ListEnabledProductsForImportOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListEnabledProductsForImport", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListEnabledProductsForImportAsync(ctx workflow.Context, input *securityhub.ListEnabledProductsForImportInput) *SecurityhubListEnabledProductsForImportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListEnabledProductsForImport", input)
	return &SecurityhubListEnabledProductsForImportFuture{Future: future}
}

func (a *SecurityHubStub) ListInvitations(ctx workflow.Context, input *securityhub.ListInvitationsInput) (*securityhub.ListInvitationsOutput, error) {
	var output securityhub.ListInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListInvitationsAsync(ctx workflow.Context, input *securityhub.ListInvitationsInput) *SecurityhubListInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListInvitations", input)
	return &SecurityhubListInvitationsFuture{Future: future}
}

func (a *SecurityHubStub) ListMembers(ctx workflow.Context, input *securityhub.ListMembersInput) (*securityhub.ListMembersOutput, error) {
	var output securityhub.ListMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListMembersAsync(ctx workflow.Context, input *securityhub.ListMembersInput) *SecurityhubListMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListMembers", input)
	return &SecurityhubListMembersFuture{Future: future}
}

func (a *SecurityHubStub) ListTagsForResource(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) (*securityhub.ListTagsForResourceOutput, error) {
	var output securityhub.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) ListTagsForResourceAsync(ctx workflow.Context, input *securityhub.ListTagsForResourceInput) *SecurityhubListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.ListTagsForResource", input)
	return &SecurityhubListTagsForResourceFuture{Future: future}
}

func (a *SecurityHubStub) TagResource(ctx workflow.Context, input *securityhub.TagResourceInput) (*securityhub.TagResourceOutput, error) {
	var output securityhub.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) TagResourceAsync(ctx workflow.Context, input *securityhub.TagResourceInput) *SecurityhubTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.TagResource", input)
	return &SecurityhubTagResourceFuture{Future: future}
}

func (a *SecurityHubStub) UntagResource(ctx workflow.Context, input *securityhub.UntagResourceInput) (*securityhub.UntagResourceOutput, error) {
	var output securityhub.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UntagResourceAsync(ctx workflow.Context, input *securityhub.UntagResourceInput) *SecurityhubUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UntagResource", input)
	return &SecurityhubUntagResourceFuture{Future: future}
}

func (a *SecurityHubStub) UpdateActionTarget(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) (*securityhub.UpdateActionTargetOutput, error) {
	var output securityhub.UpdateActionTargetOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateActionTarget", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateActionTargetAsync(ctx workflow.Context, input *securityhub.UpdateActionTargetInput) *SecurityhubUpdateActionTargetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateActionTarget", input)
	return &SecurityhubUpdateActionTargetFuture{Future: future}
}

func (a *SecurityHubStub) UpdateFindings(ctx workflow.Context, input *securityhub.UpdateFindingsInput) (*securityhub.UpdateFindingsOutput, error) {
	var output securityhub.UpdateFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateFindingsAsync(ctx workflow.Context, input *securityhub.UpdateFindingsInput) *SecurityhubUpdateFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateFindings", input)
	return &SecurityhubUpdateFindingsFuture{Future: future}
}

func (a *SecurityHubStub) UpdateInsight(ctx workflow.Context, input *securityhub.UpdateInsightInput) (*securityhub.UpdateInsightOutput, error) {
	var output securityhub.UpdateInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateInsightAsync(ctx workflow.Context, input *securityhub.UpdateInsightInput) *SecurityhubUpdateInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateInsight", input)
	return &SecurityhubUpdateInsightFuture{Future: future}
}

func (a *SecurityHubStub) UpdateSecurityHubConfiguration(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error) {
	var output securityhub.UpdateSecurityHubConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateSecurityHubConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateSecurityHubConfigurationAsync(ctx workflow.Context, input *securityhub.UpdateSecurityHubConfigurationInput) *SecurityhubUpdateSecurityHubConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateSecurityHubConfiguration", input)
	return &SecurityhubUpdateSecurityHubConfigurationFuture{Future: future}
}

func (a *SecurityHubStub) UpdateStandardsControl(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error) {
	var output securityhub.UpdateStandardsControlOutput
	err := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateStandardsControl", input).Get(ctx, &output)
	return &output, err
}

func (a *SecurityHubStub) UpdateStandardsControlAsync(ctx workflow.Context, input *securityhub.UpdateStandardsControlInput) *SecurityhubUpdateStandardsControlFuture {
	future := workflow.ExecuteActivity(ctx, "aws.securityhub.UpdateStandardsControl", input)
	return &SecurityhubUpdateStandardsControlFuture{Future: future}
}
