// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/iot1clickdevicesservice"
	"go.temporal.io/sdk/workflow"
)

type IoT1ClickDevicesServiceClient interface {
	ClaimDevicesByClaimCode(ctx workflow.Context, input *iot1clickdevicesservice.ClaimDevicesByClaimCodeInput) (*iot1clickdevicesservice.ClaimDevicesByClaimCodeOutput, error)
	ClaimDevicesByClaimCodeAsync(ctx workflow.Context, input *iot1clickdevicesservice.ClaimDevicesByClaimCodeInput) *Iot1clickdevicesserviceClaimDevicesByClaimCodeFuture

	DescribeDevice(ctx workflow.Context, input *iot1clickdevicesservice.DescribeDeviceInput) (*iot1clickdevicesservice.DescribeDeviceOutput, error)
	DescribeDeviceAsync(ctx workflow.Context, input *iot1clickdevicesservice.DescribeDeviceInput) *Iot1clickdevicesserviceDescribeDeviceFuture

	FinalizeDeviceClaim(ctx workflow.Context, input *iot1clickdevicesservice.FinalizeDeviceClaimInput) (*iot1clickdevicesservice.FinalizeDeviceClaimOutput, error)
	FinalizeDeviceClaimAsync(ctx workflow.Context, input *iot1clickdevicesservice.FinalizeDeviceClaimInput) *Iot1clickdevicesserviceFinalizeDeviceClaimFuture

	GetDeviceMethods(ctx workflow.Context, input *iot1clickdevicesservice.GetDeviceMethodsInput) (*iot1clickdevicesservice.GetDeviceMethodsOutput, error)
	GetDeviceMethodsAsync(ctx workflow.Context, input *iot1clickdevicesservice.GetDeviceMethodsInput) *Iot1clickdevicesserviceGetDeviceMethodsFuture

	InitiateDeviceClaim(ctx workflow.Context, input *iot1clickdevicesservice.InitiateDeviceClaimInput) (*iot1clickdevicesservice.InitiateDeviceClaimOutput, error)
	InitiateDeviceClaimAsync(ctx workflow.Context, input *iot1clickdevicesservice.InitiateDeviceClaimInput) *Iot1clickdevicesserviceInitiateDeviceClaimFuture

	InvokeDeviceMethod(ctx workflow.Context, input *iot1clickdevicesservice.InvokeDeviceMethodInput) (*iot1clickdevicesservice.InvokeDeviceMethodOutput, error)
	InvokeDeviceMethodAsync(ctx workflow.Context, input *iot1clickdevicesservice.InvokeDeviceMethodInput) *Iot1clickdevicesserviceInvokeDeviceMethodFuture

	ListDeviceEvents(ctx workflow.Context, input *iot1clickdevicesservice.ListDeviceEventsInput) (*iot1clickdevicesservice.ListDeviceEventsOutput, error)
	ListDeviceEventsAsync(ctx workflow.Context, input *iot1clickdevicesservice.ListDeviceEventsInput) *Iot1clickdevicesserviceListDeviceEventsFuture

	ListDevices(ctx workflow.Context, input *iot1clickdevicesservice.ListDevicesInput) (*iot1clickdevicesservice.ListDevicesOutput, error)
	ListDevicesAsync(ctx workflow.Context, input *iot1clickdevicesservice.ListDevicesInput) *Iot1clickdevicesserviceListDevicesFuture

	ListTagsForResource(ctx workflow.Context, input *iot1clickdevicesservice.ListTagsForResourceInput) (*iot1clickdevicesservice.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickdevicesservice.ListTagsForResourceInput) *Iot1clickdevicesserviceListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *iot1clickdevicesservice.TagResourceInput) (*iot1clickdevicesservice.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *iot1clickdevicesservice.TagResourceInput) *Iot1clickdevicesserviceTagResourceFuture

	UnclaimDevice(ctx workflow.Context, input *iot1clickdevicesservice.UnclaimDeviceInput) (*iot1clickdevicesservice.UnclaimDeviceOutput, error)
	UnclaimDeviceAsync(ctx workflow.Context, input *iot1clickdevicesservice.UnclaimDeviceInput) *Iot1clickdevicesserviceUnclaimDeviceFuture

	UntagResource(ctx workflow.Context, input *iot1clickdevicesservice.UntagResourceInput) (*iot1clickdevicesservice.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *iot1clickdevicesservice.UntagResourceInput) *Iot1clickdevicesserviceUntagResourceFuture

	UpdateDeviceState(ctx workflow.Context, input *iot1clickdevicesservice.UpdateDeviceStateInput) (*iot1clickdevicesservice.UpdateDeviceStateOutput, error)
	UpdateDeviceStateAsync(ctx workflow.Context, input *iot1clickdevicesservice.UpdateDeviceStateInput) *Iot1clickdevicesserviceUpdateDeviceStateFuture
}

type IoT1ClickDevicesServiceStub struct{}

func NewIoT1ClickDevicesServiceStub() IoT1ClickDevicesServiceClient {
	return &IoT1ClickDevicesServiceStub{}
}

type Iot1clickdevicesserviceClaimDevicesByClaimCodeFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceClaimDevicesByClaimCodeFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.ClaimDevicesByClaimCodeOutput, error) {
	var output iot1clickdevicesservice.ClaimDevicesByClaimCodeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceDescribeDeviceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceDescribeDeviceFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.DescribeDeviceOutput, error) {
	var output iot1clickdevicesservice.DescribeDeviceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceFinalizeDeviceClaimFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceFinalizeDeviceClaimFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.FinalizeDeviceClaimOutput, error) {
	var output iot1clickdevicesservice.FinalizeDeviceClaimOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceGetDeviceMethodsFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceGetDeviceMethodsFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.GetDeviceMethodsOutput, error) {
	var output iot1clickdevicesservice.GetDeviceMethodsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceInitiateDeviceClaimFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceInitiateDeviceClaimFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.InitiateDeviceClaimOutput, error) {
	var output iot1clickdevicesservice.InitiateDeviceClaimOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceInvokeDeviceMethodFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceInvokeDeviceMethodFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.InvokeDeviceMethodOutput, error) {
	var output iot1clickdevicesservice.InvokeDeviceMethodOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceListDeviceEventsFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceListDeviceEventsFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.ListDeviceEventsOutput, error) {
	var output iot1clickdevicesservice.ListDeviceEventsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceListDevicesFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceListDevicesFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.ListDevicesOutput, error) {
	var output iot1clickdevicesservice.ListDevicesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceListTagsForResourceFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.ListTagsForResourceOutput, error) {
	var output iot1clickdevicesservice.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceTagResourceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceTagResourceFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.TagResourceOutput, error) {
	var output iot1clickdevicesservice.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceUnclaimDeviceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceUnclaimDeviceFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.UnclaimDeviceOutput, error) {
	var output iot1clickdevicesservice.UnclaimDeviceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceUntagResourceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceUntagResourceFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.UntagResourceOutput, error) {
	var output iot1clickdevicesservice.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickdevicesserviceUpdateDeviceStateFuture struct {
	Future workflow.Future
}

func (r *Iot1clickdevicesserviceUpdateDeviceStateFuture) Get(ctx workflow.Context) (*iot1clickdevicesservice.UpdateDeviceStateOutput, error) {
	var output iot1clickdevicesservice.UpdateDeviceStateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) ClaimDevicesByClaimCode(ctx workflow.Context, input *iot1clickdevicesservice.ClaimDevicesByClaimCodeInput) (*iot1clickdevicesservice.ClaimDevicesByClaimCodeOutput, error) {
	var output iot1clickdevicesservice.ClaimDevicesByClaimCodeOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ClaimDevicesByClaimCode", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) ClaimDevicesByClaimCodeAsync(ctx workflow.Context, input *iot1clickdevicesservice.ClaimDevicesByClaimCodeInput) *Iot1clickdevicesserviceClaimDevicesByClaimCodeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ClaimDevicesByClaimCode", input)
	return &Iot1clickdevicesserviceClaimDevicesByClaimCodeFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) DescribeDevice(ctx workflow.Context, input *iot1clickdevicesservice.DescribeDeviceInput) (*iot1clickdevicesservice.DescribeDeviceOutput, error) {
	var output iot1clickdevicesservice.DescribeDeviceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.DescribeDevice", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) DescribeDeviceAsync(ctx workflow.Context, input *iot1clickdevicesservice.DescribeDeviceInput) *Iot1clickdevicesserviceDescribeDeviceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.DescribeDevice", input)
	return &Iot1clickdevicesserviceDescribeDeviceFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) FinalizeDeviceClaim(ctx workflow.Context, input *iot1clickdevicesservice.FinalizeDeviceClaimInput) (*iot1clickdevicesservice.FinalizeDeviceClaimOutput, error) {
	var output iot1clickdevicesservice.FinalizeDeviceClaimOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.FinalizeDeviceClaim", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) FinalizeDeviceClaimAsync(ctx workflow.Context, input *iot1clickdevicesservice.FinalizeDeviceClaimInput) *Iot1clickdevicesserviceFinalizeDeviceClaimFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.FinalizeDeviceClaim", input)
	return &Iot1clickdevicesserviceFinalizeDeviceClaimFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) GetDeviceMethods(ctx workflow.Context, input *iot1clickdevicesservice.GetDeviceMethodsInput) (*iot1clickdevicesservice.GetDeviceMethodsOutput, error) {
	var output iot1clickdevicesservice.GetDeviceMethodsOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.GetDeviceMethods", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) GetDeviceMethodsAsync(ctx workflow.Context, input *iot1clickdevicesservice.GetDeviceMethodsInput) *Iot1clickdevicesserviceGetDeviceMethodsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.GetDeviceMethods", input)
	return &Iot1clickdevicesserviceGetDeviceMethodsFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) InitiateDeviceClaim(ctx workflow.Context, input *iot1clickdevicesservice.InitiateDeviceClaimInput) (*iot1clickdevicesservice.InitiateDeviceClaimOutput, error) {
	var output iot1clickdevicesservice.InitiateDeviceClaimOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.InitiateDeviceClaim", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) InitiateDeviceClaimAsync(ctx workflow.Context, input *iot1clickdevicesservice.InitiateDeviceClaimInput) *Iot1clickdevicesserviceInitiateDeviceClaimFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.InitiateDeviceClaim", input)
	return &Iot1clickdevicesserviceInitiateDeviceClaimFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) InvokeDeviceMethod(ctx workflow.Context, input *iot1clickdevicesservice.InvokeDeviceMethodInput) (*iot1clickdevicesservice.InvokeDeviceMethodOutput, error) {
	var output iot1clickdevicesservice.InvokeDeviceMethodOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.InvokeDeviceMethod", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) InvokeDeviceMethodAsync(ctx workflow.Context, input *iot1clickdevicesservice.InvokeDeviceMethodInput) *Iot1clickdevicesserviceInvokeDeviceMethodFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.InvokeDeviceMethod", input)
	return &Iot1clickdevicesserviceInvokeDeviceMethodFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) ListDeviceEvents(ctx workflow.Context, input *iot1clickdevicesservice.ListDeviceEventsInput) (*iot1clickdevicesservice.ListDeviceEventsOutput, error) {
	var output iot1clickdevicesservice.ListDeviceEventsOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ListDeviceEvents", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) ListDeviceEventsAsync(ctx workflow.Context, input *iot1clickdevicesservice.ListDeviceEventsInput) *Iot1clickdevicesserviceListDeviceEventsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ListDeviceEvents", input)
	return &Iot1clickdevicesserviceListDeviceEventsFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) ListDevices(ctx workflow.Context, input *iot1clickdevicesservice.ListDevicesInput) (*iot1clickdevicesservice.ListDevicesOutput, error) {
	var output iot1clickdevicesservice.ListDevicesOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ListDevices", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) ListDevicesAsync(ctx workflow.Context, input *iot1clickdevicesservice.ListDevicesInput) *Iot1clickdevicesserviceListDevicesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ListDevices", input)
	return &Iot1clickdevicesserviceListDevicesFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) ListTagsForResource(ctx workflow.Context, input *iot1clickdevicesservice.ListTagsForResourceInput) (*iot1clickdevicesservice.ListTagsForResourceOutput, error) {
	var output iot1clickdevicesservice.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickdevicesservice.ListTagsForResourceInput) *Iot1clickdevicesserviceListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.ListTagsForResource", input)
	return &Iot1clickdevicesserviceListTagsForResourceFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) TagResource(ctx workflow.Context, input *iot1clickdevicesservice.TagResourceInput) (*iot1clickdevicesservice.TagResourceOutput, error) {
	var output iot1clickdevicesservice.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) TagResourceAsync(ctx workflow.Context, input *iot1clickdevicesservice.TagResourceInput) *Iot1clickdevicesserviceTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.TagResource", input)
	return &Iot1clickdevicesserviceTagResourceFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) UnclaimDevice(ctx workflow.Context, input *iot1clickdevicesservice.UnclaimDeviceInput) (*iot1clickdevicesservice.UnclaimDeviceOutput, error) {
	var output iot1clickdevicesservice.UnclaimDeviceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.UnclaimDevice", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) UnclaimDeviceAsync(ctx workflow.Context, input *iot1clickdevicesservice.UnclaimDeviceInput) *Iot1clickdevicesserviceUnclaimDeviceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.UnclaimDevice", input)
	return &Iot1clickdevicesserviceUnclaimDeviceFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) UntagResource(ctx workflow.Context, input *iot1clickdevicesservice.UntagResourceInput) (*iot1clickdevicesservice.UntagResourceOutput, error) {
	var output iot1clickdevicesservice.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) UntagResourceAsync(ctx workflow.Context, input *iot1clickdevicesservice.UntagResourceInput) *Iot1clickdevicesserviceUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.UntagResource", input)
	return &Iot1clickdevicesserviceUntagResourceFuture{Future: future}
}

func (a *IoT1ClickDevicesServiceStub) UpdateDeviceState(ctx workflow.Context, input *iot1clickdevicesservice.UpdateDeviceStateInput) (*iot1clickdevicesservice.UpdateDeviceStateOutput, error) {
	var output iot1clickdevicesservice.UpdateDeviceStateOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.UpdateDeviceState", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickDevicesServiceStub) UpdateDeviceStateAsync(ctx workflow.Context, input *iot1clickdevicesservice.UpdateDeviceStateInput) *Iot1clickdevicesserviceUpdateDeviceStateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickdevicesservice.UpdateDeviceState", input)
	return &Iot1clickdevicesserviceUpdateDeviceStateFuture{Future: future}
}
