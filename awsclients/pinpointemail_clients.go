// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/pinpointemail"
	"go.temporal.io/sdk/workflow"
)

type PinpointEmailClient interface {
	CreateConfigurationSet(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) (*pinpointemail.CreateConfigurationSetOutput, error)
	CreateConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) *PinpointemailCreateConfigurationSetFuture

	CreateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error)
	CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) *PinpointemailCreateConfigurationSetEventDestinationFuture

	CreateDedicatedIpPool(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) (*pinpointemail.CreateDedicatedIpPoolOutput, error)
	CreateDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) *PinpointemailCreateDedicatedIpPoolFuture

	CreateDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) (*pinpointemail.CreateDeliverabilityTestReportOutput, error)
	CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) *PinpointemailCreateDeliverabilityTestReportFuture

	CreateEmailIdentity(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) (*pinpointemail.CreateEmailIdentityOutput, error)
	CreateEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) *PinpointemailCreateEmailIdentityFuture

	DeleteConfigurationSet(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) (*pinpointemail.DeleteConfigurationSetOutput, error)
	DeleteConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) *PinpointemailDeleteConfigurationSetFuture

	DeleteConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error)
	DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) *PinpointemailDeleteConfigurationSetEventDestinationFuture

	DeleteDedicatedIpPool(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) (*pinpointemail.DeleteDedicatedIpPoolOutput, error)
	DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) *PinpointemailDeleteDedicatedIpPoolFuture

	DeleteEmailIdentity(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) (*pinpointemail.DeleteEmailIdentityOutput, error)
	DeleteEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) *PinpointemailDeleteEmailIdentityFuture

	GetAccount(ctx workflow.Context, input *pinpointemail.GetAccountInput) (*pinpointemail.GetAccountOutput, error)
	GetAccountAsync(ctx workflow.Context, input *pinpointemail.GetAccountInput) *PinpointemailGetAccountFuture

	GetBlacklistReports(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) (*pinpointemail.GetBlacklistReportsOutput, error)
	GetBlacklistReportsAsync(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) *PinpointemailGetBlacklistReportsFuture

	GetConfigurationSet(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) (*pinpointemail.GetConfigurationSetOutput, error)
	GetConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) *PinpointemailGetConfigurationSetFuture

	GetConfigurationSetEventDestinations(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error)
	GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) *PinpointemailGetConfigurationSetEventDestinationsFuture

	GetDedicatedIp(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) (*pinpointemail.GetDedicatedIpOutput, error)
	GetDedicatedIpAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) *PinpointemailGetDedicatedIpFuture

	GetDedicatedIps(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) (*pinpointemail.GetDedicatedIpsOutput, error)
	GetDedicatedIpsAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) *PinpointemailGetDedicatedIpsFuture

	GetDeliverabilityDashboardOptions(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error)
	GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) *PinpointemailGetDeliverabilityDashboardOptionsFuture

	GetDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) (*pinpointemail.GetDeliverabilityTestReportOutput, error)
	GetDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) *PinpointemailGetDeliverabilityTestReportFuture

	GetDomainDeliverabilityCampaign(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error)
	GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) *PinpointemailGetDomainDeliverabilityCampaignFuture

	GetDomainStatisticsReport(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) (*pinpointemail.GetDomainStatisticsReportOutput, error)
	GetDomainStatisticsReportAsync(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) *PinpointemailGetDomainStatisticsReportFuture

	GetEmailIdentity(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) (*pinpointemail.GetEmailIdentityOutput, error)
	GetEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) *PinpointemailGetEmailIdentityFuture

	ListConfigurationSets(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) (*pinpointemail.ListConfigurationSetsOutput, error)
	ListConfigurationSetsAsync(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) *PinpointemailListConfigurationSetsFuture

	ListDedicatedIpPools(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) (*pinpointemail.ListDedicatedIpPoolsOutput, error)
	ListDedicatedIpPoolsAsync(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) *PinpointemailListDedicatedIpPoolsFuture

	ListDeliverabilityTestReports(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) (*pinpointemail.ListDeliverabilityTestReportsOutput, error)
	ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) *PinpointemailListDeliverabilityTestReportsFuture

	ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error)
	ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) *PinpointemailListDomainDeliverabilityCampaignsFuture

	ListEmailIdentities(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) (*pinpointemail.ListEmailIdentitiesOutput, error)
	ListEmailIdentitiesAsync(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) *PinpointemailListEmailIdentitiesFuture

	ListTagsForResource(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) (*pinpointemail.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) *PinpointemailListTagsForResourceFuture

	PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error)
	PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) *PinpointemailPutAccountDedicatedIpWarmupAttributesFuture

	PutAccountSendingAttributes(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) (*pinpointemail.PutAccountSendingAttributesOutput, error)
	PutAccountSendingAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) *PinpointemailPutAccountSendingAttributesFuture

	PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error)
	PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) *PinpointemailPutConfigurationSetDeliveryOptionsFuture

	PutConfigurationSetReputationOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error)
	PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) *PinpointemailPutConfigurationSetReputationOptionsFuture

	PutConfigurationSetSendingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error)
	PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) *PinpointemailPutConfigurationSetSendingOptionsFuture

	PutConfigurationSetTrackingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error)
	PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) *PinpointemailPutConfigurationSetTrackingOptionsFuture

	PutDedicatedIpInPool(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) (*pinpointemail.PutDedicatedIpInPoolOutput, error)
	PutDedicatedIpInPoolAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) *PinpointemailPutDedicatedIpInPoolFuture

	PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error)
	PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) *PinpointemailPutDedicatedIpWarmupAttributesFuture

	PutDeliverabilityDashboardOption(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error)
	PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) *PinpointemailPutDeliverabilityDashboardOptionFuture

	PutEmailIdentityDkimAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error)
	PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) *PinpointemailPutEmailIdentityDkimAttributesFuture

	PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error)
	PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) *PinpointemailPutEmailIdentityFeedbackAttributesFuture

	PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error)
	PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) *PinpointemailPutEmailIdentityMailFromAttributesFuture

	SendEmail(ctx workflow.Context, input *pinpointemail.SendEmailInput) (*pinpointemail.SendEmailOutput, error)
	SendEmailAsync(ctx workflow.Context, input *pinpointemail.SendEmailInput) *PinpointemailSendEmailFuture

	TagResource(ctx workflow.Context, input *pinpointemail.TagResourceInput) (*pinpointemail.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *pinpointemail.TagResourceInput) *PinpointemailTagResourceFuture

	UntagResource(ctx workflow.Context, input *pinpointemail.UntagResourceInput) (*pinpointemail.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *pinpointemail.UntagResourceInput) *PinpointemailUntagResourceFuture

	UpdateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error)
	UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) *PinpointemailUpdateConfigurationSetEventDestinationFuture
}

type PinpointEmailStub struct{}

func NewPinpointEmailStub() PinpointEmailClient {
	return &PinpointEmailStub{}
}

type PinpointemailCreateConfigurationSetFuture struct {
	Future workflow.Future
}

func (r *PinpointemailCreateConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.CreateConfigurationSetOutput, error) {
	var output pinpointemail.CreateConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailCreateConfigurationSetEventDestinationFuture struct {
	Future workflow.Future
}

func (r *PinpointemailCreateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.CreateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailCreateDedicatedIpPoolFuture struct {
	Future workflow.Future
}

func (r *PinpointemailCreateDedicatedIpPoolFuture) Get(ctx workflow.Context) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {
	var output pinpointemail.CreateDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailCreateDeliverabilityTestReportFuture struct {
	Future workflow.Future
}

func (r *PinpointemailCreateDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {
	var output pinpointemail.CreateDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailCreateEmailIdentityFuture struct {
	Future workflow.Future
}

func (r *PinpointemailCreateEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.CreateEmailIdentityOutput, error) {
	var output pinpointemail.CreateEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailDeleteConfigurationSetFuture struct {
	Future workflow.Future
}

func (r *PinpointemailDeleteConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteConfigurationSetOutput, error) {
	var output pinpointemail.DeleteConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailDeleteConfigurationSetEventDestinationFuture struct {
	Future workflow.Future
}

func (r *PinpointemailDeleteConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.DeleteConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailDeleteDedicatedIpPoolFuture struct {
	Future workflow.Future
}

func (r *PinpointemailDeleteDedicatedIpPoolFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {
	var output pinpointemail.DeleteDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailDeleteEmailIdentityFuture struct {
	Future workflow.Future
}

func (r *PinpointemailDeleteEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteEmailIdentityOutput, error) {
	var output pinpointemail.DeleteEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetAccountFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetAccountFuture) Get(ctx workflow.Context) (*pinpointemail.GetAccountOutput, error) {
	var output pinpointemail.GetAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetBlacklistReportsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetBlacklistReportsFuture) Get(ctx workflow.Context) (*pinpointemail.GetBlacklistReportsOutput, error) {
	var output pinpointemail.GetBlacklistReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetConfigurationSetFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.GetConfigurationSetOutput, error) {
	var output pinpointemail.GetConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetConfigurationSetEventDestinationsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetConfigurationSetEventDestinationsFuture) Get(ctx workflow.Context) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {
	var output pinpointemail.GetConfigurationSetEventDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetDedicatedIpFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetDedicatedIpFuture) Get(ctx workflow.Context) (*pinpointemail.GetDedicatedIpOutput, error) {
	var output pinpointemail.GetDedicatedIpOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetDedicatedIpsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetDedicatedIpsFuture) Get(ctx workflow.Context) (*pinpointemail.GetDedicatedIpsOutput, error) {
	var output pinpointemail.GetDedicatedIpsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetDeliverabilityDashboardOptionsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetDeliverabilityDashboardOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {
	var output pinpointemail.GetDeliverabilityDashboardOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetDeliverabilityTestReportFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {
	var output pinpointemail.GetDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetDomainDeliverabilityCampaignFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetDomainDeliverabilityCampaignFuture) Get(ctx workflow.Context) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {
	var output pinpointemail.GetDomainDeliverabilityCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetDomainStatisticsReportFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetDomainStatisticsReportFuture) Get(ctx workflow.Context) (*pinpointemail.GetDomainStatisticsReportOutput, error) {
	var output pinpointemail.GetDomainStatisticsReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailGetEmailIdentityFuture struct {
	Future workflow.Future
}

func (r *PinpointemailGetEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.GetEmailIdentityOutput, error) {
	var output pinpointemail.GetEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailListConfigurationSetsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailListConfigurationSetsFuture) Get(ctx workflow.Context) (*pinpointemail.ListConfigurationSetsOutput, error) {
	var output pinpointemail.ListConfigurationSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailListDedicatedIpPoolsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailListDedicatedIpPoolsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {
	var output pinpointemail.ListDedicatedIpPoolsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailListDeliverabilityTestReportsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailListDeliverabilityTestReportsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {
	var output pinpointemail.ListDeliverabilityTestReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailListDomainDeliverabilityCampaignsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailListDomainDeliverabilityCampaignsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {
	var output pinpointemail.ListDomainDeliverabilityCampaignsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailListEmailIdentitiesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailListEmailIdentitiesFuture) Get(ctx workflow.Context) (*pinpointemail.ListEmailIdentitiesOutput, error) {
	var output pinpointemail.ListEmailIdentitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *PinpointemailListTagsForResourceFuture) Get(ctx workflow.Context) (*pinpointemail.ListTagsForResourceOutput, error) {
	var output pinpointemail.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutAccountDedicatedIpWarmupAttributesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutAccountDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutAccountSendingAttributesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutAccountSendingAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutAccountSendingAttributesOutput, error) {
	var output pinpointemail.PutAccountSendingAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutConfigurationSetDeliveryOptionsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutConfigurationSetDeliveryOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetDeliveryOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutConfigurationSetReputationOptionsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutConfigurationSetReputationOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetReputationOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutConfigurationSetSendingOptionsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutConfigurationSetSendingOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetSendingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutConfigurationSetTrackingOptionsFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutConfigurationSetTrackingOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetTrackingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutDedicatedIpInPoolFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutDedicatedIpInPoolFuture) Get(ctx workflow.Context) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {
	var output pinpointemail.PutDedicatedIpInPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutDedicatedIpWarmupAttributesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutDeliverabilityDashboardOptionFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutDeliverabilityDashboardOptionFuture) Get(ctx workflow.Context) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {
	var output pinpointemail.PutDeliverabilityDashboardOptionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutEmailIdentityDkimAttributesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutEmailIdentityDkimAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityDkimAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutEmailIdentityFeedbackAttributesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutEmailIdentityFeedbackAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityFeedbackAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailPutEmailIdentityMailFromAttributesFuture struct {
	Future workflow.Future
}

func (r *PinpointemailPutEmailIdentityMailFromAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityMailFromAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailSendEmailFuture struct {
	Future workflow.Future
}

func (r *PinpointemailSendEmailFuture) Get(ctx workflow.Context) (*pinpointemail.SendEmailOutput, error) {
	var output pinpointemail.SendEmailOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailTagResourceFuture struct {
	Future workflow.Future
}

func (r *PinpointemailTagResourceFuture) Get(ctx workflow.Context) (*pinpointemail.TagResourceOutput, error) {
	var output pinpointemail.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailUntagResourceFuture struct {
	Future workflow.Future
}

func (r *PinpointemailUntagResourceFuture) Get(ctx workflow.Context) (*pinpointemail.UntagResourceOutput, error) {
	var output pinpointemail.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointemailUpdateConfigurationSetEventDestinationFuture struct {
	Future workflow.Future
}

func (r *PinpointemailUpdateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.UpdateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateConfigurationSet(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) (*pinpointemail.CreateConfigurationSetOutput, error) {
	var output pinpointemail.CreateConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) *PinpointemailCreateConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSet", input)
	return &PinpointemailCreateConfigurationSetFuture{Future: future}
}

func (a *PinpointEmailStub) CreateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.CreateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) *PinpointemailCreateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSetEventDestination", input)
	return &PinpointemailCreateConfigurationSetEventDestinationFuture{Future: future}
}

func (a *PinpointEmailStub) CreateDedicatedIpPool(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {
	var output pinpointemail.CreateDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) *PinpointemailCreateDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDedicatedIpPool", input)
	return &PinpointemailCreateDedicatedIpPoolFuture{Future: future}
}

func (a *PinpointEmailStub) CreateDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {
	var output pinpointemail.CreateDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) *PinpointemailCreateDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDeliverabilityTestReport", input)
	return &PinpointemailCreateDeliverabilityTestReportFuture{Future: future}
}

func (a *PinpointEmailStub) CreateEmailIdentity(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) (*pinpointemail.CreateEmailIdentityOutput, error) {
	var output pinpointemail.CreateEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) *PinpointemailCreateEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateEmailIdentity", input)
	return &PinpointemailCreateEmailIdentityFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteConfigurationSet(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) (*pinpointemail.DeleteConfigurationSetOutput, error) {
	var output pinpointemail.DeleteConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) *PinpointemailDeleteConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSet", input)
	return &PinpointemailDeleteConfigurationSetFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.DeleteConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) *PinpointemailDeleteConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSetEventDestination", input)
	return &PinpointemailDeleteConfigurationSetEventDestinationFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteDedicatedIpPool(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {
	var output pinpointemail.DeleteDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) *PinpointemailDeleteDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteDedicatedIpPool", input)
	return &PinpointemailDeleteDedicatedIpPoolFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteEmailIdentity(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) (*pinpointemail.DeleteEmailIdentityOutput, error) {
	var output pinpointemail.DeleteEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) *PinpointemailDeleteEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteEmailIdentity", input)
	return &PinpointemailDeleteEmailIdentityFuture{Future: future}
}

func (a *PinpointEmailStub) GetAccount(ctx workflow.Context, input *pinpointemail.GetAccountInput) (*pinpointemail.GetAccountOutput, error) {
	var output pinpointemail.GetAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetAccountAsync(ctx workflow.Context, input *pinpointemail.GetAccountInput) *PinpointemailGetAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetAccount", input)
	return &PinpointemailGetAccountFuture{Future: future}
}

func (a *PinpointEmailStub) GetBlacklistReports(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) (*pinpointemail.GetBlacklistReportsOutput, error) {
	var output pinpointemail.GetBlacklistReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetBlacklistReports", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetBlacklistReportsAsync(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) *PinpointemailGetBlacklistReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetBlacklistReports", input)
	return &PinpointemailGetBlacklistReportsFuture{Future: future}
}

func (a *PinpointEmailStub) GetConfigurationSet(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) (*pinpointemail.GetConfigurationSetOutput, error) {
	var output pinpointemail.GetConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) *PinpointemailGetConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSet", input)
	return &PinpointemailGetConfigurationSetFuture{Future: future}
}

func (a *PinpointEmailStub) GetConfigurationSetEventDestinations(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {
	var output pinpointemail.GetConfigurationSetEventDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSetEventDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) *PinpointemailGetConfigurationSetEventDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSetEventDestinations", input)
	return &PinpointemailGetConfigurationSetEventDestinationsFuture{Future: future}
}

func (a *PinpointEmailStub) GetDedicatedIp(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) (*pinpointemail.GetDedicatedIpOutput, error) {
	var output pinpointemail.GetDedicatedIpOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIp", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDedicatedIpAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) *PinpointemailGetDedicatedIpFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIp", input)
	return &PinpointemailGetDedicatedIpFuture{Future: future}
}

func (a *PinpointEmailStub) GetDedicatedIps(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) (*pinpointemail.GetDedicatedIpsOutput, error) {
	var output pinpointemail.GetDedicatedIpsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIps", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDedicatedIpsAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) *PinpointemailGetDedicatedIpsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIps", input)
	return &PinpointemailGetDedicatedIpsFuture{Future: future}
}

func (a *PinpointEmailStub) GetDeliverabilityDashboardOptions(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {
	var output pinpointemail.GetDeliverabilityDashboardOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityDashboardOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) *PinpointemailGetDeliverabilityDashboardOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityDashboardOptions", input)
	return &PinpointemailGetDeliverabilityDashboardOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) GetDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {
	var output pinpointemail.GetDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) *PinpointemailGetDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityTestReport", input)
	return &PinpointemailGetDeliverabilityTestReportFuture{Future: future}
}

func (a *PinpointEmailStub) GetDomainDeliverabilityCampaign(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {
	var output pinpointemail.GetDomainDeliverabilityCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainDeliverabilityCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) *PinpointemailGetDomainDeliverabilityCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainDeliverabilityCampaign", input)
	return &PinpointemailGetDomainDeliverabilityCampaignFuture{Future: future}
}

func (a *PinpointEmailStub) GetDomainStatisticsReport(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) (*pinpointemail.GetDomainStatisticsReportOutput, error) {
	var output pinpointemail.GetDomainStatisticsReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainStatisticsReport", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDomainStatisticsReportAsync(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) *PinpointemailGetDomainStatisticsReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainStatisticsReport", input)
	return &PinpointemailGetDomainStatisticsReportFuture{Future: future}
}

func (a *PinpointEmailStub) GetEmailIdentity(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) (*pinpointemail.GetEmailIdentityOutput, error) {
	var output pinpointemail.GetEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) *PinpointemailGetEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetEmailIdentity", input)
	return &PinpointemailGetEmailIdentityFuture{Future: future}
}

func (a *PinpointEmailStub) ListConfigurationSets(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) (*pinpointemail.ListConfigurationSetsOutput, error) {
	var output pinpointemail.ListConfigurationSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListConfigurationSets", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListConfigurationSetsAsync(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) *PinpointemailListConfigurationSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListConfigurationSets", input)
	return &PinpointemailListConfigurationSetsFuture{Future: future}
}

func (a *PinpointEmailStub) ListDedicatedIpPools(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {
	var output pinpointemail.ListDedicatedIpPoolsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDedicatedIpPools", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListDedicatedIpPoolsAsync(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) *PinpointemailListDedicatedIpPoolsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDedicatedIpPools", input)
	return &PinpointemailListDedicatedIpPoolsFuture{Future: future}
}

func (a *PinpointEmailStub) ListDeliverabilityTestReports(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {
	var output pinpointemail.ListDeliverabilityTestReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDeliverabilityTestReports", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) *PinpointemailListDeliverabilityTestReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDeliverabilityTestReports", input)
	return &PinpointemailListDeliverabilityTestReportsFuture{Future: future}
}

func (a *PinpointEmailStub) ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {
	var output pinpointemail.ListDomainDeliverabilityCampaignsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDomainDeliverabilityCampaigns", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) *PinpointemailListDomainDeliverabilityCampaignsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDomainDeliverabilityCampaigns", input)
	return &PinpointemailListDomainDeliverabilityCampaignsFuture{Future: future}
}

func (a *PinpointEmailStub) ListEmailIdentities(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) (*pinpointemail.ListEmailIdentitiesOutput, error) {
	var output pinpointemail.ListEmailIdentitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListEmailIdentities", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListEmailIdentitiesAsync(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) *PinpointemailListEmailIdentitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListEmailIdentities", input)
	return &PinpointemailListEmailIdentitiesFuture{Future: future}
}

func (a *PinpointEmailStub) ListTagsForResource(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) (*pinpointemail.ListTagsForResourceOutput, error) {
	var output pinpointemail.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListTagsForResourceAsync(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) *PinpointemailListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListTagsForResource", input)
	return &PinpointemailListTagsForResourceFuture{Future: future}
}

func (a *PinpointEmailStub) PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) *PinpointemailPutAccountDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountDedicatedIpWarmupAttributes", input)
	return &PinpointemailPutAccountDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutAccountSendingAttributes(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) (*pinpointemail.PutAccountSendingAttributesOutput, error) {
	var output pinpointemail.PutAccountSendingAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountSendingAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutAccountSendingAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) *PinpointemailPutAccountSendingAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountSendingAttributes", input)
	return &PinpointemailPutAccountSendingAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetDeliveryOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetDeliveryOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) *PinpointemailPutConfigurationSetDeliveryOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetDeliveryOptions", input)
	return &PinpointemailPutConfigurationSetDeliveryOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetReputationOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetReputationOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetReputationOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) *PinpointemailPutConfigurationSetReputationOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetReputationOptions", input)
	return &PinpointemailPutConfigurationSetReputationOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetSendingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetSendingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetSendingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) *PinpointemailPutConfigurationSetSendingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetSendingOptions", input)
	return &PinpointemailPutConfigurationSetSendingOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetTrackingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetTrackingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetTrackingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) *PinpointemailPutConfigurationSetTrackingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetTrackingOptions", input)
	return &PinpointemailPutConfigurationSetTrackingOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutDedicatedIpInPool(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {
	var output pinpointemail.PutDedicatedIpInPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpInPool", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutDedicatedIpInPoolAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) *PinpointemailPutDedicatedIpInPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpInPool", input)
	return &PinpointemailPutDedicatedIpInPoolFuture{Future: future}
}

func (a *PinpointEmailStub) PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) *PinpointemailPutDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpWarmupAttributes", input)
	return &PinpointemailPutDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutDeliverabilityDashboardOption(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {
	var output pinpointemail.PutDeliverabilityDashboardOptionOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDeliverabilityDashboardOption", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) *PinpointemailPutDeliverabilityDashboardOptionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDeliverabilityDashboardOption", input)
	return &PinpointemailPutDeliverabilityDashboardOptionFuture{Future: future}
}

func (a *PinpointEmailStub) PutEmailIdentityDkimAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityDkimAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityDkimAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) *PinpointemailPutEmailIdentityDkimAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityDkimAttributes", input)
	return &PinpointemailPutEmailIdentityDkimAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityFeedbackAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityFeedbackAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) *PinpointemailPutEmailIdentityFeedbackAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityFeedbackAttributes", input)
	return &PinpointemailPutEmailIdentityFeedbackAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityMailFromAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityMailFromAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) *PinpointemailPutEmailIdentityMailFromAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityMailFromAttributes", input)
	return &PinpointemailPutEmailIdentityMailFromAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) SendEmail(ctx workflow.Context, input *pinpointemail.SendEmailInput) (*pinpointemail.SendEmailOutput, error) {
	var output pinpointemail.SendEmailOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.SendEmail", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) SendEmailAsync(ctx workflow.Context, input *pinpointemail.SendEmailInput) *PinpointemailSendEmailFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.SendEmail", input)
	return &PinpointemailSendEmailFuture{Future: future}
}

func (a *PinpointEmailStub) TagResource(ctx workflow.Context, input *pinpointemail.TagResourceInput) (*pinpointemail.TagResourceOutput, error) {
	var output pinpointemail.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) TagResourceAsync(ctx workflow.Context, input *pinpointemail.TagResourceInput) *PinpointemailTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.TagResource", input)
	return &PinpointemailTagResourceFuture{Future: future}
}

func (a *PinpointEmailStub) UntagResource(ctx workflow.Context, input *pinpointemail.UntagResourceInput) (*pinpointemail.UntagResourceOutput, error) {
	var output pinpointemail.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) UntagResourceAsync(ctx workflow.Context, input *pinpointemail.UntagResourceInput) *PinpointemailUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UntagResource", input)
	return &PinpointemailUntagResourceFuture{Future: future}
}

func (a *PinpointEmailStub) UpdateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.UpdateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UpdateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) *PinpointemailUpdateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UpdateConfigurationSetEventDestination", input)
	return &PinpointemailUpdateConfigurationSetEventDestinationFuture{Future: future}
}
