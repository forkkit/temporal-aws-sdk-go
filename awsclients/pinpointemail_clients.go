// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/pinpointemail"
	"go.temporal.io/sdk/workflow"
)

type PinpointEmailClient interface {
	CreateConfigurationSet(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) (*pinpointemail.CreateConfigurationSetOutput, error)
	CreateConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) *PinpointEmailCreateConfigurationSetFuture

	CreateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error)
	CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) *PinpointEmailCreateConfigurationSetEventDestinationFuture

	CreateDedicatedIpPool(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) (*pinpointemail.CreateDedicatedIpPoolOutput, error)
	CreateDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) *PinpointEmailCreateDedicatedIpPoolFuture

	CreateDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) (*pinpointemail.CreateDeliverabilityTestReportOutput, error)
	CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) *PinpointEmailCreateDeliverabilityTestReportFuture

	CreateEmailIdentity(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) (*pinpointemail.CreateEmailIdentityOutput, error)
	CreateEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) *PinpointEmailCreateEmailIdentityFuture

	DeleteConfigurationSet(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) (*pinpointemail.DeleteConfigurationSetOutput, error)
	DeleteConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) *PinpointEmailDeleteConfigurationSetFuture

	DeleteConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error)
	DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) *PinpointEmailDeleteConfigurationSetEventDestinationFuture

	DeleteDedicatedIpPool(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) (*pinpointemail.DeleteDedicatedIpPoolOutput, error)
	DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) *PinpointEmailDeleteDedicatedIpPoolFuture

	DeleteEmailIdentity(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) (*pinpointemail.DeleteEmailIdentityOutput, error)
	DeleteEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) *PinpointEmailDeleteEmailIdentityFuture

	GetAccount(ctx workflow.Context, input *pinpointemail.GetAccountInput) (*pinpointemail.GetAccountOutput, error)
	GetAccountAsync(ctx workflow.Context, input *pinpointemail.GetAccountInput) *PinpointEmailGetAccountFuture

	GetBlacklistReports(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) (*pinpointemail.GetBlacklistReportsOutput, error)
	GetBlacklistReportsAsync(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) *PinpointEmailGetBlacklistReportsFuture

	GetConfigurationSet(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) (*pinpointemail.GetConfigurationSetOutput, error)
	GetConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) *PinpointEmailGetConfigurationSetFuture

	GetConfigurationSetEventDestinations(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error)
	GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) *PinpointEmailGetConfigurationSetEventDestinationsFuture

	GetDedicatedIp(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) (*pinpointemail.GetDedicatedIpOutput, error)
	GetDedicatedIpAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) *PinpointEmailGetDedicatedIpFuture

	GetDedicatedIps(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) (*pinpointemail.GetDedicatedIpsOutput, error)
	GetDedicatedIpsAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) *PinpointEmailGetDedicatedIpsFuture

	GetDeliverabilityDashboardOptions(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error)
	GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) *PinpointEmailGetDeliverabilityDashboardOptionsFuture

	GetDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) (*pinpointemail.GetDeliverabilityTestReportOutput, error)
	GetDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) *PinpointEmailGetDeliverabilityTestReportFuture

	GetDomainDeliverabilityCampaign(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error)
	GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) *PinpointEmailGetDomainDeliverabilityCampaignFuture

	GetDomainStatisticsReport(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) (*pinpointemail.GetDomainStatisticsReportOutput, error)
	GetDomainStatisticsReportAsync(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) *PinpointEmailGetDomainStatisticsReportFuture

	GetEmailIdentity(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) (*pinpointemail.GetEmailIdentityOutput, error)
	GetEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) *PinpointEmailGetEmailIdentityFuture

	ListConfigurationSets(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) (*pinpointemail.ListConfigurationSetsOutput, error)
	ListConfigurationSetsAsync(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) *PinpointEmailListConfigurationSetsFuture

	ListDedicatedIpPools(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) (*pinpointemail.ListDedicatedIpPoolsOutput, error)
	ListDedicatedIpPoolsAsync(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) *PinpointEmailListDedicatedIpPoolsFuture

	ListDeliverabilityTestReports(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) (*pinpointemail.ListDeliverabilityTestReportsOutput, error)
	ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) *PinpointEmailListDeliverabilityTestReportsFuture

	ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error)
	ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) *PinpointEmailListDomainDeliverabilityCampaignsFuture

	ListEmailIdentities(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) (*pinpointemail.ListEmailIdentitiesOutput, error)
	ListEmailIdentitiesAsync(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) *PinpointEmailListEmailIdentitiesFuture

	ListTagsForResource(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) (*pinpointemail.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) *PinpointEmailListTagsForResourceFuture

	PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error)
	PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) *PinpointEmailPutAccountDedicatedIpWarmupAttributesFuture

	PutAccountSendingAttributes(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) (*pinpointemail.PutAccountSendingAttributesOutput, error)
	PutAccountSendingAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) *PinpointEmailPutAccountSendingAttributesFuture

	PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error)
	PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) *PinpointEmailPutConfigurationSetDeliveryOptionsFuture

	PutConfigurationSetReputationOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error)
	PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) *PinpointEmailPutConfigurationSetReputationOptionsFuture

	PutConfigurationSetSendingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error)
	PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) *PinpointEmailPutConfigurationSetSendingOptionsFuture

	PutConfigurationSetTrackingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error)
	PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) *PinpointEmailPutConfigurationSetTrackingOptionsFuture

	PutDedicatedIpInPool(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) (*pinpointemail.PutDedicatedIpInPoolOutput, error)
	PutDedicatedIpInPoolAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) *PinpointEmailPutDedicatedIpInPoolFuture

	PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error)
	PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) *PinpointEmailPutDedicatedIpWarmupAttributesFuture

	PutDeliverabilityDashboardOption(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error)
	PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) *PinpointEmailPutDeliverabilityDashboardOptionFuture

	PutEmailIdentityDkimAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error)
	PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) *PinpointEmailPutEmailIdentityDkimAttributesFuture

	PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error)
	PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) *PinpointEmailPutEmailIdentityFeedbackAttributesFuture

	PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error)
	PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) *PinpointEmailPutEmailIdentityMailFromAttributesFuture

	SendEmail(ctx workflow.Context, input *pinpointemail.SendEmailInput) (*pinpointemail.SendEmailOutput, error)
	SendEmailAsync(ctx workflow.Context, input *pinpointemail.SendEmailInput) *PinpointEmailSendEmailFuture

	TagResource(ctx workflow.Context, input *pinpointemail.TagResourceInput) (*pinpointemail.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *pinpointemail.TagResourceInput) *PinpointEmailTagResourceFuture

	UntagResource(ctx workflow.Context, input *pinpointemail.UntagResourceInput) (*pinpointemail.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *pinpointemail.UntagResourceInput) *PinpointEmailUntagResourceFuture

	UpdateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error)
	UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) *PinpointEmailUpdateConfigurationSetEventDestinationFuture
}

type PinpointEmailStub struct{}

func NewPinpointEmailStub() PinpointEmailClient {
	return &PinpointEmailStub{}
}

type PinpointEmailCreateConfigurationSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailCreateConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.CreateConfigurationSetOutput, error) {
	var output pinpointemail.CreateConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailCreateConfigurationSetEventDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailCreateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.CreateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailCreateDedicatedIpPoolFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailCreateDedicatedIpPoolFuture) Get(ctx workflow.Context) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {
	var output pinpointemail.CreateDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailCreateDeliverabilityTestReportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailCreateDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {
	var output pinpointemail.CreateDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailCreateEmailIdentityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailCreateEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.CreateEmailIdentityOutput, error) {
	var output pinpointemail.CreateEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailDeleteConfigurationSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailDeleteConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteConfigurationSetOutput, error) {
	var output pinpointemail.DeleteConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailDeleteConfigurationSetEventDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailDeleteConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.DeleteConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailDeleteDedicatedIpPoolFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailDeleteDedicatedIpPoolFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {
	var output pinpointemail.DeleteDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailDeleteEmailIdentityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailDeleteEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteEmailIdentityOutput, error) {
	var output pinpointemail.DeleteEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetAccountFuture) Get(ctx workflow.Context) (*pinpointemail.GetAccountOutput, error) {
	var output pinpointemail.GetAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetBlacklistReportsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetBlacklistReportsFuture) Get(ctx workflow.Context) (*pinpointemail.GetBlacklistReportsOutput, error) {
	var output pinpointemail.GetBlacklistReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetConfigurationSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.GetConfigurationSetOutput, error) {
	var output pinpointemail.GetConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetConfigurationSetEventDestinationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetConfigurationSetEventDestinationsFuture) Get(ctx workflow.Context) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {
	var output pinpointemail.GetConfigurationSetEventDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetDedicatedIpFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetDedicatedIpFuture) Get(ctx workflow.Context) (*pinpointemail.GetDedicatedIpOutput, error) {
	var output pinpointemail.GetDedicatedIpOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetDedicatedIpsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetDedicatedIpsFuture) Get(ctx workflow.Context) (*pinpointemail.GetDedicatedIpsOutput, error) {
	var output pinpointemail.GetDedicatedIpsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetDeliverabilityDashboardOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetDeliverabilityDashboardOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {
	var output pinpointemail.GetDeliverabilityDashboardOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetDeliverabilityTestReportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {
	var output pinpointemail.GetDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetDomainDeliverabilityCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetDomainDeliverabilityCampaignFuture) Get(ctx workflow.Context) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {
	var output pinpointemail.GetDomainDeliverabilityCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetDomainStatisticsReportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetDomainStatisticsReportFuture) Get(ctx workflow.Context) (*pinpointemail.GetDomainStatisticsReportOutput, error) {
	var output pinpointemail.GetDomainStatisticsReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailGetEmailIdentityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailGetEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.GetEmailIdentityOutput, error) {
	var output pinpointemail.GetEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailListConfigurationSetsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailListConfigurationSetsFuture) Get(ctx workflow.Context) (*pinpointemail.ListConfigurationSetsOutput, error) {
	var output pinpointemail.ListConfigurationSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailListDedicatedIpPoolsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailListDedicatedIpPoolsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {
	var output pinpointemail.ListDedicatedIpPoolsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailListDeliverabilityTestReportsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailListDeliverabilityTestReportsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {
	var output pinpointemail.ListDeliverabilityTestReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailListDomainDeliverabilityCampaignsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailListDomainDeliverabilityCampaignsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {
	var output pinpointemail.ListDomainDeliverabilityCampaignsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailListEmailIdentitiesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailListEmailIdentitiesFuture) Get(ctx workflow.Context) (*pinpointemail.ListEmailIdentitiesOutput, error) {
	var output pinpointemail.ListEmailIdentitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailListTagsForResourceFuture) Get(ctx workflow.Context) (*pinpointemail.ListTagsForResourceOutput, error) {
	var output pinpointemail.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutAccountDedicatedIpWarmupAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutAccountDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutAccountSendingAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutAccountSendingAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutAccountSendingAttributesOutput, error) {
	var output pinpointemail.PutAccountSendingAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutConfigurationSetDeliveryOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutConfigurationSetDeliveryOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetDeliveryOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutConfigurationSetReputationOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutConfigurationSetReputationOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetReputationOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutConfigurationSetSendingOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutConfigurationSetSendingOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetSendingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutConfigurationSetTrackingOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutConfigurationSetTrackingOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetTrackingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutDedicatedIpInPoolFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutDedicatedIpInPoolFuture) Get(ctx workflow.Context) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {
	var output pinpointemail.PutDedicatedIpInPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutDedicatedIpWarmupAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutDeliverabilityDashboardOptionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutDeliverabilityDashboardOptionFuture) Get(ctx workflow.Context) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {
	var output pinpointemail.PutDeliverabilityDashboardOptionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutEmailIdentityDkimAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutEmailIdentityDkimAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityDkimAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutEmailIdentityFeedbackAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutEmailIdentityFeedbackAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityFeedbackAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailPutEmailIdentityMailFromAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailPutEmailIdentityMailFromAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityMailFromAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailSendEmailFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailSendEmailFuture) Get(ctx workflow.Context) (*pinpointemail.SendEmailOutput, error) {
	var output pinpointemail.SendEmailOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailTagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailTagResourceFuture) Get(ctx workflow.Context) (*pinpointemail.TagResourceOutput, error) {
	var output pinpointemail.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailUntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailUntagResourceFuture) Get(ctx workflow.Context) (*pinpointemail.UntagResourceOutput, error) {
	var output pinpointemail.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointEmailUpdateConfigurationSetEventDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointEmailUpdateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.UpdateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateConfigurationSet(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) (*pinpointemail.CreateConfigurationSetOutput, error) {
	var output pinpointemail.CreateConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) *PinpointEmailCreateConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSet", input)
	return &PinpointEmailCreateConfigurationSetFuture{Future: future}
}

func (a *PinpointEmailStub) CreateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.CreateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) *PinpointEmailCreateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateConfigurationSetEventDestination", input)
	return &PinpointEmailCreateConfigurationSetEventDestinationFuture{Future: future}
}

func (a *PinpointEmailStub) CreateDedicatedIpPool(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {
	var output pinpointemail.CreateDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) *PinpointEmailCreateDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDedicatedIpPool", input)
	return &PinpointEmailCreateDedicatedIpPoolFuture{Future: future}
}

func (a *PinpointEmailStub) CreateDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {
	var output pinpointemail.CreateDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) *PinpointEmailCreateDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateDeliverabilityTestReport", input)
	return &PinpointEmailCreateDeliverabilityTestReportFuture{Future: future}
}

func (a *PinpointEmailStub) CreateEmailIdentity(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) (*pinpointemail.CreateEmailIdentityOutput, error) {
	var output pinpointemail.CreateEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) CreateEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) *PinpointEmailCreateEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.CreateEmailIdentity", input)
	return &PinpointEmailCreateEmailIdentityFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteConfigurationSet(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) (*pinpointemail.DeleteConfigurationSetOutput, error) {
	var output pinpointemail.DeleteConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) *PinpointEmailDeleteConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSet", input)
	return &PinpointEmailDeleteConfigurationSetFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.DeleteConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) *PinpointEmailDeleteConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteConfigurationSetEventDestination", input)
	return &PinpointEmailDeleteConfigurationSetEventDestinationFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteDedicatedIpPool(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {
	var output pinpointemail.DeleteDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) *PinpointEmailDeleteDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteDedicatedIpPool", input)
	return &PinpointEmailDeleteDedicatedIpPoolFuture{Future: future}
}

func (a *PinpointEmailStub) DeleteEmailIdentity(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) (*pinpointemail.DeleteEmailIdentityOutput, error) {
	var output pinpointemail.DeleteEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) DeleteEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) *PinpointEmailDeleteEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.DeleteEmailIdentity", input)
	return &PinpointEmailDeleteEmailIdentityFuture{Future: future}
}

func (a *PinpointEmailStub) GetAccount(ctx workflow.Context, input *pinpointemail.GetAccountInput) (*pinpointemail.GetAccountOutput, error) {
	var output pinpointemail.GetAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetAccountAsync(ctx workflow.Context, input *pinpointemail.GetAccountInput) *PinpointEmailGetAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetAccount", input)
	return &PinpointEmailGetAccountFuture{Future: future}
}

func (a *PinpointEmailStub) GetBlacklistReports(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) (*pinpointemail.GetBlacklistReportsOutput, error) {
	var output pinpointemail.GetBlacklistReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetBlacklistReports", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetBlacklistReportsAsync(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) *PinpointEmailGetBlacklistReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetBlacklistReports", input)
	return &PinpointEmailGetBlacklistReportsFuture{Future: future}
}

func (a *PinpointEmailStub) GetConfigurationSet(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) (*pinpointemail.GetConfigurationSetOutput, error) {
	var output pinpointemail.GetConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) *PinpointEmailGetConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSet", input)
	return &PinpointEmailGetConfigurationSetFuture{Future: future}
}

func (a *PinpointEmailStub) GetConfigurationSetEventDestinations(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {
	var output pinpointemail.GetConfigurationSetEventDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSetEventDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) *PinpointEmailGetConfigurationSetEventDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetConfigurationSetEventDestinations", input)
	return &PinpointEmailGetConfigurationSetEventDestinationsFuture{Future: future}
}

func (a *PinpointEmailStub) GetDedicatedIp(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) (*pinpointemail.GetDedicatedIpOutput, error) {
	var output pinpointemail.GetDedicatedIpOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIp", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDedicatedIpAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) *PinpointEmailGetDedicatedIpFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIp", input)
	return &PinpointEmailGetDedicatedIpFuture{Future: future}
}

func (a *PinpointEmailStub) GetDedicatedIps(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) (*pinpointemail.GetDedicatedIpsOutput, error) {
	var output pinpointemail.GetDedicatedIpsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIps", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDedicatedIpsAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) *PinpointEmailGetDedicatedIpsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDedicatedIps", input)
	return &PinpointEmailGetDedicatedIpsFuture{Future: future}
}

func (a *PinpointEmailStub) GetDeliverabilityDashboardOptions(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {
	var output pinpointemail.GetDeliverabilityDashboardOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityDashboardOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) *PinpointEmailGetDeliverabilityDashboardOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityDashboardOptions", input)
	return &PinpointEmailGetDeliverabilityDashboardOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) GetDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {
	var output pinpointemail.GetDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) *PinpointEmailGetDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDeliverabilityTestReport", input)
	return &PinpointEmailGetDeliverabilityTestReportFuture{Future: future}
}

func (a *PinpointEmailStub) GetDomainDeliverabilityCampaign(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {
	var output pinpointemail.GetDomainDeliverabilityCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainDeliverabilityCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) *PinpointEmailGetDomainDeliverabilityCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainDeliverabilityCampaign", input)
	return &PinpointEmailGetDomainDeliverabilityCampaignFuture{Future: future}
}

func (a *PinpointEmailStub) GetDomainStatisticsReport(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) (*pinpointemail.GetDomainStatisticsReportOutput, error) {
	var output pinpointemail.GetDomainStatisticsReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainStatisticsReport", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetDomainStatisticsReportAsync(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) *PinpointEmailGetDomainStatisticsReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetDomainStatisticsReport", input)
	return &PinpointEmailGetDomainStatisticsReportFuture{Future: future}
}

func (a *PinpointEmailStub) GetEmailIdentity(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) (*pinpointemail.GetEmailIdentityOutput, error) {
	var output pinpointemail.GetEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) GetEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) *PinpointEmailGetEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.GetEmailIdentity", input)
	return &PinpointEmailGetEmailIdentityFuture{Future: future}
}

func (a *PinpointEmailStub) ListConfigurationSets(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) (*pinpointemail.ListConfigurationSetsOutput, error) {
	var output pinpointemail.ListConfigurationSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListConfigurationSets", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListConfigurationSetsAsync(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) *PinpointEmailListConfigurationSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListConfigurationSets", input)
	return &PinpointEmailListConfigurationSetsFuture{Future: future}
}

func (a *PinpointEmailStub) ListDedicatedIpPools(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {
	var output pinpointemail.ListDedicatedIpPoolsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDedicatedIpPools", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListDedicatedIpPoolsAsync(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) *PinpointEmailListDedicatedIpPoolsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDedicatedIpPools", input)
	return &PinpointEmailListDedicatedIpPoolsFuture{Future: future}
}

func (a *PinpointEmailStub) ListDeliverabilityTestReports(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {
	var output pinpointemail.ListDeliverabilityTestReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDeliverabilityTestReports", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) *PinpointEmailListDeliverabilityTestReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDeliverabilityTestReports", input)
	return &PinpointEmailListDeliverabilityTestReportsFuture{Future: future}
}

func (a *PinpointEmailStub) ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {
	var output pinpointemail.ListDomainDeliverabilityCampaignsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDomainDeliverabilityCampaigns", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) *PinpointEmailListDomainDeliverabilityCampaignsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListDomainDeliverabilityCampaigns", input)
	return &PinpointEmailListDomainDeliverabilityCampaignsFuture{Future: future}
}

func (a *PinpointEmailStub) ListEmailIdentities(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) (*pinpointemail.ListEmailIdentitiesOutput, error) {
	var output pinpointemail.ListEmailIdentitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListEmailIdentities", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListEmailIdentitiesAsync(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) *PinpointEmailListEmailIdentitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListEmailIdentities", input)
	return &PinpointEmailListEmailIdentitiesFuture{Future: future}
}

func (a *PinpointEmailStub) ListTagsForResource(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) (*pinpointemail.ListTagsForResourceOutput, error) {
	var output pinpointemail.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) ListTagsForResourceAsync(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) *PinpointEmailListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.ListTagsForResource", input)
	return &PinpointEmailListTagsForResourceFuture{Future: future}
}

func (a *PinpointEmailStub) PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) *PinpointEmailPutAccountDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountDedicatedIpWarmupAttributes", input)
	return &PinpointEmailPutAccountDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutAccountSendingAttributes(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) (*pinpointemail.PutAccountSendingAttributesOutput, error) {
	var output pinpointemail.PutAccountSendingAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountSendingAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutAccountSendingAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) *PinpointEmailPutAccountSendingAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutAccountSendingAttributes", input)
	return &PinpointEmailPutAccountSendingAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetDeliveryOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetDeliveryOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) *PinpointEmailPutConfigurationSetDeliveryOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetDeliveryOptions", input)
	return &PinpointEmailPutConfigurationSetDeliveryOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetReputationOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetReputationOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetReputationOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) *PinpointEmailPutConfigurationSetReputationOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetReputationOptions", input)
	return &PinpointEmailPutConfigurationSetReputationOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetSendingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetSendingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetSendingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) *PinpointEmailPutConfigurationSetSendingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetSendingOptions", input)
	return &PinpointEmailPutConfigurationSetSendingOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutConfigurationSetTrackingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetTrackingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetTrackingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) *PinpointEmailPutConfigurationSetTrackingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutConfigurationSetTrackingOptions", input)
	return &PinpointEmailPutConfigurationSetTrackingOptionsFuture{Future: future}
}

func (a *PinpointEmailStub) PutDedicatedIpInPool(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {
	var output pinpointemail.PutDedicatedIpInPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpInPool", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutDedicatedIpInPoolAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) *PinpointEmailPutDedicatedIpInPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpInPool", input)
	return &PinpointEmailPutDedicatedIpInPoolFuture{Future: future}
}

func (a *PinpointEmailStub) PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) *PinpointEmailPutDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDedicatedIpWarmupAttributes", input)
	return &PinpointEmailPutDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutDeliverabilityDashboardOption(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {
	var output pinpointemail.PutDeliverabilityDashboardOptionOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDeliverabilityDashboardOption", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) *PinpointEmailPutDeliverabilityDashboardOptionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutDeliverabilityDashboardOption", input)
	return &PinpointEmailPutDeliverabilityDashboardOptionFuture{Future: future}
}

func (a *PinpointEmailStub) PutEmailIdentityDkimAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityDkimAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityDkimAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) *PinpointEmailPutEmailIdentityDkimAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityDkimAttributes", input)
	return &PinpointEmailPutEmailIdentityDkimAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityFeedbackAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityFeedbackAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) *PinpointEmailPutEmailIdentityFeedbackAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityFeedbackAttributes", input)
	return &PinpointEmailPutEmailIdentityFeedbackAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityMailFromAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityMailFromAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) *PinpointEmailPutEmailIdentityMailFromAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.PutEmailIdentityMailFromAttributes", input)
	return &PinpointEmailPutEmailIdentityMailFromAttributesFuture{Future: future}
}

func (a *PinpointEmailStub) SendEmail(ctx workflow.Context, input *pinpointemail.SendEmailInput) (*pinpointemail.SendEmailOutput, error) {
	var output pinpointemail.SendEmailOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.SendEmail", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) SendEmailAsync(ctx workflow.Context, input *pinpointemail.SendEmailInput) *PinpointEmailSendEmailFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.SendEmail", input)
	return &PinpointEmailSendEmailFuture{Future: future}
}

func (a *PinpointEmailStub) TagResource(ctx workflow.Context, input *pinpointemail.TagResourceInput) (*pinpointemail.TagResourceOutput, error) {
	var output pinpointemail.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) TagResourceAsync(ctx workflow.Context, input *pinpointemail.TagResourceInput) *PinpointEmailTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.TagResource", input)
	return &PinpointEmailTagResourceFuture{Future: future}
}

func (a *PinpointEmailStub) UntagResource(ctx workflow.Context, input *pinpointemail.UntagResourceInput) (*pinpointemail.UntagResourceOutput, error) {
	var output pinpointemail.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) UntagResourceAsync(ctx workflow.Context, input *pinpointemail.UntagResourceInput) *PinpointEmailUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UntagResource", input)
	return &PinpointEmailUntagResourceFuture{Future: future}
}

func (a *PinpointEmailStub) UpdateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.UpdateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UpdateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointEmailStub) UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) *PinpointEmailUpdateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpointemail.UpdateConfigurationSetEventDestination", input)
	return &PinpointEmailUpdateConfigurationSetEventDestinationFuture{Future: future}
}
