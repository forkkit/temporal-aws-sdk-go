// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/guardduty"
	"go.temporal.io/sdk/workflow"
)

type GuardDutyClient interface {
	AcceptInvitation(ctx workflow.Context, input *guardduty.AcceptInvitationInput) (*guardduty.AcceptInvitationOutput, error)
	AcceptInvitationAsync(ctx workflow.Context, input *guardduty.AcceptInvitationInput) *GuarddutyAcceptInvitationFuture

	ArchiveFindings(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) (*guardduty.ArchiveFindingsOutput, error)
	ArchiveFindingsAsync(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) *GuarddutyArchiveFindingsFuture

	CreateDetector(ctx workflow.Context, input *guardduty.CreateDetectorInput) (*guardduty.CreateDetectorOutput, error)
	CreateDetectorAsync(ctx workflow.Context, input *guardduty.CreateDetectorInput) *GuarddutyCreateDetectorFuture

	CreateFilter(ctx workflow.Context, input *guardduty.CreateFilterInput) (*guardduty.CreateFilterOutput, error)
	CreateFilterAsync(ctx workflow.Context, input *guardduty.CreateFilterInput) *GuarddutyCreateFilterFuture

	CreateIPSet(ctx workflow.Context, input *guardduty.CreateIPSetInput) (*guardduty.CreateIPSetOutput, error)
	CreateIPSetAsync(ctx workflow.Context, input *guardduty.CreateIPSetInput) *GuarddutyCreateIPSetFuture

	CreateMembers(ctx workflow.Context, input *guardduty.CreateMembersInput) (*guardduty.CreateMembersOutput, error)
	CreateMembersAsync(ctx workflow.Context, input *guardduty.CreateMembersInput) *GuarddutyCreateMembersFuture

	CreatePublishingDestination(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) (*guardduty.CreatePublishingDestinationOutput, error)
	CreatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) *GuarddutyCreatePublishingDestinationFuture

	CreateSampleFindings(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) (*guardduty.CreateSampleFindingsOutput, error)
	CreateSampleFindingsAsync(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) *GuarddutyCreateSampleFindingsFuture

	CreateThreatIntelSet(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) (*guardduty.CreateThreatIntelSetOutput, error)
	CreateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) *GuarddutyCreateThreatIntelSetFuture

	DeclineInvitations(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) (*guardduty.DeclineInvitationsOutput, error)
	DeclineInvitationsAsync(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) *GuarddutyDeclineInvitationsFuture

	DeleteDetector(ctx workflow.Context, input *guardduty.DeleteDetectorInput) (*guardduty.DeleteDetectorOutput, error)
	DeleteDetectorAsync(ctx workflow.Context, input *guardduty.DeleteDetectorInput) *GuarddutyDeleteDetectorFuture

	DeleteFilter(ctx workflow.Context, input *guardduty.DeleteFilterInput) (*guardduty.DeleteFilterOutput, error)
	DeleteFilterAsync(ctx workflow.Context, input *guardduty.DeleteFilterInput) *GuarddutyDeleteFilterFuture

	DeleteIPSet(ctx workflow.Context, input *guardduty.DeleteIPSetInput) (*guardduty.DeleteIPSetOutput, error)
	DeleteIPSetAsync(ctx workflow.Context, input *guardduty.DeleteIPSetInput) *GuarddutyDeleteIPSetFuture

	DeleteInvitations(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) (*guardduty.DeleteInvitationsOutput, error)
	DeleteInvitationsAsync(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) *GuarddutyDeleteInvitationsFuture

	DeleteMembers(ctx workflow.Context, input *guardduty.DeleteMembersInput) (*guardduty.DeleteMembersOutput, error)
	DeleteMembersAsync(ctx workflow.Context, input *guardduty.DeleteMembersInput) *GuarddutyDeleteMembersFuture

	DeletePublishingDestination(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) (*guardduty.DeletePublishingDestinationOutput, error)
	DeletePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) *GuarddutyDeletePublishingDestinationFuture

	DeleteThreatIntelSet(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) (*guardduty.DeleteThreatIntelSetOutput, error)
	DeleteThreatIntelSetAsync(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) *GuarddutyDeleteThreatIntelSetFuture

	DescribeOrganizationConfiguration(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) (*guardduty.DescribeOrganizationConfigurationOutput, error)
	DescribeOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) *GuarddutyDescribeOrganizationConfigurationFuture

	DescribePublishingDestination(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) (*guardduty.DescribePublishingDestinationOutput, error)
	DescribePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) *GuarddutyDescribePublishingDestinationFuture

	DisableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) (*guardduty.DisableOrganizationAdminAccountOutput, error)
	DisableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) *GuarddutyDisableOrganizationAdminAccountFuture

	DisassociateFromMasterAccount(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) (*guardduty.DisassociateFromMasterAccountOutput, error)
	DisassociateFromMasterAccountAsync(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) *GuarddutyDisassociateFromMasterAccountFuture

	DisassociateMembers(ctx workflow.Context, input *guardduty.DisassociateMembersInput) (*guardduty.DisassociateMembersOutput, error)
	DisassociateMembersAsync(ctx workflow.Context, input *guardduty.DisassociateMembersInput) *GuarddutyDisassociateMembersFuture

	EnableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) (*guardduty.EnableOrganizationAdminAccountOutput, error)
	EnableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) *GuarddutyEnableOrganizationAdminAccountFuture

	GetDetector(ctx workflow.Context, input *guardduty.GetDetectorInput) (*guardduty.GetDetectorOutput, error)
	GetDetectorAsync(ctx workflow.Context, input *guardduty.GetDetectorInput) *GuarddutyGetDetectorFuture

	GetFilter(ctx workflow.Context, input *guardduty.GetFilterInput) (*guardduty.GetFilterOutput, error)
	GetFilterAsync(ctx workflow.Context, input *guardduty.GetFilterInput) *GuarddutyGetFilterFuture

	GetFindings(ctx workflow.Context, input *guardduty.GetFindingsInput) (*guardduty.GetFindingsOutput, error)
	GetFindingsAsync(ctx workflow.Context, input *guardduty.GetFindingsInput) *GuarddutyGetFindingsFuture

	GetFindingsStatistics(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) (*guardduty.GetFindingsStatisticsOutput, error)
	GetFindingsStatisticsAsync(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) *GuarddutyGetFindingsStatisticsFuture

	GetIPSet(ctx workflow.Context, input *guardduty.GetIPSetInput) (*guardduty.GetIPSetOutput, error)
	GetIPSetAsync(ctx workflow.Context, input *guardduty.GetIPSetInput) *GuarddutyGetIPSetFuture

	GetInvitationsCount(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) (*guardduty.GetInvitationsCountOutput, error)
	GetInvitationsCountAsync(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) *GuarddutyGetInvitationsCountFuture

	GetMasterAccount(ctx workflow.Context, input *guardduty.GetMasterAccountInput) (*guardduty.GetMasterAccountOutput, error)
	GetMasterAccountAsync(ctx workflow.Context, input *guardduty.GetMasterAccountInput) *GuarddutyGetMasterAccountFuture

	GetMemberDetectors(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) (*guardduty.GetMemberDetectorsOutput, error)
	GetMemberDetectorsAsync(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) *GuarddutyGetMemberDetectorsFuture

	GetMembers(ctx workflow.Context, input *guardduty.GetMembersInput) (*guardduty.GetMembersOutput, error)
	GetMembersAsync(ctx workflow.Context, input *guardduty.GetMembersInput) *GuarddutyGetMembersFuture

	GetThreatIntelSet(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) (*guardduty.GetThreatIntelSetOutput, error)
	GetThreatIntelSetAsync(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) *GuarddutyGetThreatIntelSetFuture

	GetUsageStatistics(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) (*guardduty.GetUsageStatisticsOutput, error)
	GetUsageStatisticsAsync(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) *GuarddutyGetUsageStatisticsFuture

	InviteMembers(ctx workflow.Context, input *guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error)
	InviteMembersAsync(ctx workflow.Context, input *guardduty.InviteMembersInput) *GuarddutyInviteMembersFuture

	ListDetectors(ctx workflow.Context, input *guardduty.ListDetectorsInput) (*guardduty.ListDetectorsOutput, error)
	ListDetectorsAsync(ctx workflow.Context, input *guardduty.ListDetectorsInput) *GuarddutyListDetectorsFuture

	ListFilters(ctx workflow.Context, input *guardduty.ListFiltersInput) (*guardduty.ListFiltersOutput, error)
	ListFiltersAsync(ctx workflow.Context, input *guardduty.ListFiltersInput) *GuarddutyListFiltersFuture

	ListFindings(ctx workflow.Context, input *guardduty.ListFindingsInput) (*guardduty.ListFindingsOutput, error)
	ListFindingsAsync(ctx workflow.Context, input *guardduty.ListFindingsInput) *GuarddutyListFindingsFuture

	ListIPSets(ctx workflow.Context, input *guardduty.ListIPSetsInput) (*guardduty.ListIPSetsOutput, error)
	ListIPSetsAsync(ctx workflow.Context, input *guardduty.ListIPSetsInput) *GuarddutyListIPSetsFuture

	ListInvitations(ctx workflow.Context, input *guardduty.ListInvitationsInput) (*guardduty.ListInvitationsOutput, error)
	ListInvitationsAsync(ctx workflow.Context, input *guardduty.ListInvitationsInput) *GuarddutyListInvitationsFuture

	ListMembers(ctx workflow.Context, input *guardduty.ListMembersInput) (*guardduty.ListMembersOutput, error)
	ListMembersAsync(ctx workflow.Context, input *guardduty.ListMembersInput) *GuarddutyListMembersFuture

	ListOrganizationAdminAccounts(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) (*guardduty.ListOrganizationAdminAccountsOutput, error)
	ListOrganizationAdminAccountsAsync(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) *GuarddutyListOrganizationAdminAccountsFuture

	ListPublishingDestinations(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) (*guardduty.ListPublishingDestinationsOutput, error)
	ListPublishingDestinationsAsync(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) *GuarddutyListPublishingDestinationsFuture

	ListTagsForResource(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) (*guardduty.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) *GuarddutyListTagsForResourceFuture

	ListThreatIntelSets(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) (*guardduty.ListThreatIntelSetsOutput, error)
	ListThreatIntelSetsAsync(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) *GuarddutyListThreatIntelSetsFuture

	StartMonitoringMembers(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) (*guardduty.StartMonitoringMembersOutput, error)
	StartMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) *GuarddutyStartMonitoringMembersFuture

	StopMonitoringMembers(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) (*guardduty.StopMonitoringMembersOutput, error)
	StopMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) *GuarddutyStopMonitoringMembersFuture

	TagResource(ctx workflow.Context, input *guardduty.TagResourceInput) (*guardduty.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *guardduty.TagResourceInput) *GuarddutyTagResourceFuture

	UnarchiveFindings(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) (*guardduty.UnarchiveFindingsOutput, error)
	UnarchiveFindingsAsync(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) *GuarddutyUnarchiveFindingsFuture

	UntagResource(ctx workflow.Context, input *guardduty.UntagResourceInput) (*guardduty.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *guardduty.UntagResourceInput) *GuarddutyUntagResourceFuture

	UpdateDetector(ctx workflow.Context, input *guardduty.UpdateDetectorInput) (*guardduty.UpdateDetectorOutput, error)
	UpdateDetectorAsync(ctx workflow.Context, input *guardduty.UpdateDetectorInput) *GuarddutyUpdateDetectorFuture

	UpdateFilter(ctx workflow.Context, input *guardduty.UpdateFilterInput) (*guardduty.UpdateFilterOutput, error)
	UpdateFilterAsync(ctx workflow.Context, input *guardduty.UpdateFilterInput) *GuarddutyUpdateFilterFuture

	UpdateFindingsFeedback(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) (*guardduty.UpdateFindingsFeedbackOutput, error)
	UpdateFindingsFeedbackAsync(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) *GuarddutyUpdateFindingsFeedbackFuture

	UpdateIPSet(ctx workflow.Context, input *guardduty.UpdateIPSetInput) (*guardduty.UpdateIPSetOutput, error)
	UpdateIPSetAsync(ctx workflow.Context, input *guardduty.UpdateIPSetInput) *GuarddutyUpdateIPSetFuture

	UpdateMemberDetectors(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) (*guardduty.UpdateMemberDetectorsOutput, error)
	UpdateMemberDetectorsAsync(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) *GuarddutyUpdateMemberDetectorsFuture

	UpdateOrganizationConfiguration(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) (*guardduty.UpdateOrganizationConfigurationOutput, error)
	UpdateOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) *GuarddutyUpdateOrganizationConfigurationFuture

	UpdatePublishingDestination(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) (*guardduty.UpdatePublishingDestinationOutput, error)
	UpdatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) *GuarddutyUpdatePublishingDestinationFuture

	UpdateThreatIntelSet(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) (*guardduty.UpdateThreatIntelSetOutput, error)
	UpdateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) *GuarddutyUpdateThreatIntelSetFuture
}

type GuardDutyStub struct{}

func NewGuardDutyStub() GuardDutyClient {
	return &GuardDutyStub{}
}

type GuarddutyAcceptInvitationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyAcceptInvitationFuture) Get(ctx workflow.Context) (*guardduty.AcceptInvitationOutput, error) {
	var output guardduty.AcceptInvitationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyArchiveFindingsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyArchiveFindingsFuture) Get(ctx workflow.Context) (*guardduty.ArchiveFindingsOutput, error) {
	var output guardduty.ArchiveFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreateDetectorFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreateDetectorFuture) Get(ctx workflow.Context) (*guardduty.CreateDetectorOutput, error) {
	var output guardduty.CreateDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreateFilterFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreateFilterFuture) Get(ctx workflow.Context) (*guardduty.CreateFilterOutput, error) {
	var output guardduty.CreateFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreateIPSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreateIPSetFuture) Get(ctx workflow.Context) (*guardduty.CreateIPSetOutput, error) {
	var output guardduty.CreateIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreateMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreateMembersFuture) Get(ctx workflow.Context) (*guardduty.CreateMembersOutput, error) {
	var output guardduty.CreateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreatePublishingDestinationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreatePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.CreatePublishingDestinationOutput, error) {
	var output guardduty.CreatePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreateSampleFindingsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreateSampleFindingsFuture) Get(ctx workflow.Context) (*guardduty.CreateSampleFindingsOutput, error) {
	var output guardduty.CreateSampleFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyCreateThreatIntelSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyCreateThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.CreateThreatIntelSetOutput, error) {
	var output guardduty.CreateThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeclineInvitationsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeclineInvitationsFuture) Get(ctx workflow.Context) (*guardduty.DeclineInvitationsOutput, error) {
	var output guardduty.DeclineInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeleteDetectorFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeleteDetectorFuture) Get(ctx workflow.Context) (*guardduty.DeleteDetectorOutput, error) {
	var output guardduty.DeleteDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeleteFilterFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeleteFilterFuture) Get(ctx workflow.Context) (*guardduty.DeleteFilterOutput, error) {
	var output guardduty.DeleteFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeleteIPSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeleteIPSetFuture) Get(ctx workflow.Context) (*guardduty.DeleteIPSetOutput, error) {
	var output guardduty.DeleteIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeleteInvitationsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeleteInvitationsFuture) Get(ctx workflow.Context) (*guardduty.DeleteInvitationsOutput, error) {
	var output guardduty.DeleteInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeleteMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeleteMembersFuture) Get(ctx workflow.Context) (*guardduty.DeleteMembersOutput, error) {
	var output guardduty.DeleteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeletePublishingDestinationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeletePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.DeletePublishingDestinationOutput, error) {
	var output guardduty.DeletePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDeleteThreatIntelSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDeleteThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.DeleteThreatIntelSetOutput, error) {
	var output guardduty.DeleteThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDescribeOrganizationConfigurationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDescribeOrganizationConfigurationFuture) Get(ctx workflow.Context) (*guardduty.DescribeOrganizationConfigurationOutput, error) {
	var output guardduty.DescribeOrganizationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDescribePublishingDestinationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDescribePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.DescribePublishingDestinationOutput, error) {
	var output guardduty.DescribePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDisableOrganizationAdminAccountFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDisableOrganizationAdminAccountFuture) Get(ctx workflow.Context) (*guardduty.DisableOrganizationAdminAccountOutput, error) {
	var output guardduty.DisableOrganizationAdminAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDisassociateFromMasterAccountFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDisassociateFromMasterAccountFuture) Get(ctx workflow.Context) (*guardduty.DisassociateFromMasterAccountOutput, error) {
	var output guardduty.DisassociateFromMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyDisassociateMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyDisassociateMembersFuture) Get(ctx workflow.Context) (*guardduty.DisassociateMembersOutput, error) {
	var output guardduty.DisassociateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyEnableOrganizationAdminAccountFuture struct {
	Future workflow.Future
}

func (r *GuarddutyEnableOrganizationAdminAccountFuture) Get(ctx workflow.Context) (*guardduty.EnableOrganizationAdminAccountOutput, error) {
	var output guardduty.EnableOrganizationAdminAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetDetectorFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetDetectorFuture) Get(ctx workflow.Context) (*guardduty.GetDetectorOutput, error) {
	var output guardduty.GetDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetFilterFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetFilterFuture) Get(ctx workflow.Context) (*guardduty.GetFilterOutput, error) {
	var output guardduty.GetFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetFindingsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetFindingsFuture) Get(ctx workflow.Context) (*guardduty.GetFindingsOutput, error) {
	var output guardduty.GetFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetFindingsStatisticsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetFindingsStatisticsFuture) Get(ctx workflow.Context) (*guardduty.GetFindingsStatisticsOutput, error) {
	var output guardduty.GetFindingsStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetIPSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetIPSetFuture) Get(ctx workflow.Context) (*guardduty.GetIPSetOutput, error) {
	var output guardduty.GetIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetInvitationsCountFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetInvitationsCountFuture) Get(ctx workflow.Context) (*guardduty.GetInvitationsCountOutput, error) {
	var output guardduty.GetInvitationsCountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetMasterAccountFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetMasterAccountFuture) Get(ctx workflow.Context) (*guardduty.GetMasterAccountOutput, error) {
	var output guardduty.GetMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetMemberDetectorsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetMemberDetectorsFuture) Get(ctx workflow.Context) (*guardduty.GetMemberDetectorsOutput, error) {
	var output guardduty.GetMemberDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetMembersFuture) Get(ctx workflow.Context) (*guardduty.GetMembersOutput, error) {
	var output guardduty.GetMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetThreatIntelSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.GetThreatIntelSetOutput, error) {
	var output guardduty.GetThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyGetUsageStatisticsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyGetUsageStatisticsFuture) Get(ctx workflow.Context) (*guardduty.GetUsageStatisticsOutput, error) {
	var output guardduty.GetUsageStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyInviteMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyInviteMembersFuture) Get(ctx workflow.Context) (*guardduty.InviteMembersOutput, error) {
	var output guardduty.InviteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListDetectorsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListDetectorsFuture) Get(ctx workflow.Context) (*guardduty.ListDetectorsOutput, error) {
	var output guardduty.ListDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListFiltersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListFiltersFuture) Get(ctx workflow.Context) (*guardduty.ListFiltersOutput, error) {
	var output guardduty.ListFiltersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListFindingsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListFindingsFuture) Get(ctx workflow.Context) (*guardduty.ListFindingsOutput, error) {
	var output guardduty.ListFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListIPSetsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListIPSetsFuture) Get(ctx workflow.Context) (*guardduty.ListIPSetsOutput, error) {
	var output guardduty.ListIPSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListInvitationsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListInvitationsFuture) Get(ctx workflow.Context) (*guardduty.ListInvitationsOutput, error) {
	var output guardduty.ListInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListMembersFuture) Get(ctx workflow.Context) (*guardduty.ListMembersOutput, error) {
	var output guardduty.ListMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListOrganizationAdminAccountsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListOrganizationAdminAccountsFuture) Get(ctx workflow.Context) (*guardduty.ListOrganizationAdminAccountsOutput, error) {
	var output guardduty.ListOrganizationAdminAccountsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListPublishingDestinationsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListPublishingDestinationsFuture) Get(ctx workflow.Context) (*guardduty.ListPublishingDestinationsOutput, error) {
	var output guardduty.ListPublishingDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListTagsForResourceFuture) Get(ctx workflow.Context) (*guardduty.ListTagsForResourceOutput, error) {
	var output guardduty.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyListThreatIntelSetsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyListThreatIntelSetsFuture) Get(ctx workflow.Context) (*guardduty.ListThreatIntelSetsOutput, error) {
	var output guardduty.ListThreatIntelSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyStartMonitoringMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyStartMonitoringMembersFuture) Get(ctx workflow.Context) (*guardduty.StartMonitoringMembersOutput, error) {
	var output guardduty.StartMonitoringMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyStopMonitoringMembersFuture struct {
	Future workflow.Future
}

func (r *GuarddutyStopMonitoringMembersFuture) Get(ctx workflow.Context) (*guardduty.StopMonitoringMembersOutput, error) {
	var output guardduty.StopMonitoringMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyTagResourceFuture struct {
	Future workflow.Future
}

func (r *GuarddutyTagResourceFuture) Get(ctx workflow.Context) (*guardduty.TagResourceOutput, error) {
	var output guardduty.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUnarchiveFindingsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUnarchiveFindingsFuture) Get(ctx workflow.Context) (*guardduty.UnarchiveFindingsOutput, error) {
	var output guardduty.UnarchiveFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUntagResourceFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUntagResourceFuture) Get(ctx workflow.Context) (*guardduty.UntagResourceOutput, error) {
	var output guardduty.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateDetectorFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateDetectorFuture) Get(ctx workflow.Context) (*guardduty.UpdateDetectorOutput, error) {
	var output guardduty.UpdateDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateFilterFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateFilterFuture) Get(ctx workflow.Context) (*guardduty.UpdateFilterOutput, error) {
	var output guardduty.UpdateFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateFindingsFeedbackFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateFindingsFeedbackFuture) Get(ctx workflow.Context) (*guardduty.UpdateFindingsFeedbackOutput, error) {
	var output guardduty.UpdateFindingsFeedbackOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateIPSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateIPSetFuture) Get(ctx workflow.Context) (*guardduty.UpdateIPSetOutput, error) {
	var output guardduty.UpdateIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateMemberDetectorsFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateMemberDetectorsFuture) Get(ctx workflow.Context) (*guardduty.UpdateMemberDetectorsOutput, error) {
	var output guardduty.UpdateMemberDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateOrganizationConfigurationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateOrganizationConfigurationFuture) Get(ctx workflow.Context) (*guardduty.UpdateOrganizationConfigurationOutput, error) {
	var output guardduty.UpdateOrganizationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdatePublishingDestinationFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdatePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.UpdatePublishingDestinationOutput, error) {
	var output guardduty.UpdatePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuarddutyUpdateThreatIntelSetFuture struct {
	Future workflow.Future
}

func (r *GuarddutyUpdateThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.UpdateThreatIntelSetOutput, error) {
	var output guardduty.UpdateThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) AcceptInvitation(ctx workflow.Context, input *guardduty.AcceptInvitationInput) (*guardduty.AcceptInvitationOutput, error) {
	var output guardduty.AcceptInvitationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.AcceptInvitation", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) AcceptInvitationAsync(ctx workflow.Context, input *guardduty.AcceptInvitationInput) *GuarddutyAcceptInvitationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.AcceptInvitation", input)
	return &GuarddutyAcceptInvitationFuture{Future: future}
}

func (a *GuardDutyStub) ArchiveFindings(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) (*guardduty.ArchiveFindingsOutput, error) {
	var output guardduty.ArchiveFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ArchiveFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ArchiveFindingsAsync(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) *GuarddutyArchiveFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ArchiveFindings", input)
	return &GuarddutyArchiveFindingsFuture{Future: future}
}

func (a *GuardDutyStub) CreateDetector(ctx workflow.Context, input *guardduty.CreateDetectorInput) (*guardduty.CreateDetectorOutput, error) {
	var output guardduty.CreateDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateDetectorAsync(ctx workflow.Context, input *guardduty.CreateDetectorInput) *GuarddutyCreateDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateDetector", input)
	return &GuarddutyCreateDetectorFuture{Future: future}
}

func (a *GuardDutyStub) CreateFilter(ctx workflow.Context, input *guardduty.CreateFilterInput) (*guardduty.CreateFilterOutput, error) {
	var output guardduty.CreateFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateFilterAsync(ctx workflow.Context, input *guardduty.CreateFilterInput) *GuarddutyCreateFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateFilter", input)
	return &GuarddutyCreateFilterFuture{Future: future}
}

func (a *GuardDutyStub) CreateIPSet(ctx workflow.Context, input *guardduty.CreateIPSetInput) (*guardduty.CreateIPSetOutput, error) {
	var output guardduty.CreateIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateIPSetAsync(ctx workflow.Context, input *guardduty.CreateIPSetInput) *GuarddutyCreateIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateIPSet", input)
	return &GuarddutyCreateIPSetFuture{Future: future}
}

func (a *GuardDutyStub) CreateMembers(ctx workflow.Context, input *guardduty.CreateMembersInput) (*guardduty.CreateMembersOutput, error) {
	var output guardduty.CreateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateMembersAsync(ctx workflow.Context, input *guardduty.CreateMembersInput) *GuarddutyCreateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateMembers", input)
	return &GuarddutyCreateMembersFuture{Future: future}
}

func (a *GuardDutyStub) CreatePublishingDestination(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) (*guardduty.CreatePublishingDestinationOutput, error) {
	var output guardduty.CreatePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreatePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) *GuarddutyCreatePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreatePublishingDestination", input)
	return &GuarddutyCreatePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) CreateSampleFindings(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) (*guardduty.CreateSampleFindingsOutput, error) {
	var output guardduty.CreateSampleFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateSampleFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateSampleFindingsAsync(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) *GuarddutyCreateSampleFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateSampleFindings", input)
	return &GuarddutyCreateSampleFindingsFuture{Future: future}
}

func (a *GuardDutyStub) CreateThreatIntelSet(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) (*guardduty.CreateThreatIntelSetOutput, error) {
	var output guardduty.CreateThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) *GuarddutyCreateThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateThreatIntelSet", input)
	return &GuarddutyCreateThreatIntelSetFuture{Future: future}
}

func (a *GuardDutyStub) DeclineInvitations(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) (*guardduty.DeclineInvitationsOutput, error) {
	var output guardduty.DeclineInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeclineInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeclineInvitationsAsync(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) *GuarddutyDeclineInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeclineInvitations", input)
	return &GuarddutyDeclineInvitationsFuture{Future: future}
}

func (a *GuardDutyStub) DeleteDetector(ctx workflow.Context, input *guardduty.DeleteDetectorInput) (*guardduty.DeleteDetectorOutput, error) {
	var output guardduty.DeleteDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteDetectorAsync(ctx workflow.Context, input *guardduty.DeleteDetectorInput) *GuarddutyDeleteDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteDetector", input)
	return &GuarddutyDeleteDetectorFuture{Future: future}
}

func (a *GuardDutyStub) DeleteFilter(ctx workflow.Context, input *guardduty.DeleteFilterInput) (*guardduty.DeleteFilterOutput, error) {
	var output guardduty.DeleteFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteFilterAsync(ctx workflow.Context, input *guardduty.DeleteFilterInput) *GuarddutyDeleteFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteFilter", input)
	return &GuarddutyDeleteFilterFuture{Future: future}
}

func (a *GuardDutyStub) DeleteIPSet(ctx workflow.Context, input *guardduty.DeleteIPSetInput) (*guardduty.DeleteIPSetOutput, error) {
	var output guardduty.DeleteIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteIPSetAsync(ctx workflow.Context, input *guardduty.DeleteIPSetInput) *GuarddutyDeleteIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteIPSet", input)
	return &GuarddutyDeleteIPSetFuture{Future: future}
}

func (a *GuardDutyStub) DeleteInvitations(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) (*guardduty.DeleteInvitationsOutput, error) {
	var output guardduty.DeleteInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteInvitationsAsync(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) *GuarddutyDeleteInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteInvitations", input)
	return &GuarddutyDeleteInvitationsFuture{Future: future}
}

func (a *GuardDutyStub) DeleteMembers(ctx workflow.Context, input *guardduty.DeleteMembersInput) (*guardduty.DeleteMembersOutput, error) {
	var output guardduty.DeleteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteMembersAsync(ctx workflow.Context, input *guardduty.DeleteMembersInput) *GuarddutyDeleteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteMembers", input)
	return &GuarddutyDeleteMembersFuture{Future: future}
}

func (a *GuardDutyStub) DeletePublishingDestination(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) (*guardduty.DeletePublishingDestinationOutput, error) {
	var output guardduty.DeletePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeletePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeletePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) *GuarddutyDeletePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeletePublishingDestination", input)
	return &GuarddutyDeletePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) DeleteThreatIntelSet(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) (*guardduty.DeleteThreatIntelSetOutput, error) {
	var output guardduty.DeleteThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteThreatIntelSetAsync(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) *GuarddutyDeleteThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteThreatIntelSet", input)
	return &GuarddutyDeleteThreatIntelSetFuture{Future: future}
}

func (a *GuardDutyStub) DescribeOrganizationConfiguration(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) (*guardduty.DescribeOrganizationConfigurationOutput, error) {
	var output guardduty.DescribeOrganizationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribeOrganizationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DescribeOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) *GuarddutyDescribeOrganizationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribeOrganizationConfiguration", input)
	return &GuarddutyDescribeOrganizationConfigurationFuture{Future: future}
}

func (a *GuardDutyStub) DescribePublishingDestination(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) (*guardduty.DescribePublishingDestinationOutput, error) {
	var output guardduty.DescribePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DescribePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) *GuarddutyDescribePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribePublishingDestination", input)
	return &GuarddutyDescribePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) DisableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) (*guardduty.DisableOrganizationAdminAccountOutput, error) {
	var output guardduty.DisableOrganizationAdminAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DisableOrganizationAdminAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DisableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) *GuarddutyDisableOrganizationAdminAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DisableOrganizationAdminAccount", input)
	return &GuarddutyDisableOrganizationAdminAccountFuture{Future: future}
}

func (a *GuardDutyStub) DisassociateFromMasterAccount(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) (*guardduty.DisassociateFromMasterAccountOutput, error) {
	var output guardduty.DisassociateFromMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateFromMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DisassociateFromMasterAccountAsync(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) *GuarddutyDisassociateFromMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateFromMasterAccount", input)
	return &GuarddutyDisassociateFromMasterAccountFuture{Future: future}
}

func (a *GuardDutyStub) DisassociateMembers(ctx workflow.Context, input *guardduty.DisassociateMembersInput) (*guardduty.DisassociateMembersOutput, error) {
	var output guardduty.DisassociateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DisassociateMembersAsync(ctx workflow.Context, input *guardduty.DisassociateMembersInput) *GuarddutyDisassociateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateMembers", input)
	return &GuarddutyDisassociateMembersFuture{Future: future}
}

func (a *GuardDutyStub) EnableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) (*guardduty.EnableOrganizationAdminAccountOutput, error) {
	var output guardduty.EnableOrganizationAdminAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.EnableOrganizationAdminAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) EnableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) *GuarddutyEnableOrganizationAdminAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.EnableOrganizationAdminAccount", input)
	return &GuarddutyEnableOrganizationAdminAccountFuture{Future: future}
}

func (a *GuardDutyStub) GetDetector(ctx workflow.Context, input *guardduty.GetDetectorInput) (*guardduty.GetDetectorOutput, error) {
	var output guardduty.GetDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetDetectorAsync(ctx workflow.Context, input *guardduty.GetDetectorInput) *GuarddutyGetDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetDetector", input)
	return &GuarddutyGetDetectorFuture{Future: future}
}

func (a *GuardDutyStub) GetFilter(ctx workflow.Context, input *guardduty.GetFilterInput) (*guardduty.GetFilterOutput, error) {
	var output guardduty.GetFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetFilterAsync(ctx workflow.Context, input *guardduty.GetFilterInput) *GuarddutyGetFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFilter", input)
	return &GuarddutyGetFilterFuture{Future: future}
}

func (a *GuardDutyStub) GetFindings(ctx workflow.Context, input *guardduty.GetFindingsInput) (*guardduty.GetFindingsOutput, error) {
	var output guardduty.GetFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetFindingsAsync(ctx workflow.Context, input *guardduty.GetFindingsInput) *GuarddutyGetFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindings", input)
	return &GuarddutyGetFindingsFuture{Future: future}
}

func (a *GuardDutyStub) GetFindingsStatistics(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) (*guardduty.GetFindingsStatisticsOutput, error) {
	var output guardduty.GetFindingsStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindingsStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetFindingsStatisticsAsync(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) *GuarddutyGetFindingsStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindingsStatistics", input)
	return &GuarddutyGetFindingsStatisticsFuture{Future: future}
}

func (a *GuardDutyStub) GetIPSet(ctx workflow.Context, input *guardduty.GetIPSetInput) (*guardduty.GetIPSetOutput, error) {
	var output guardduty.GetIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetIPSetAsync(ctx workflow.Context, input *guardduty.GetIPSetInput) *GuarddutyGetIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetIPSet", input)
	return &GuarddutyGetIPSetFuture{Future: future}
}

func (a *GuardDutyStub) GetInvitationsCount(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) (*guardduty.GetInvitationsCountOutput, error) {
	var output guardduty.GetInvitationsCountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetInvitationsCount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetInvitationsCountAsync(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) *GuarddutyGetInvitationsCountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetInvitationsCount", input)
	return &GuarddutyGetInvitationsCountFuture{Future: future}
}

func (a *GuardDutyStub) GetMasterAccount(ctx workflow.Context, input *guardduty.GetMasterAccountInput) (*guardduty.GetMasterAccountOutput, error) {
	var output guardduty.GetMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetMasterAccountAsync(ctx workflow.Context, input *guardduty.GetMasterAccountInput) *GuarddutyGetMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMasterAccount", input)
	return &GuarddutyGetMasterAccountFuture{Future: future}
}

func (a *GuardDutyStub) GetMemberDetectors(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) (*guardduty.GetMemberDetectorsOutput, error) {
	var output guardduty.GetMemberDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMemberDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetMemberDetectorsAsync(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) *GuarddutyGetMemberDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMemberDetectors", input)
	return &GuarddutyGetMemberDetectorsFuture{Future: future}
}

func (a *GuardDutyStub) GetMembers(ctx workflow.Context, input *guardduty.GetMembersInput) (*guardduty.GetMembersOutput, error) {
	var output guardduty.GetMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetMembersAsync(ctx workflow.Context, input *guardduty.GetMembersInput) *GuarddutyGetMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMembers", input)
	return &GuarddutyGetMembersFuture{Future: future}
}

func (a *GuardDutyStub) GetThreatIntelSet(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) (*guardduty.GetThreatIntelSetOutput, error) {
	var output guardduty.GetThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetThreatIntelSetAsync(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) *GuarddutyGetThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetThreatIntelSet", input)
	return &GuarddutyGetThreatIntelSetFuture{Future: future}
}

func (a *GuardDutyStub) GetUsageStatistics(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) (*guardduty.GetUsageStatisticsOutput, error) {
	var output guardduty.GetUsageStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetUsageStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetUsageStatisticsAsync(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) *GuarddutyGetUsageStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetUsageStatistics", input)
	return &GuarddutyGetUsageStatisticsFuture{Future: future}
}

func (a *GuardDutyStub) InviteMembers(ctx workflow.Context, input *guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error) {
	var output guardduty.InviteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.InviteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) InviteMembersAsync(ctx workflow.Context, input *guardduty.InviteMembersInput) *GuarddutyInviteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.InviteMembers", input)
	return &GuarddutyInviteMembersFuture{Future: future}
}

func (a *GuardDutyStub) ListDetectors(ctx workflow.Context, input *guardduty.ListDetectorsInput) (*guardduty.ListDetectorsOutput, error) {
	var output guardduty.ListDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListDetectorsAsync(ctx workflow.Context, input *guardduty.ListDetectorsInput) *GuarddutyListDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListDetectors", input)
	return &GuarddutyListDetectorsFuture{Future: future}
}

func (a *GuardDutyStub) ListFilters(ctx workflow.Context, input *guardduty.ListFiltersInput) (*guardduty.ListFiltersOutput, error) {
	var output guardduty.ListFiltersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFilters", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListFiltersAsync(ctx workflow.Context, input *guardduty.ListFiltersInput) *GuarddutyListFiltersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFilters", input)
	return &GuarddutyListFiltersFuture{Future: future}
}

func (a *GuardDutyStub) ListFindings(ctx workflow.Context, input *guardduty.ListFindingsInput) (*guardduty.ListFindingsOutput, error) {
	var output guardduty.ListFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListFindingsAsync(ctx workflow.Context, input *guardduty.ListFindingsInput) *GuarddutyListFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFindings", input)
	return &GuarddutyListFindingsFuture{Future: future}
}

func (a *GuardDutyStub) ListIPSets(ctx workflow.Context, input *guardduty.ListIPSetsInput) (*guardduty.ListIPSetsOutput, error) {
	var output guardduty.ListIPSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListIPSets", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListIPSetsAsync(ctx workflow.Context, input *guardduty.ListIPSetsInput) *GuarddutyListIPSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListIPSets", input)
	return &GuarddutyListIPSetsFuture{Future: future}
}

func (a *GuardDutyStub) ListInvitations(ctx workflow.Context, input *guardduty.ListInvitationsInput) (*guardduty.ListInvitationsOutput, error) {
	var output guardduty.ListInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListInvitationsAsync(ctx workflow.Context, input *guardduty.ListInvitationsInput) *GuarddutyListInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListInvitations", input)
	return &GuarddutyListInvitationsFuture{Future: future}
}

func (a *GuardDutyStub) ListMembers(ctx workflow.Context, input *guardduty.ListMembersInput) (*guardduty.ListMembersOutput, error) {
	var output guardduty.ListMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListMembersAsync(ctx workflow.Context, input *guardduty.ListMembersInput) *GuarddutyListMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListMembers", input)
	return &GuarddutyListMembersFuture{Future: future}
}

func (a *GuardDutyStub) ListOrganizationAdminAccounts(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) (*guardduty.ListOrganizationAdminAccountsOutput, error) {
	var output guardduty.ListOrganizationAdminAccountsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListOrganizationAdminAccounts", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListOrganizationAdminAccountsAsync(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) *GuarddutyListOrganizationAdminAccountsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListOrganizationAdminAccounts", input)
	return &GuarddutyListOrganizationAdminAccountsFuture{Future: future}
}

func (a *GuardDutyStub) ListPublishingDestinations(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) (*guardduty.ListPublishingDestinationsOutput, error) {
	var output guardduty.ListPublishingDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListPublishingDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListPublishingDestinationsAsync(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) *GuarddutyListPublishingDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListPublishingDestinations", input)
	return &GuarddutyListPublishingDestinationsFuture{Future: future}
}

func (a *GuardDutyStub) ListTagsForResource(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) (*guardduty.ListTagsForResourceOutput, error) {
	var output guardduty.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListTagsForResourceAsync(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) *GuarddutyListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListTagsForResource", input)
	return &GuarddutyListTagsForResourceFuture{Future: future}
}

func (a *GuardDutyStub) ListThreatIntelSets(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) (*guardduty.ListThreatIntelSetsOutput, error) {
	var output guardduty.ListThreatIntelSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListThreatIntelSets", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListThreatIntelSetsAsync(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) *GuarddutyListThreatIntelSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListThreatIntelSets", input)
	return &GuarddutyListThreatIntelSetsFuture{Future: future}
}

func (a *GuardDutyStub) StartMonitoringMembers(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) (*guardduty.StartMonitoringMembersOutput, error) {
	var output guardduty.StartMonitoringMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.StartMonitoringMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) StartMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) *GuarddutyStartMonitoringMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.StartMonitoringMembers", input)
	return &GuarddutyStartMonitoringMembersFuture{Future: future}
}

func (a *GuardDutyStub) StopMonitoringMembers(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) (*guardduty.StopMonitoringMembersOutput, error) {
	var output guardduty.StopMonitoringMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.StopMonitoringMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) StopMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) *GuarddutyStopMonitoringMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.StopMonitoringMembers", input)
	return &GuarddutyStopMonitoringMembersFuture{Future: future}
}

func (a *GuardDutyStub) TagResource(ctx workflow.Context, input *guardduty.TagResourceInput) (*guardduty.TagResourceOutput, error) {
	var output guardduty.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) TagResourceAsync(ctx workflow.Context, input *guardduty.TagResourceInput) *GuarddutyTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.TagResource", input)
	return &GuarddutyTagResourceFuture{Future: future}
}

func (a *GuardDutyStub) UnarchiveFindings(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) (*guardduty.UnarchiveFindingsOutput, error) {
	var output guardduty.UnarchiveFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UnarchiveFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UnarchiveFindingsAsync(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) *GuarddutyUnarchiveFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UnarchiveFindings", input)
	return &GuarddutyUnarchiveFindingsFuture{Future: future}
}

func (a *GuardDutyStub) UntagResource(ctx workflow.Context, input *guardduty.UntagResourceInput) (*guardduty.UntagResourceOutput, error) {
	var output guardduty.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UntagResourceAsync(ctx workflow.Context, input *guardduty.UntagResourceInput) *GuarddutyUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UntagResource", input)
	return &GuarddutyUntagResourceFuture{Future: future}
}

func (a *GuardDutyStub) UpdateDetector(ctx workflow.Context, input *guardduty.UpdateDetectorInput) (*guardduty.UpdateDetectorOutput, error) {
	var output guardduty.UpdateDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateDetectorAsync(ctx workflow.Context, input *guardduty.UpdateDetectorInput) *GuarddutyUpdateDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateDetector", input)
	return &GuarddutyUpdateDetectorFuture{Future: future}
}

func (a *GuardDutyStub) UpdateFilter(ctx workflow.Context, input *guardduty.UpdateFilterInput) (*guardduty.UpdateFilterOutput, error) {
	var output guardduty.UpdateFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateFilterAsync(ctx workflow.Context, input *guardduty.UpdateFilterInput) *GuarddutyUpdateFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFilter", input)
	return &GuarddutyUpdateFilterFuture{Future: future}
}

func (a *GuardDutyStub) UpdateFindingsFeedback(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) (*guardduty.UpdateFindingsFeedbackOutput, error) {
	var output guardduty.UpdateFindingsFeedbackOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFindingsFeedback", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateFindingsFeedbackAsync(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) *GuarddutyUpdateFindingsFeedbackFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFindingsFeedback", input)
	return &GuarddutyUpdateFindingsFeedbackFuture{Future: future}
}

func (a *GuardDutyStub) UpdateIPSet(ctx workflow.Context, input *guardduty.UpdateIPSetInput) (*guardduty.UpdateIPSetOutput, error) {
	var output guardduty.UpdateIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateIPSetAsync(ctx workflow.Context, input *guardduty.UpdateIPSetInput) *GuarddutyUpdateIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateIPSet", input)
	return &GuarddutyUpdateIPSetFuture{Future: future}
}

func (a *GuardDutyStub) UpdateMemberDetectors(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) (*guardduty.UpdateMemberDetectorsOutput, error) {
	var output guardduty.UpdateMemberDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateMemberDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateMemberDetectorsAsync(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) *GuarddutyUpdateMemberDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateMemberDetectors", input)
	return &GuarddutyUpdateMemberDetectorsFuture{Future: future}
}

func (a *GuardDutyStub) UpdateOrganizationConfiguration(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) (*guardduty.UpdateOrganizationConfigurationOutput, error) {
	var output guardduty.UpdateOrganizationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateOrganizationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) *GuarddutyUpdateOrganizationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateOrganizationConfiguration", input)
	return &GuarddutyUpdateOrganizationConfigurationFuture{Future: future}
}

func (a *GuardDutyStub) UpdatePublishingDestination(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) (*guardduty.UpdatePublishingDestinationOutput, error) {
	var output guardduty.UpdatePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdatePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) *GuarddutyUpdatePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdatePublishingDestination", input)
	return &GuarddutyUpdatePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) UpdateThreatIntelSet(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) (*guardduty.UpdateThreatIntelSetOutput, error) {
	var output guardduty.UpdateThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) *GuarddutyUpdateThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateThreatIntelSet", input)
	return &GuarddutyUpdateThreatIntelSetFuture{Future: future}
}
