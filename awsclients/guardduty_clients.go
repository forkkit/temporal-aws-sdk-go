// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/guardduty"
	"go.temporal.io/sdk/workflow"
)

type GuardDutyClient interface {
	AcceptInvitation(ctx workflow.Context, input *guardduty.AcceptInvitationInput) (*guardduty.AcceptInvitationOutput, error)
	AcceptInvitationAsync(ctx workflow.Context, input *guardduty.AcceptInvitationInput) *GuardDutyAcceptInvitationFuture

	ArchiveFindings(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) (*guardduty.ArchiveFindingsOutput, error)
	ArchiveFindingsAsync(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) *GuardDutyArchiveFindingsFuture

	CreateDetector(ctx workflow.Context, input *guardduty.CreateDetectorInput) (*guardduty.CreateDetectorOutput, error)
	CreateDetectorAsync(ctx workflow.Context, input *guardduty.CreateDetectorInput) *GuardDutyCreateDetectorFuture

	CreateFilter(ctx workflow.Context, input *guardduty.CreateFilterInput) (*guardduty.CreateFilterOutput, error)
	CreateFilterAsync(ctx workflow.Context, input *guardduty.CreateFilterInput) *GuardDutyCreateFilterFuture

	CreateIPSet(ctx workflow.Context, input *guardduty.CreateIPSetInput) (*guardduty.CreateIPSetOutput, error)
	CreateIPSetAsync(ctx workflow.Context, input *guardduty.CreateIPSetInput) *GuardDutyCreateIPSetFuture

	CreateMembers(ctx workflow.Context, input *guardduty.CreateMembersInput) (*guardduty.CreateMembersOutput, error)
	CreateMembersAsync(ctx workflow.Context, input *guardduty.CreateMembersInput) *GuardDutyCreateMembersFuture

	CreatePublishingDestination(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) (*guardduty.CreatePublishingDestinationOutput, error)
	CreatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) *GuardDutyCreatePublishingDestinationFuture

	CreateSampleFindings(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) (*guardduty.CreateSampleFindingsOutput, error)
	CreateSampleFindingsAsync(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) *GuardDutyCreateSampleFindingsFuture

	CreateThreatIntelSet(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) (*guardduty.CreateThreatIntelSetOutput, error)
	CreateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) *GuardDutyCreateThreatIntelSetFuture

	DeclineInvitations(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) (*guardduty.DeclineInvitationsOutput, error)
	DeclineInvitationsAsync(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) *GuardDutyDeclineInvitationsFuture

	DeleteDetector(ctx workflow.Context, input *guardduty.DeleteDetectorInput) (*guardduty.DeleteDetectorOutput, error)
	DeleteDetectorAsync(ctx workflow.Context, input *guardduty.DeleteDetectorInput) *GuardDutyDeleteDetectorFuture

	DeleteFilter(ctx workflow.Context, input *guardduty.DeleteFilterInput) (*guardduty.DeleteFilterOutput, error)
	DeleteFilterAsync(ctx workflow.Context, input *guardduty.DeleteFilterInput) *GuardDutyDeleteFilterFuture

	DeleteIPSet(ctx workflow.Context, input *guardduty.DeleteIPSetInput) (*guardduty.DeleteIPSetOutput, error)
	DeleteIPSetAsync(ctx workflow.Context, input *guardduty.DeleteIPSetInput) *GuardDutyDeleteIPSetFuture

	DeleteInvitations(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) (*guardduty.DeleteInvitationsOutput, error)
	DeleteInvitationsAsync(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) *GuardDutyDeleteInvitationsFuture

	DeleteMembers(ctx workflow.Context, input *guardduty.DeleteMembersInput) (*guardduty.DeleteMembersOutput, error)
	DeleteMembersAsync(ctx workflow.Context, input *guardduty.DeleteMembersInput) *GuardDutyDeleteMembersFuture

	DeletePublishingDestination(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) (*guardduty.DeletePublishingDestinationOutput, error)
	DeletePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) *GuardDutyDeletePublishingDestinationFuture

	DeleteThreatIntelSet(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) (*guardduty.DeleteThreatIntelSetOutput, error)
	DeleteThreatIntelSetAsync(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) *GuardDutyDeleteThreatIntelSetFuture

	DescribeOrganizationConfiguration(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) (*guardduty.DescribeOrganizationConfigurationOutput, error)
	DescribeOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) *GuardDutyDescribeOrganizationConfigurationFuture

	DescribePublishingDestination(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) (*guardduty.DescribePublishingDestinationOutput, error)
	DescribePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) *GuardDutyDescribePublishingDestinationFuture

	DisableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) (*guardduty.DisableOrganizationAdminAccountOutput, error)
	DisableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) *GuardDutyDisableOrganizationAdminAccountFuture

	DisassociateFromMasterAccount(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) (*guardduty.DisassociateFromMasterAccountOutput, error)
	DisassociateFromMasterAccountAsync(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) *GuardDutyDisassociateFromMasterAccountFuture

	DisassociateMembers(ctx workflow.Context, input *guardduty.DisassociateMembersInput) (*guardduty.DisassociateMembersOutput, error)
	DisassociateMembersAsync(ctx workflow.Context, input *guardduty.DisassociateMembersInput) *GuardDutyDisassociateMembersFuture

	EnableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) (*guardduty.EnableOrganizationAdminAccountOutput, error)
	EnableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) *GuardDutyEnableOrganizationAdminAccountFuture

	GetDetector(ctx workflow.Context, input *guardduty.GetDetectorInput) (*guardduty.GetDetectorOutput, error)
	GetDetectorAsync(ctx workflow.Context, input *guardduty.GetDetectorInput) *GuardDutyGetDetectorFuture

	GetFilter(ctx workflow.Context, input *guardduty.GetFilterInput) (*guardduty.GetFilterOutput, error)
	GetFilterAsync(ctx workflow.Context, input *guardduty.GetFilterInput) *GuardDutyGetFilterFuture

	GetFindings(ctx workflow.Context, input *guardduty.GetFindingsInput) (*guardduty.GetFindingsOutput, error)
	GetFindingsAsync(ctx workflow.Context, input *guardduty.GetFindingsInput) *GuardDutyGetFindingsFuture

	GetFindingsStatistics(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) (*guardduty.GetFindingsStatisticsOutput, error)
	GetFindingsStatisticsAsync(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) *GuardDutyGetFindingsStatisticsFuture

	GetIPSet(ctx workflow.Context, input *guardduty.GetIPSetInput) (*guardduty.GetIPSetOutput, error)
	GetIPSetAsync(ctx workflow.Context, input *guardduty.GetIPSetInput) *GuardDutyGetIPSetFuture

	GetInvitationsCount(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) (*guardduty.GetInvitationsCountOutput, error)
	GetInvitationsCountAsync(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) *GuardDutyGetInvitationsCountFuture

	GetMasterAccount(ctx workflow.Context, input *guardduty.GetMasterAccountInput) (*guardduty.GetMasterAccountOutput, error)
	GetMasterAccountAsync(ctx workflow.Context, input *guardduty.GetMasterAccountInput) *GuardDutyGetMasterAccountFuture

	GetMemberDetectors(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) (*guardduty.GetMemberDetectorsOutput, error)
	GetMemberDetectorsAsync(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) *GuardDutyGetMemberDetectorsFuture

	GetMembers(ctx workflow.Context, input *guardduty.GetMembersInput) (*guardduty.GetMembersOutput, error)
	GetMembersAsync(ctx workflow.Context, input *guardduty.GetMembersInput) *GuardDutyGetMembersFuture

	GetThreatIntelSet(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) (*guardduty.GetThreatIntelSetOutput, error)
	GetThreatIntelSetAsync(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) *GuardDutyGetThreatIntelSetFuture

	GetUsageStatistics(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) (*guardduty.GetUsageStatisticsOutput, error)
	GetUsageStatisticsAsync(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) *GuardDutyGetUsageStatisticsFuture

	InviteMembers(ctx workflow.Context, input *guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error)
	InviteMembersAsync(ctx workflow.Context, input *guardduty.InviteMembersInput) *GuardDutyInviteMembersFuture

	ListDetectors(ctx workflow.Context, input *guardduty.ListDetectorsInput) (*guardduty.ListDetectorsOutput, error)
	ListDetectorsAsync(ctx workflow.Context, input *guardduty.ListDetectorsInput) *GuardDutyListDetectorsFuture

	ListFilters(ctx workflow.Context, input *guardduty.ListFiltersInput) (*guardduty.ListFiltersOutput, error)
	ListFiltersAsync(ctx workflow.Context, input *guardduty.ListFiltersInput) *GuardDutyListFiltersFuture

	ListFindings(ctx workflow.Context, input *guardduty.ListFindingsInput) (*guardduty.ListFindingsOutput, error)
	ListFindingsAsync(ctx workflow.Context, input *guardduty.ListFindingsInput) *GuardDutyListFindingsFuture

	ListIPSets(ctx workflow.Context, input *guardduty.ListIPSetsInput) (*guardduty.ListIPSetsOutput, error)
	ListIPSetsAsync(ctx workflow.Context, input *guardduty.ListIPSetsInput) *GuardDutyListIPSetsFuture

	ListInvitations(ctx workflow.Context, input *guardduty.ListInvitationsInput) (*guardduty.ListInvitationsOutput, error)
	ListInvitationsAsync(ctx workflow.Context, input *guardduty.ListInvitationsInput) *GuardDutyListInvitationsFuture

	ListMembers(ctx workflow.Context, input *guardduty.ListMembersInput) (*guardduty.ListMembersOutput, error)
	ListMembersAsync(ctx workflow.Context, input *guardduty.ListMembersInput) *GuardDutyListMembersFuture

	ListOrganizationAdminAccounts(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) (*guardduty.ListOrganizationAdminAccountsOutput, error)
	ListOrganizationAdminAccountsAsync(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) *GuardDutyListOrganizationAdminAccountsFuture

	ListPublishingDestinations(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) (*guardduty.ListPublishingDestinationsOutput, error)
	ListPublishingDestinationsAsync(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) *GuardDutyListPublishingDestinationsFuture

	ListTagsForResource(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) (*guardduty.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) *GuardDutyListTagsForResourceFuture

	ListThreatIntelSets(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) (*guardduty.ListThreatIntelSetsOutput, error)
	ListThreatIntelSetsAsync(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) *GuardDutyListThreatIntelSetsFuture

	StartMonitoringMembers(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) (*guardduty.StartMonitoringMembersOutput, error)
	StartMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) *GuardDutyStartMonitoringMembersFuture

	StopMonitoringMembers(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) (*guardduty.StopMonitoringMembersOutput, error)
	StopMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) *GuardDutyStopMonitoringMembersFuture

	TagResource(ctx workflow.Context, input *guardduty.TagResourceInput) (*guardduty.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *guardduty.TagResourceInput) *GuardDutyTagResourceFuture

	UnarchiveFindings(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) (*guardduty.UnarchiveFindingsOutput, error)
	UnarchiveFindingsAsync(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) *GuardDutyUnarchiveFindingsFuture

	UntagResource(ctx workflow.Context, input *guardduty.UntagResourceInput) (*guardduty.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *guardduty.UntagResourceInput) *GuardDutyUntagResourceFuture

	UpdateDetector(ctx workflow.Context, input *guardduty.UpdateDetectorInput) (*guardduty.UpdateDetectorOutput, error)
	UpdateDetectorAsync(ctx workflow.Context, input *guardduty.UpdateDetectorInput) *GuardDutyUpdateDetectorFuture

	UpdateFilter(ctx workflow.Context, input *guardduty.UpdateFilterInput) (*guardduty.UpdateFilterOutput, error)
	UpdateFilterAsync(ctx workflow.Context, input *guardduty.UpdateFilterInput) *GuardDutyUpdateFilterFuture

	UpdateFindingsFeedback(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) (*guardduty.UpdateFindingsFeedbackOutput, error)
	UpdateFindingsFeedbackAsync(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) *GuardDutyUpdateFindingsFeedbackFuture

	UpdateIPSet(ctx workflow.Context, input *guardduty.UpdateIPSetInput) (*guardduty.UpdateIPSetOutput, error)
	UpdateIPSetAsync(ctx workflow.Context, input *guardduty.UpdateIPSetInput) *GuardDutyUpdateIPSetFuture

	UpdateMemberDetectors(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) (*guardduty.UpdateMemberDetectorsOutput, error)
	UpdateMemberDetectorsAsync(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) *GuardDutyUpdateMemberDetectorsFuture

	UpdateOrganizationConfiguration(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) (*guardduty.UpdateOrganizationConfigurationOutput, error)
	UpdateOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) *GuardDutyUpdateOrganizationConfigurationFuture

	UpdatePublishingDestination(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) (*guardduty.UpdatePublishingDestinationOutput, error)
	UpdatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) *GuardDutyUpdatePublishingDestinationFuture

	UpdateThreatIntelSet(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) (*guardduty.UpdateThreatIntelSetOutput, error)
	UpdateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) *GuardDutyUpdateThreatIntelSetFuture
}

type GuardDutyStub struct{}

func NewGuardDutyStub() GuardDutyClient {
	return &GuardDutyStub{}
}

type GuardDutyAcceptInvitationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyAcceptInvitationFuture) Get(ctx workflow.Context) (*guardduty.AcceptInvitationOutput, error) {
	var output guardduty.AcceptInvitationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyArchiveFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyArchiveFindingsFuture) Get(ctx workflow.Context) (*guardduty.ArchiveFindingsOutput, error) {
	var output guardduty.ArchiveFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreateDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreateDetectorFuture) Get(ctx workflow.Context) (*guardduty.CreateDetectorOutput, error) {
	var output guardduty.CreateDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreateFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreateFilterFuture) Get(ctx workflow.Context) (*guardduty.CreateFilterOutput, error) {
	var output guardduty.CreateFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreateIPSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreateIPSetFuture) Get(ctx workflow.Context) (*guardduty.CreateIPSetOutput, error) {
	var output guardduty.CreateIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreateMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreateMembersFuture) Get(ctx workflow.Context) (*guardduty.CreateMembersOutput, error) {
	var output guardduty.CreateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreatePublishingDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreatePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.CreatePublishingDestinationOutput, error) {
	var output guardduty.CreatePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreateSampleFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreateSampleFindingsFuture) Get(ctx workflow.Context) (*guardduty.CreateSampleFindingsOutput, error) {
	var output guardduty.CreateSampleFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyCreateThreatIntelSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyCreateThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.CreateThreatIntelSetOutput, error) {
	var output guardduty.CreateThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeclineInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeclineInvitationsFuture) Get(ctx workflow.Context) (*guardduty.DeclineInvitationsOutput, error) {
	var output guardduty.DeclineInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeleteDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeleteDetectorFuture) Get(ctx workflow.Context) (*guardduty.DeleteDetectorOutput, error) {
	var output guardduty.DeleteDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeleteFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeleteFilterFuture) Get(ctx workflow.Context) (*guardduty.DeleteFilterOutput, error) {
	var output guardduty.DeleteFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeleteIPSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeleteIPSetFuture) Get(ctx workflow.Context) (*guardduty.DeleteIPSetOutput, error) {
	var output guardduty.DeleteIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeleteInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeleteInvitationsFuture) Get(ctx workflow.Context) (*guardduty.DeleteInvitationsOutput, error) {
	var output guardduty.DeleteInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeleteMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeleteMembersFuture) Get(ctx workflow.Context) (*guardduty.DeleteMembersOutput, error) {
	var output guardduty.DeleteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeletePublishingDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeletePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.DeletePublishingDestinationOutput, error) {
	var output guardduty.DeletePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDeleteThreatIntelSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDeleteThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.DeleteThreatIntelSetOutput, error) {
	var output guardduty.DeleteThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDescribeOrganizationConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDescribeOrganizationConfigurationFuture) Get(ctx workflow.Context) (*guardduty.DescribeOrganizationConfigurationOutput, error) {
	var output guardduty.DescribeOrganizationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDescribePublishingDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDescribePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.DescribePublishingDestinationOutput, error) {
	var output guardduty.DescribePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDisableOrganizationAdminAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDisableOrganizationAdminAccountFuture) Get(ctx workflow.Context) (*guardduty.DisableOrganizationAdminAccountOutput, error) {
	var output guardduty.DisableOrganizationAdminAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDisassociateFromMasterAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDisassociateFromMasterAccountFuture) Get(ctx workflow.Context) (*guardduty.DisassociateFromMasterAccountOutput, error) {
	var output guardduty.DisassociateFromMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyDisassociateMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyDisassociateMembersFuture) Get(ctx workflow.Context) (*guardduty.DisassociateMembersOutput, error) {
	var output guardduty.DisassociateMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyEnableOrganizationAdminAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyEnableOrganizationAdminAccountFuture) Get(ctx workflow.Context) (*guardduty.EnableOrganizationAdminAccountOutput, error) {
	var output guardduty.EnableOrganizationAdminAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetDetectorFuture) Get(ctx workflow.Context) (*guardduty.GetDetectorOutput, error) {
	var output guardduty.GetDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetFilterFuture) Get(ctx workflow.Context) (*guardduty.GetFilterOutput, error) {
	var output guardduty.GetFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetFindingsFuture) Get(ctx workflow.Context) (*guardduty.GetFindingsOutput, error) {
	var output guardduty.GetFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetFindingsStatisticsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetFindingsStatisticsFuture) Get(ctx workflow.Context) (*guardduty.GetFindingsStatisticsOutput, error) {
	var output guardduty.GetFindingsStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetIPSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetIPSetFuture) Get(ctx workflow.Context) (*guardduty.GetIPSetOutput, error) {
	var output guardduty.GetIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetInvitationsCountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetInvitationsCountFuture) Get(ctx workflow.Context) (*guardduty.GetInvitationsCountOutput, error) {
	var output guardduty.GetInvitationsCountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetMasterAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetMasterAccountFuture) Get(ctx workflow.Context) (*guardduty.GetMasterAccountOutput, error) {
	var output guardduty.GetMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetMemberDetectorsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetMemberDetectorsFuture) Get(ctx workflow.Context) (*guardduty.GetMemberDetectorsOutput, error) {
	var output guardduty.GetMemberDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetMembersFuture) Get(ctx workflow.Context) (*guardduty.GetMembersOutput, error) {
	var output guardduty.GetMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetThreatIntelSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.GetThreatIntelSetOutput, error) {
	var output guardduty.GetThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyGetUsageStatisticsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyGetUsageStatisticsFuture) Get(ctx workflow.Context) (*guardduty.GetUsageStatisticsOutput, error) {
	var output guardduty.GetUsageStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyInviteMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyInviteMembersFuture) Get(ctx workflow.Context) (*guardduty.InviteMembersOutput, error) {
	var output guardduty.InviteMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListDetectorsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListDetectorsFuture) Get(ctx workflow.Context) (*guardduty.ListDetectorsOutput, error) {
	var output guardduty.ListDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListFiltersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListFiltersFuture) Get(ctx workflow.Context) (*guardduty.ListFiltersOutput, error) {
	var output guardduty.ListFiltersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListFindingsFuture) Get(ctx workflow.Context) (*guardduty.ListFindingsOutput, error) {
	var output guardduty.ListFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListIPSetsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListIPSetsFuture) Get(ctx workflow.Context) (*guardduty.ListIPSetsOutput, error) {
	var output guardduty.ListIPSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListInvitationsFuture) Get(ctx workflow.Context) (*guardduty.ListInvitationsOutput, error) {
	var output guardduty.ListInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListMembersFuture) Get(ctx workflow.Context) (*guardduty.ListMembersOutput, error) {
	var output guardduty.ListMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListOrganizationAdminAccountsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListOrganizationAdminAccountsFuture) Get(ctx workflow.Context) (*guardduty.ListOrganizationAdminAccountsOutput, error) {
	var output guardduty.ListOrganizationAdminAccountsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListPublishingDestinationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListPublishingDestinationsFuture) Get(ctx workflow.Context) (*guardduty.ListPublishingDestinationsOutput, error) {
	var output guardduty.ListPublishingDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListTagsForResourceFuture) Get(ctx workflow.Context) (*guardduty.ListTagsForResourceOutput, error) {
	var output guardduty.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyListThreatIntelSetsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyListThreatIntelSetsFuture) Get(ctx workflow.Context) (*guardduty.ListThreatIntelSetsOutput, error) {
	var output guardduty.ListThreatIntelSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyStartMonitoringMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyStartMonitoringMembersFuture) Get(ctx workflow.Context) (*guardduty.StartMonitoringMembersOutput, error) {
	var output guardduty.StartMonitoringMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyStopMonitoringMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyStopMonitoringMembersFuture) Get(ctx workflow.Context) (*guardduty.StopMonitoringMembersOutput, error) {
	var output guardduty.StopMonitoringMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyTagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyTagResourceFuture) Get(ctx workflow.Context) (*guardduty.TagResourceOutput, error) {
	var output guardduty.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUnarchiveFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUnarchiveFindingsFuture) Get(ctx workflow.Context) (*guardduty.UnarchiveFindingsOutput, error) {
	var output guardduty.UnarchiveFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUntagResourceFuture) Get(ctx workflow.Context) (*guardduty.UntagResourceOutput, error) {
	var output guardduty.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateDetectorFuture) Get(ctx workflow.Context) (*guardduty.UpdateDetectorOutput, error) {
	var output guardduty.UpdateDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateFilterFuture) Get(ctx workflow.Context) (*guardduty.UpdateFilterOutput, error) {
	var output guardduty.UpdateFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateFindingsFeedbackFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateFindingsFeedbackFuture) Get(ctx workflow.Context) (*guardduty.UpdateFindingsFeedbackOutput, error) {
	var output guardduty.UpdateFindingsFeedbackOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateIPSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateIPSetFuture) Get(ctx workflow.Context) (*guardduty.UpdateIPSetOutput, error) {
	var output guardduty.UpdateIPSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateMemberDetectorsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateMemberDetectorsFuture) Get(ctx workflow.Context) (*guardduty.UpdateMemberDetectorsOutput, error) {
	var output guardduty.UpdateMemberDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateOrganizationConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateOrganizationConfigurationFuture) Get(ctx workflow.Context) (*guardduty.UpdateOrganizationConfigurationOutput, error) {
	var output guardduty.UpdateOrganizationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdatePublishingDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdatePublishingDestinationFuture) Get(ctx workflow.Context) (*guardduty.UpdatePublishingDestinationOutput, error) {
	var output guardduty.UpdatePublishingDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GuardDutyUpdateThreatIntelSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GuardDutyUpdateThreatIntelSetFuture) Get(ctx workflow.Context) (*guardduty.UpdateThreatIntelSetOutput, error) {
	var output guardduty.UpdateThreatIntelSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) AcceptInvitation(ctx workflow.Context, input *guardduty.AcceptInvitationInput) (*guardduty.AcceptInvitationOutput, error) {
	var output guardduty.AcceptInvitationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.AcceptInvitation", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) AcceptInvitationAsync(ctx workflow.Context, input *guardduty.AcceptInvitationInput) *GuardDutyAcceptInvitationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.AcceptInvitation", input)
	return &GuardDutyAcceptInvitationFuture{Future: future}
}

func (a *GuardDutyStub) ArchiveFindings(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) (*guardduty.ArchiveFindingsOutput, error) {
	var output guardduty.ArchiveFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ArchiveFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ArchiveFindingsAsync(ctx workflow.Context, input *guardduty.ArchiveFindingsInput) *GuardDutyArchiveFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ArchiveFindings", input)
	return &GuardDutyArchiveFindingsFuture{Future: future}
}

func (a *GuardDutyStub) CreateDetector(ctx workflow.Context, input *guardduty.CreateDetectorInput) (*guardduty.CreateDetectorOutput, error) {
	var output guardduty.CreateDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateDetectorAsync(ctx workflow.Context, input *guardduty.CreateDetectorInput) *GuardDutyCreateDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateDetector", input)
	return &GuardDutyCreateDetectorFuture{Future: future}
}

func (a *GuardDutyStub) CreateFilter(ctx workflow.Context, input *guardduty.CreateFilterInput) (*guardduty.CreateFilterOutput, error) {
	var output guardduty.CreateFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateFilterAsync(ctx workflow.Context, input *guardduty.CreateFilterInput) *GuardDutyCreateFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateFilter", input)
	return &GuardDutyCreateFilterFuture{Future: future}
}

func (a *GuardDutyStub) CreateIPSet(ctx workflow.Context, input *guardduty.CreateIPSetInput) (*guardduty.CreateIPSetOutput, error) {
	var output guardduty.CreateIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateIPSetAsync(ctx workflow.Context, input *guardduty.CreateIPSetInput) *GuardDutyCreateIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateIPSet", input)
	return &GuardDutyCreateIPSetFuture{Future: future}
}

func (a *GuardDutyStub) CreateMembers(ctx workflow.Context, input *guardduty.CreateMembersInput) (*guardduty.CreateMembersOutput, error) {
	var output guardduty.CreateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateMembersAsync(ctx workflow.Context, input *guardduty.CreateMembersInput) *GuardDutyCreateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateMembers", input)
	return &GuardDutyCreateMembersFuture{Future: future}
}

func (a *GuardDutyStub) CreatePublishingDestination(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) (*guardduty.CreatePublishingDestinationOutput, error) {
	var output guardduty.CreatePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreatePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.CreatePublishingDestinationInput) *GuardDutyCreatePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreatePublishingDestination", input)
	return &GuardDutyCreatePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) CreateSampleFindings(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) (*guardduty.CreateSampleFindingsOutput, error) {
	var output guardduty.CreateSampleFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateSampleFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateSampleFindingsAsync(ctx workflow.Context, input *guardduty.CreateSampleFindingsInput) *GuardDutyCreateSampleFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateSampleFindings", input)
	return &GuardDutyCreateSampleFindingsFuture{Future: future}
}

func (a *GuardDutyStub) CreateThreatIntelSet(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) (*guardduty.CreateThreatIntelSetOutput, error) {
	var output guardduty.CreateThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) CreateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.CreateThreatIntelSetInput) *GuardDutyCreateThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.CreateThreatIntelSet", input)
	return &GuardDutyCreateThreatIntelSetFuture{Future: future}
}

func (a *GuardDutyStub) DeclineInvitations(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) (*guardduty.DeclineInvitationsOutput, error) {
	var output guardduty.DeclineInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeclineInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeclineInvitationsAsync(ctx workflow.Context, input *guardduty.DeclineInvitationsInput) *GuardDutyDeclineInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeclineInvitations", input)
	return &GuardDutyDeclineInvitationsFuture{Future: future}
}

func (a *GuardDutyStub) DeleteDetector(ctx workflow.Context, input *guardduty.DeleteDetectorInput) (*guardduty.DeleteDetectorOutput, error) {
	var output guardduty.DeleteDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteDetectorAsync(ctx workflow.Context, input *guardduty.DeleteDetectorInput) *GuardDutyDeleteDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteDetector", input)
	return &GuardDutyDeleteDetectorFuture{Future: future}
}

func (a *GuardDutyStub) DeleteFilter(ctx workflow.Context, input *guardduty.DeleteFilterInput) (*guardduty.DeleteFilterOutput, error) {
	var output guardduty.DeleteFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteFilterAsync(ctx workflow.Context, input *guardduty.DeleteFilterInput) *GuardDutyDeleteFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteFilter", input)
	return &GuardDutyDeleteFilterFuture{Future: future}
}

func (a *GuardDutyStub) DeleteIPSet(ctx workflow.Context, input *guardduty.DeleteIPSetInput) (*guardduty.DeleteIPSetOutput, error) {
	var output guardduty.DeleteIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteIPSetAsync(ctx workflow.Context, input *guardduty.DeleteIPSetInput) *GuardDutyDeleteIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteIPSet", input)
	return &GuardDutyDeleteIPSetFuture{Future: future}
}

func (a *GuardDutyStub) DeleteInvitations(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) (*guardduty.DeleteInvitationsOutput, error) {
	var output guardduty.DeleteInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteInvitationsAsync(ctx workflow.Context, input *guardduty.DeleteInvitationsInput) *GuardDutyDeleteInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteInvitations", input)
	return &GuardDutyDeleteInvitationsFuture{Future: future}
}

func (a *GuardDutyStub) DeleteMembers(ctx workflow.Context, input *guardduty.DeleteMembersInput) (*guardduty.DeleteMembersOutput, error) {
	var output guardduty.DeleteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteMembersAsync(ctx workflow.Context, input *guardduty.DeleteMembersInput) *GuardDutyDeleteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteMembers", input)
	return &GuardDutyDeleteMembersFuture{Future: future}
}

func (a *GuardDutyStub) DeletePublishingDestination(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) (*guardduty.DeletePublishingDestinationOutput, error) {
	var output guardduty.DeletePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeletePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeletePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DeletePublishingDestinationInput) *GuardDutyDeletePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeletePublishingDestination", input)
	return &GuardDutyDeletePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) DeleteThreatIntelSet(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) (*guardduty.DeleteThreatIntelSetOutput, error) {
	var output guardduty.DeleteThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DeleteThreatIntelSetAsync(ctx workflow.Context, input *guardduty.DeleteThreatIntelSetInput) *GuardDutyDeleteThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DeleteThreatIntelSet", input)
	return &GuardDutyDeleteThreatIntelSetFuture{Future: future}
}

func (a *GuardDutyStub) DescribeOrganizationConfiguration(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) (*guardduty.DescribeOrganizationConfigurationOutput, error) {
	var output guardduty.DescribeOrganizationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribeOrganizationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DescribeOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.DescribeOrganizationConfigurationInput) *GuardDutyDescribeOrganizationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribeOrganizationConfiguration", input)
	return &GuardDutyDescribeOrganizationConfigurationFuture{Future: future}
}

func (a *GuardDutyStub) DescribePublishingDestination(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) (*guardduty.DescribePublishingDestinationOutput, error) {
	var output guardduty.DescribePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DescribePublishingDestinationAsync(ctx workflow.Context, input *guardduty.DescribePublishingDestinationInput) *GuardDutyDescribePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DescribePublishingDestination", input)
	return &GuardDutyDescribePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) DisableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) (*guardduty.DisableOrganizationAdminAccountOutput, error) {
	var output guardduty.DisableOrganizationAdminAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DisableOrganizationAdminAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DisableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.DisableOrganizationAdminAccountInput) *GuardDutyDisableOrganizationAdminAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DisableOrganizationAdminAccount", input)
	return &GuardDutyDisableOrganizationAdminAccountFuture{Future: future}
}

func (a *GuardDutyStub) DisassociateFromMasterAccount(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) (*guardduty.DisassociateFromMasterAccountOutput, error) {
	var output guardduty.DisassociateFromMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateFromMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DisassociateFromMasterAccountAsync(ctx workflow.Context, input *guardduty.DisassociateFromMasterAccountInput) *GuardDutyDisassociateFromMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateFromMasterAccount", input)
	return &GuardDutyDisassociateFromMasterAccountFuture{Future: future}
}

func (a *GuardDutyStub) DisassociateMembers(ctx workflow.Context, input *guardduty.DisassociateMembersInput) (*guardduty.DisassociateMembersOutput, error) {
	var output guardduty.DisassociateMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) DisassociateMembersAsync(ctx workflow.Context, input *guardduty.DisassociateMembersInput) *GuardDutyDisassociateMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.DisassociateMembers", input)
	return &GuardDutyDisassociateMembersFuture{Future: future}
}

func (a *GuardDutyStub) EnableOrganizationAdminAccount(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) (*guardduty.EnableOrganizationAdminAccountOutput, error) {
	var output guardduty.EnableOrganizationAdminAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.EnableOrganizationAdminAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) EnableOrganizationAdminAccountAsync(ctx workflow.Context, input *guardduty.EnableOrganizationAdminAccountInput) *GuardDutyEnableOrganizationAdminAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.EnableOrganizationAdminAccount", input)
	return &GuardDutyEnableOrganizationAdminAccountFuture{Future: future}
}

func (a *GuardDutyStub) GetDetector(ctx workflow.Context, input *guardduty.GetDetectorInput) (*guardduty.GetDetectorOutput, error) {
	var output guardduty.GetDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetDetectorAsync(ctx workflow.Context, input *guardduty.GetDetectorInput) *GuardDutyGetDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetDetector", input)
	return &GuardDutyGetDetectorFuture{Future: future}
}

func (a *GuardDutyStub) GetFilter(ctx workflow.Context, input *guardduty.GetFilterInput) (*guardduty.GetFilterOutput, error) {
	var output guardduty.GetFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetFilterAsync(ctx workflow.Context, input *guardduty.GetFilterInput) *GuardDutyGetFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFilter", input)
	return &GuardDutyGetFilterFuture{Future: future}
}

func (a *GuardDutyStub) GetFindings(ctx workflow.Context, input *guardduty.GetFindingsInput) (*guardduty.GetFindingsOutput, error) {
	var output guardduty.GetFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetFindingsAsync(ctx workflow.Context, input *guardduty.GetFindingsInput) *GuardDutyGetFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindings", input)
	return &GuardDutyGetFindingsFuture{Future: future}
}

func (a *GuardDutyStub) GetFindingsStatistics(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) (*guardduty.GetFindingsStatisticsOutput, error) {
	var output guardduty.GetFindingsStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindingsStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetFindingsStatisticsAsync(ctx workflow.Context, input *guardduty.GetFindingsStatisticsInput) *GuardDutyGetFindingsStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetFindingsStatistics", input)
	return &GuardDutyGetFindingsStatisticsFuture{Future: future}
}

func (a *GuardDutyStub) GetIPSet(ctx workflow.Context, input *guardduty.GetIPSetInput) (*guardduty.GetIPSetOutput, error) {
	var output guardduty.GetIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetIPSetAsync(ctx workflow.Context, input *guardduty.GetIPSetInput) *GuardDutyGetIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetIPSet", input)
	return &GuardDutyGetIPSetFuture{Future: future}
}

func (a *GuardDutyStub) GetInvitationsCount(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) (*guardduty.GetInvitationsCountOutput, error) {
	var output guardduty.GetInvitationsCountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetInvitationsCount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetInvitationsCountAsync(ctx workflow.Context, input *guardduty.GetInvitationsCountInput) *GuardDutyGetInvitationsCountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetInvitationsCount", input)
	return &GuardDutyGetInvitationsCountFuture{Future: future}
}

func (a *GuardDutyStub) GetMasterAccount(ctx workflow.Context, input *guardduty.GetMasterAccountInput) (*guardduty.GetMasterAccountOutput, error) {
	var output guardduty.GetMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetMasterAccountAsync(ctx workflow.Context, input *guardduty.GetMasterAccountInput) *GuardDutyGetMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMasterAccount", input)
	return &GuardDutyGetMasterAccountFuture{Future: future}
}

func (a *GuardDutyStub) GetMemberDetectors(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) (*guardduty.GetMemberDetectorsOutput, error) {
	var output guardduty.GetMemberDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMemberDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetMemberDetectorsAsync(ctx workflow.Context, input *guardduty.GetMemberDetectorsInput) *GuardDutyGetMemberDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMemberDetectors", input)
	return &GuardDutyGetMemberDetectorsFuture{Future: future}
}

func (a *GuardDutyStub) GetMembers(ctx workflow.Context, input *guardduty.GetMembersInput) (*guardduty.GetMembersOutput, error) {
	var output guardduty.GetMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetMembersAsync(ctx workflow.Context, input *guardduty.GetMembersInput) *GuardDutyGetMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetMembers", input)
	return &GuardDutyGetMembersFuture{Future: future}
}

func (a *GuardDutyStub) GetThreatIntelSet(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) (*guardduty.GetThreatIntelSetOutput, error) {
	var output guardduty.GetThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetThreatIntelSetAsync(ctx workflow.Context, input *guardduty.GetThreatIntelSetInput) *GuardDutyGetThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetThreatIntelSet", input)
	return &GuardDutyGetThreatIntelSetFuture{Future: future}
}

func (a *GuardDutyStub) GetUsageStatistics(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) (*guardduty.GetUsageStatisticsOutput, error) {
	var output guardduty.GetUsageStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.GetUsageStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) GetUsageStatisticsAsync(ctx workflow.Context, input *guardduty.GetUsageStatisticsInput) *GuardDutyGetUsageStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.GetUsageStatistics", input)
	return &GuardDutyGetUsageStatisticsFuture{Future: future}
}

func (a *GuardDutyStub) InviteMembers(ctx workflow.Context, input *guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error) {
	var output guardduty.InviteMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.InviteMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) InviteMembersAsync(ctx workflow.Context, input *guardduty.InviteMembersInput) *GuardDutyInviteMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.InviteMembers", input)
	return &GuardDutyInviteMembersFuture{Future: future}
}

func (a *GuardDutyStub) ListDetectors(ctx workflow.Context, input *guardduty.ListDetectorsInput) (*guardduty.ListDetectorsOutput, error) {
	var output guardduty.ListDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListDetectorsAsync(ctx workflow.Context, input *guardduty.ListDetectorsInput) *GuardDutyListDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListDetectors", input)
	return &GuardDutyListDetectorsFuture{Future: future}
}

func (a *GuardDutyStub) ListFilters(ctx workflow.Context, input *guardduty.ListFiltersInput) (*guardduty.ListFiltersOutput, error) {
	var output guardduty.ListFiltersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFilters", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListFiltersAsync(ctx workflow.Context, input *guardduty.ListFiltersInput) *GuardDutyListFiltersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFilters", input)
	return &GuardDutyListFiltersFuture{Future: future}
}

func (a *GuardDutyStub) ListFindings(ctx workflow.Context, input *guardduty.ListFindingsInput) (*guardduty.ListFindingsOutput, error) {
	var output guardduty.ListFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListFindingsAsync(ctx workflow.Context, input *guardduty.ListFindingsInput) *GuardDutyListFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListFindings", input)
	return &GuardDutyListFindingsFuture{Future: future}
}

func (a *GuardDutyStub) ListIPSets(ctx workflow.Context, input *guardduty.ListIPSetsInput) (*guardduty.ListIPSetsOutput, error) {
	var output guardduty.ListIPSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListIPSets", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListIPSetsAsync(ctx workflow.Context, input *guardduty.ListIPSetsInput) *GuardDutyListIPSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListIPSets", input)
	return &GuardDutyListIPSetsFuture{Future: future}
}

func (a *GuardDutyStub) ListInvitations(ctx workflow.Context, input *guardduty.ListInvitationsInput) (*guardduty.ListInvitationsOutput, error) {
	var output guardduty.ListInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListInvitationsAsync(ctx workflow.Context, input *guardduty.ListInvitationsInput) *GuardDutyListInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListInvitations", input)
	return &GuardDutyListInvitationsFuture{Future: future}
}

func (a *GuardDutyStub) ListMembers(ctx workflow.Context, input *guardduty.ListMembersInput) (*guardduty.ListMembersOutput, error) {
	var output guardduty.ListMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListMembersAsync(ctx workflow.Context, input *guardduty.ListMembersInput) *GuardDutyListMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListMembers", input)
	return &GuardDutyListMembersFuture{Future: future}
}

func (a *GuardDutyStub) ListOrganizationAdminAccounts(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) (*guardduty.ListOrganizationAdminAccountsOutput, error) {
	var output guardduty.ListOrganizationAdminAccountsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListOrganizationAdminAccounts", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListOrganizationAdminAccountsAsync(ctx workflow.Context, input *guardduty.ListOrganizationAdminAccountsInput) *GuardDutyListOrganizationAdminAccountsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListOrganizationAdminAccounts", input)
	return &GuardDutyListOrganizationAdminAccountsFuture{Future: future}
}

func (a *GuardDutyStub) ListPublishingDestinations(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) (*guardduty.ListPublishingDestinationsOutput, error) {
	var output guardduty.ListPublishingDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListPublishingDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListPublishingDestinationsAsync(ctx workflow.Context, input *guardduty.ListPublishingDestinationsInput) *GuardDutyListPublishingDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListPublishingDestinations", input)
	return &GuardDutyListPublishingDestinationsFuture{Future: future}
}

func (a *GuardDutyStub) ListTagsForResource(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) (*guardduty.ListTagsForResourceOutput, error) {
	var output guardduty.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListTagsForResourceAsync(ctx workflow.Context, input *guardduty.ListTagsForResourceInput) *GuardDutyListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListTagsForResource", input)
	return &GuardDutyListTagsForResourceFuture{Future: future}
}

func (a *GuardDutyStub) ListThreatIntelSets(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) (*guardduty.ListThreatIntelSetsOutput, error) {
	var output guardduty.ListThreatIntelSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.ListThreatIntelSets", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) ListThreatIntelSetsAsync(ctx workflow.Context, input *guardduty.ListThreatIntelSetsInput) *GuardDutyListThreatIntelSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.ListThreatIntelSets", input)
	return &GuardDutyListThreatIntelSetsFuture{Future: future}
}

func (a *GuardDutyStub) StartMonitoringMembers(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) (*guardduty.StartMonitoringMembersOutput, error) {
	var output guardduty.StartMonitoringMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.StartMonitoringMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) StartMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StartMonitoringMembersInput) *GuardDutyStartMonitoringMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.StartMonitoringMembers", input)
	return &GuardDutyStartMonitoringMembersFuture{Future: future}
}

func (a *GuardDutyStub) StopMonitoringMembers(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) (*guardduty.StopMonitoringMembersOutput, error) {
	var output guardduty.StopMonitoringMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.StopMonitoringMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) StopMonitoringMembersAsync(ctx workflow.Context, input *guardduty.StopMonitoringMembersInput) *GuardDutyStopMonitoringMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.StopMonitoringMembers", input)
	return &GuardDutyStopMonitoringMembersFuture{Future: future}
}

func (a *GuardDutyStub) TagResource(ctx workflow.Context, input *guardduty.TagResourceInput) (*guardduty.TagResourceOutput, error) {
	var output guardduty.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) TagResourceAsync(ctx workflow.Context, input *guardduty.TagResourceInput) *GuardDutyTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.TagResource", input)
	return &GuardDutyTagResourceFuture{Future: future}
}

func (a *GuardDutyStub) UnarchiveFindings(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) (*guardduty.UnarchiveFindingsOutput, error) {
	var output guardduty.UnarchiveFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UnarchiveFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UnarchiveFindingsAsync(ctx workflow.Context, input *guardduty.UnarchiveFindingsInput) *GuardDutyUnarchiveFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UnarchiveFindings", input)
	return &GuardDutyUnarchiveFindingsFuture{Future: future}
}

func (a *GuardDutyStub) UntagResource(ctx workflow.Context, input *guardduty.UntagResourceInput) (*guardduty.UntagResourceOutput, error) {
	var output guardduty.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UntagResourceAsync(ctx workflow.Context, input *guardduty.UntagResourceInput) *GuardDutyUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UntagResource", input)
	return &GuardDutyUntagResourceFuture{Future: future}
}

func (a *GuardDutyStub) UpdateDetector(ctx workflow.Context, input *guardduty.UpdateDetectorInput) (*guardduty.UpdateDetectorOutput, error) {
	var output guardduty.UpdateDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateDetectorAsync(ctx workflow.Context, input *guardduty.UpdateDetectorInput) *GuardDutyUpdateDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateDetector", input)
	return &GuardDutyUpdateDetectorFuture{Future: future}
}

func (a *GuardDutyStub) UpdateFilter(ctx workflow.Context, input *guardduty.UpdateFilterInput) (*guardduty.UpdateFilterOutput, error) {
	var output guardduty.UpdateFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateFilterAsync(ctx workflow.Context, input *guardduty.UpdateFilterInput) *GuardDutyUpdateFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFilter", input)
	return &GuardDutyUpdateFilterFuture{Future: future}
}

func (a *GuardDutyStub) UpdateFindingsFeedback(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) (*guardduty.UpdateFindingsFeedbackOutput, error) {
	var output guardduty.UpdateFindingsFeedbackOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFindingsFeedback", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateFindingsFeedbackAsync(ctx workflow.Context, input *guardduty.UpdateFindingsFeedbackInput) *GuardDutyUpdateFindingsFeedbackFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateFindingsFeedback", input)
	return &GuardDutyUpdateFindingsFeedbackFuture{Future: future}
}

func (a *GuardDutyStub) UpdateIPSet(ctx workflow.Context, input *guardduty.UpdateIPSetInput) (*guardduty.UpdateIPSetOutput, error) {
	var output guardduty.UpdateIPSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateIPSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateIPSetAsync(ctx workflow.Context, input *guardduty.UpdateIPSetInput) *GuardDutyUpdateIPSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateIPSet", input)
	return &GuardDutyUpdateIPSetFuture{Future: future}
}

func (a *GuardDutyStub) UpdateMemberDetectors(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) (*guardduty.UpdateMemberDetectorsOutput, error) {
	var output guardduty.UpdateMemberDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateMemberDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateMemberDetectorsAsync(ctx workflow.Context, input *guardduty.UpdateMemberDetectorsInput) *GuardDutyUpdateMemberDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateMemberDetectors", input)
	return &GuardDutyUpdateMemberDetectorsFuture{Future: future}
}

func (a *GuardDutyStub) UpdateOrganizationConfiguration(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) (*guardduty.UpdateOrganizationConfigurationOutput, error) {
	var output guardduty.UpdateOrganizationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateOrganizationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateOrganizationConfigurationAsync(ctx workflow.Context, input *guardduty.UpdateOrganizationConfigurationInput) *GuardDutyUpdateOrganizationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateOrganizationConfiguration", input)
	return &GuardDutyUpdateOrganizationConfigurationFuture{Future: future}
}

func (a *GuardDutyStub) UpdatePublishingDestination(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) (*guardduty.UpdatePublishingDestinationOutput, error) {
	var output guardduty.UpdatePublishingDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdatePublishingDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdatePublishingDestinationAsync(ctx workflow.Context, input *guardduty.UpdatePublishingDestinationInput) *GuardDutyUpdatePublishingDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdatePublishingDestination", input)
	return &GuardDutyUpdatePublishingDestinationFuture{Future: future}
}

func (a *GuardDutyStub) UpdateThreatIntelSet(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) (*guardduty.UpdateThreatIntelSetOutput, error) {
	var output guardduty.UpdateThreatIntelSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateThreatIntelSet", input).Get(ctx, &output)
	return &output, err
}

func (a *GuardDutyStub) UpdateThreatIntelSetAsync(ctx workflow.Context, input *guardduty.UpdateThreatIntelSetInput) *GuardDutyUpdateThreatIntelSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.guardduty.UpdateThreatIntelSet", input)
	return &GuardDutyUpdateThreatIntelSetFuture{Future: future}
}
