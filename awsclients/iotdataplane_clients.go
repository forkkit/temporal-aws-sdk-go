// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/iotdataplane"
	"go.temporal.io/sdk/workflow"
)

type IoTDataPlaneClient interface {
	DeleteThingShadow(ctx workflow.Context, input *iotdataplane.DeleteThingShadowInput) (*iotdataplane.DeleteThingShadowOutput, error)
	DeleteThingShadowAsync(ctx workflow.Context, input *iotdataplane.DeleteThingShadowInput) *IotdataplaneDeleteThingShadowFuture

	GetThingShadow(ctx workflow.Context, input *iotdataplane.GetThingShadowInput) (*iotdataplane.GetThingShadowOutput, error)
	GetThingShadowAsync(ctx workflow.Context, input *iotdataplane.GetThingShadowInput) *IotdataplaneGetThingShadowFuture

	ListNamedShadowsForThing(ctx workflow.Context, input *iotdataplane.ListNamedShadowsForThingInput) (*iotdataplane.ListNamedShadowsForThingOutput, error)
	ListNamedShadowsForThingAsync(ctx workflow.Context, input *iotdataplane.ListNamedShadowsForThingInput) *IotdataplaneListNamedShadowsForThingFuture

	Publish(ctx workflow.Context, input *iotdataplane.PublishInput) (*iotdataplane.PublishOutput, error)
	PublishAsync(ctx workflow.Context, input *iotdataplane.PublishInput) *IotdataplanePublishFuture

	UpdateThingShadow(ctx workflow.Context, input *iotdataplane.UpdateThingShadowInput) (*iotdataplane.UpdateThingShadowOutput, error)
	UpdateThingShadowAsync(ctx workflow.Context, input *iotdataplane.UpdateThingShadowInput) *IotdataplaneUpdateThingShadowFuture
}

type IoTDataPlaneStub struct{}

func NewIoTDataPlaneStub() IoTDataPlaneClient {
	return &IoTDataPlaneStub{}
}

type IotdataplaneDeleteThingShadowFuture struct {
	Future workflow.Future
}

func (r *IotdataplaneDeleteThingShadowFuture) Get(ctx workflow.Context) (*iotdataplane.DeleteThingShadowOutput, error) {
	var output iotdataplane.DeleteThingShadowOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IotdataplaneGetThingShadowFuture struct {
	Future workflow.Future
}

func (r *IotdataplaneGetThingShadowFuture) Get(ctx workflow.Context) (*iotdataplane.GetThingShadowOutput, error) {
	var output iotdataplane.GetThingShadowOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IotdataplaneListNamedShadowsForThingFuture struct {
	Future workflow.Future
}

func (r *IotdataplaneListNamedShadowsForThingFuture) Get(ctx workflow.Context) (*iotdataplane.ListNamedShadowsForThingOutput, error) {
	var output iotdataplane.ListNamedShadowsForThingOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IotdataplanePublishFuture struct {
	Future workflow.Future
}

func (r *IotdataplanePublishFuture) Get(ctx workflow.Context) (*iotdataplane.PublishOutput, error) {
	var output iotdataplane.PublishOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IotdataplaneUpdateThingShadowFuture struct {
	Future workflow.Future
}

func (r *IotdataplaneUpdateThingShadowFuture) Get(ctx workflow.Context) (*iotdataplane.UpdateThingShadowOutput, error) {
	var output iotdataplane.UpdateThingShadowOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *IoTDataPlaneStub) DeleteThingShadow(ctx workflow.Context, input *iotdataplane.DeleteThingShadowInput) (*iotdataplane.DeleteThingShadowOutput, error) {
	var output iotdataplane.DeleteThingShadowOutput
	err := workflow.ExecuteActivity(ctx, "aws.iotdataplane.DeleteThingShadow", input).Get(ctx, &output)
	return &output, err
}

func (a *IoTDataPlaneStub) DeleteThingShadowAsync(ctx workflow.Context, input *iotdataplane.DeleteThingShadowInput) *IotdataplaneDeleteThingShadowFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iotdataplane.DeleteThingShadow", input)
	return &IotdataplaneDeleteThingShadowFuture{Future: future}
}

func (a *IoTDataPlaneStub) GetThingShadow(ctx workflow.Context, input *iotdataplane.GetThingShadowInput) (*iotdataplane.GetThingShadowOutput, error) {
	var output iotdataplane.GetThingShadowOutput
	err := workflow.ExecuteActivity(ctx, "aws.iotdataplane.GetThingShadow", input).Get(ctx, &output)
	return &output, err
}

func (a *IoTDataPlaneStub) GetThingShadowAsync(ctx workflow.Context, input *iotdataplane.GetThingShadowInput) *IotdataplaneGetThingShadowFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iotdataplane.GetThingShadow", input)
	return &IotdataplaneGetThingShadowFuture{Future: future}
}

func (a *IoTDataPlaneStub) ListNamedShadowsForThing(ctx workflow.Context, input *iotdataplane.ListNamedShadowsForThingInput) (*iotdataplane.ListNamedShadowsForThingOutput, error) {
	var output iotdataplane.ListNamedShadowsForThingOutput
	err := workflow.ExecuteActivity(ctx, "aws.iotdataplane.ListNamedShadowsForThing", input).Get(ctx, &output)
	return &output, err
}

func (a *IoTDataPlaneStub) ListNamedShadowsForThingAsync(ctx workflow.Context, input *iotdataplane.ListNamedShadowsForThingInput) *IotdataplaneListNamedShadowsForThingFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iotdataplane.ListNamedShadowsForThing", input)
	return &IotdataplaneListNamedShadowsForThingFuture{Future: future}
}

func (a *IoTDataPlaneStub) Publish(ctx workflow.Context, input *iotdataplane.PublishInput) (*iotdataplane.PublishOutput, error) {
	var output iotdataplane.PublishOutput
	err := workflow.ExecuteActivity(ctx, "aws.iotdataplane.Publish", input).Get(ctx, &output)
	return &output, err
}

func (a *IoTDataPlaneStub) PublishAsync(ctx workflow.Context, input *iotdataplane.PublishInput) *IotdataplanePublishFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iotdataplane.Publish", input)
	return &IotdataplanePublishFuture{Future: future}
}

func (a *IoTDataPlaneStub) UpdateThingShadow(ctx workflow.Context, input *iotdataplane.UpdateThingShadowInput) (*iotdataplane.UpdateThingShadowOutput, error) {
	var output iotdataplane.UpdateThingShadowOutput
	err := workflow.ExecuteActivity(ctx, "aws.iotdataplane.UpdateThingShadow", input).Get(ctx, &output)
	return &output, err
}

func (a *IoTDataPlaneStub) UpdateThingShadowAsync(ctx workflow.Context, input *iotdataplane.UpdateThingShadowInput) *IotdataplaneUpdateThingShadowFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iotdataplane.UpdateThingShadow", input)
	return &IotdataplaneUpdateThingShadowFuture{Future: future}
}
