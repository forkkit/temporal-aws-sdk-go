// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/frauddetector"
	"go.temporal.io/sdk/workflow"
)

type FraudDetectorClient interface {
	BatchCreateVariable(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) (*frauddetector.BatchCreateVariableOutput, error)
	BatchCreateVariableAsync(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) *FraudDetectorBatchCreateVariableFuture

	BatchGetVariable(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) (*frauddetector.BatchGetVariableOutput, error)
	BatchGetVariableAsync(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) *FraudDetectorBatchGetVariableFuture

	CreateDetectorVersion(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) (*frauddetector.CreateDetectorVersionOutput, error)
	CreateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) *FraudDetectorCreateDetectorVersionFuture

	CreateModel(ctx workflow.Context, input *frauddetector.CreateModelInput) (*frauddetector.CreateModelOutput, error)
	CreateModelAsync(ctx workflow.Context, input *frauddetector.CreateModelInput) *FraudDetectorCreateModelFuture

	CreateModelVersion(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) (*frauddetector.CreateModelVersionOutput, error)
	CreateModelVersionAsync(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) *FraudDetectorCreateModelVersionFuture

	CreateRule(ctx workflow.Context, input *frauddetector.CreateRuleInput) (*frauddetector.CreateRuleOutput, error)
	CreateRuleAsync(ctx workflow.Context, input *frauddetector.CreateRuleInput) *FraudDetectorCreateRuleFuture

	CreateVariable(ctx workflow.Context, input *frauddetector.CreateVariableInput) (*frauddetector.CreateVariableOutput, error)
	CreateVariableAsync(ctx workflow.Context, input *frauddetector.CreateVariableInput) *FraudDetectorCreateVariableFuture

	DeleteDetector(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) (*frauddetector.DeleteDetectorOutput, error)
	DeleteDetectorAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) *FraudDetectorDeleteDetectorFuture

	DeleteDetectorVersion(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) (*frauddetector.DeleteDetectorVersionOutput, error)
	DeleteDetectorVersionAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) *FraudDetectorDeleteDetectorVersionFuture

	DeleteEvent(ctx workflow.Context, input *frauddetector.DeleteEventInput) (*frauddetector.DeleteEventOutput, error)
	DeleteEventAsync(ctx workflow.Context, input *frauddetector.DeleteEventInput) *FraudDetectorDeleteEventFuture

	DeleteRule(ctx workflow.Context, input *frauddetector.DeleteRuleInput) (*frauddetector.DeleteRuleOutput, error)
	DeleteRuleAsync(ctx workflow.Context, input *frauddetector.DeleteRuleInput) *FraudDetectorDeleteRuleFuture

	DescribeDetector(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) (*frauddetector.DescribeDetectorOutput, error)
	DescribeDetectorAsync(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) *FraudDetectorDescribeDetectorFuture

	DescribeModelVersions(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) (*frauddetector.DescribeModelVersionsOutput, error)
	DescribeModelVersionsAsync(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) *FraudDetectorDescribeModelVersionsFuture

	GetDetectorVersion(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) (*frauddetector.GetDetectorVersionOutput, error)
	GetDetectorVersionAsync(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) *FraudDetectorGetDetectorVersionFuture

	GetDetectors(ctx workflow.Context, input *frauddetector.GetDetectorsInput) (*frauddetector.GetDetectorsOutput, error)
	GetDetectorsAsync(ctx workflow.Context, input *frauddetector.GetDetectorsInput) *FraudDetectorGetDetectorsFuture

	GetEntityTypes(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) (*frauddetector.GetEntityTypesOutput, error)
	GetEntityTypesAsync(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) *FraudDetectorGetEntityTypesFuture

	GetEventPrediction(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) (*frauddetector.GetEventPredictionOutput, error)
	GetEventPredictionAsync(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) *FraudDetectorGetEventPredictionFuture

	GetEventTypes(ctx workflow.Context, input *frauddetector.GetEventTypesInput) (*frauddetector.GetEventTypesOutput, error)
	GetEventTypesAsync(ctx workflow.Context, input *frauddetector.GetEventTypesInput) *FraudDetectorGetEventTypesFuture

	GetExternalModels(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) (*frauddetector.GetExternalModelsOutput, error)
	GetExternalModelsAsync(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) *FraudDetectorGetExternalModelsFuture

	GetKMSEncryptionKey(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) (*frauddetector.GetKMSEncryptionKeyOutput, error)
	GetKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) *FraudDetectorGetKMSEncryptionKeyFuture

	GetLabels(ctx workflow.Context, input *frauddetector.GetLabelsInput) (*frauddetector.GetLabelsOutput, error)
	GetLabelsAsync(ctx workflow.Context, input *frauddetector.GetLabelsInput) *FraudDetectorGetLabelsFuture

	GetModelVersion(ctx workflow.Context, input *frauddetector.GetModelVersionInput) (*frauddetector.GetModelVersionOutput, error)
	GetModelVersionAsync(ctx workflow.Context, input *frauddetector.GetModelVersionInput) *FraudDetectorGetModelVersionFuture

	GetModels(ctx workflow.Context, input *frauddetector.GetModelsInput) (*frauddetector.GetModelsOutput, error)
	GetModelsAsync(ctx workflow.Context, input *frauddetector.GetModelsInput) *FraudDetectorGetModelsFuture

	GetOutcomes(ctx workflow.Context, input *frauddetector.GetOutcomesInput) (*frauddetector.GetOutcomesOutput, error)
	GetOutcomesAsync(ctx workflow.Context, input *frauddetector.GetOutcomesInput) *FraudDetectorGetOutcomesFuture

	GetRules(ctx workflow.Context, input *frauddetector.GetRulesInput) (*frauddetector.GetRulesOutput, error)
	GetRulesAsync(ctx workflow.Context, input *frauddetector.GetRulesInput) *FraudDetectorGetRulesFuture

	GetVariables(ctx workflow.Context, input *frauddetector.GetVariablesInput) (*frauddetector.GetVariablesOutput, error)
	GetVariablesAsync(ctx workflow.Context, input *frauddetector.GetVariablesInput) *FraudDetectorGetVariablesFuture

	ListTagsForResource(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) (*frauddetector.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) *FraudDetectorListTagsForResourceFuture

	PutDetector(ctx workflow.Context, input *frauddetector.PutDetectorInput) (*frauddetector.PutDetectorOutput, error)
	PutDetectorAsync(ctx workflow.Context, input *frauddetector.PutDetectorInput) *FraudDetectorPutDetectorFuture

	PutEntityType(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) (*frauddetector.PutEntityTypeOutput, error)
	PutEntityTypeAsync(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) *FraudDetectorPutEntityTypeFuture

	PutEventType(ctx workflow.Context, input *frauddetector.PutEventTypeInput) (*frauddetector.PutEventTypeOutput, error)
	PutEventTypeAsync(ctx workflow.Context, input *frauddetector.PutEventTypeInput) *FraudDetectorPutEventTypeFuture

	PutExternalModel(ctx workflow.Context, input *frauddetector.PutExternalModelInput) (*frauddetector.PutExternalModelOutput, error)
	PutExternalModelAsync(ctx workflow.Context, input *frauddetector.PutExternalModelInput) *FraudDetectorPutExternalModelFuture

	PutKMSEncryptionKey(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) (*frauddetector.PutKMSEncryptionKeyOutput, error)
	PutKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) *FraudDetectorPutKMSEncryptionKeyFuture

	PutLabel(ctx workflow.Context, input *frauddetector.PutLabelInput) (*frauddetector.PutLabelOutput, error)
	PutLabelAsync(ctx workflow.Context, input *frauddetector.PutLabelInput) *FraudDetectorPutLabelFuture

	PutOutcome(ctx workflow.Context, input *frauddetector.PutOutcomeInput) (*frauddetector.PutOutcomeOutput, error)
	PutOutcomeAsync(ctx workflow.Context, input *frauddetector.PutOutcomeInput) *FraudDetectorPutOutcomeFuture

	TagResource(ctx workflow.Context, input *frauddetector.TagResourceInput) (*frauddetector.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *frauddetector.TagResourceInput) *FraudDetectorTagResourceFuture

	UntagResource(ctx workflow.Context, input *frauddetector.UntagResourceInput) (*frauddetector.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *frauddetector.UntagResourceInput) *FraudDetectorUntagResourceFuture

	UpdateDetectorVersion(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) (*frauddetector.UpdateDetectorVersionOutput, error)
	UpdateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) *FraudDetectorUpdateDetectorVersionFuture

	UpdateDetectorVersionMetadata(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) (*frauddetector.UpdateDetectorVersionMetadataOutput, error)
	UpdateDetectorVersionMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) *FraudDetectorUpdateDetectorVersionMetadataFuture

	UpdateDetectorVersionStatus(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) (*frauddetector.UpdateDetectorVersionStatusOutput, error)
	UpdateDetectorVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) *FraudDetectorUpdateDetectorVersionStatusFuture

	UpdateModel(ctx workflow.Context, input *frauddetector.UpdateModelInput) (*frauddetector.UpdateModelOutput, error)
	UpdateModelAsync(ctx workflow.Context, input *frauddetector.UpdateModelInput) *FraudDetectorUpdateModelFuture

	UpdateModelVersion(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) (*frauddetector.UpdateModelVersionOutput, error)
	UpdateModelVersionAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) *FraudDetectorUpdateModelVersionFuture

	UpdateModelVersionStatus(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) (*frauddetector.UpdateModelVersionStatusOutput, error)
	UpdateModelVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) *FraudDetectorUpdateModelVersionStatusFuture

	UpdateRuleMetadata(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) (*frauddetector.UpdateRuleMetadataOutput, error)
	UpdateRuleMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) *FraudDetectorUpdateRuleMetadataFuture

	UpdateRuleVersion(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) (*frauddetector.UpdateRuleVersionOutput, error)
	UpdateRuleVersionAsync(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) *FraudDetectorUpdateRuleVersionFuture

	UpdateVariable(ctx workflow.Context, input *frauddetector.UpdateVariableInput) (*frauddetector.UpdateVariableOutput, error)
	UpdateVariableAsync(ctx workflow.Context, input *frauddetector.UpdateVariableInput) *FraudDetectorUpdateVariableFuture
}

type FraudDetectorStub struct{}

func NewFraudDetectorStub() FraudDetectorClient {
	return &FraudDetectorStub{}
}

type FraudDetectorBatchCreateVariableFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorBatchCreateVariableFuture) Get(ctx workflow.Context) (*frauddetector.BatchCreateVariableOutput, error) {
	var output frauddetector.BatchCreateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorBatchGetVariableFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorBatchGetVariableFuture) Get(ctx workflow.Context) (*frauddetector.BatchGetVariableOutput, error) {
	var output frauddetector.BatchGetVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorCreateDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorCreateDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.CreateDetectorVersionOutput, error) {
	var output frauddetector.CreateDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorCreateModelFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorCreateModelFuture) Get(ctx workflow.Context) (*frauddetector.CreateModelOutput, error) {
	var output frauddetector.CreateModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorCreateModelVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorCreateModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.CreateModelVersionOutput, error) {
	var output frauddetector.CreateModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorCreateRuleFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorCreateRuleFuture) Get(ctx workflow.Context) (*frauddetector.CreateRuleOutput, error) {
	var output frauddetector.CreateRuleOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorCreateVariableFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorCreateVariableFuture) Get(ctx workflow.Context) (*frauddetector.CreateVariableOutput, error) {
	var output frauddetector.CreateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorDeleteDetectorFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorDeleteDetectorFuture) Get(ctx workflow.Context) (*frauddetector.DeleteDetectorOutput, error) {
	var output frauddetector.DeleteDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorDeleteDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorDeleteDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.DeleteDetectorVersionOutput, error) {
	var output frauddetector.DeleteDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorDeleteEventFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorDeleteEventFuture) Get(ctx workflow.Context) (*frauddetector.DeleteEventOutput, error) {
	var output frauddetector.DeleteEventOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorDeleteRuleFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorDeleteRuleFuture) Get(ctx workflow.Context) (*frauddetector.DeleteRuleOutput, error) {
	var output frauddetector.DeleteRuleOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorDescribeDetectorFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorDescribeDetectorFuture) Get(ctx workflow.Context) (*frauddetector.DescribeDetectorOutput, error) {
	var output frauddetector.DescribeDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorDescribeModelVersionsFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorDescribeModelVersionsFuture) Get(ctx workflow.Context) (*frauddetector.DescribeModelVersionsOutput, error) {
	var output frauddetector.DescribeModelVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.GetDetectorVersionOutput, error) {
	var output frauddetector.GetDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetDetectorsFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetDetectorsFuture) Get(ctx workflow.Context) (*frauddetector.GetDetectorsOutput, error) {
	var output frauddetector.GetDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetEntityTypesFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetEntityTypesFuture) Get(ctx workflow.Context) (*frauddetector.GetEntityTypesOutput, error) {
	var output frauddetector.GetEntityTypesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetEventPredictionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetEventPredictionFuture) Get(ctx workflow.Context) (*frauddetector.GetEventPredictionOutput, error) {
	var output frauddetector.GetEventPredictionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetEventTypesFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetEventTypesFuture) Get(ctx workflow.Context) (*frauddetector.GetEventTypesOutput, error) {
	var output frauddetector.GetEventTypesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetExternalModelsFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetExternalModelsFuture) Get(ctx workflow.Context) (*frauddetector.GetExternalModelsOutput, error) {
	var output frauddetector.GetExternalModelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetKMSEncryptionKeyFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetKMSEncryptionKeyFuture) Get(ctx workflow.Context) (*frauddetector.GetKMSEncryptionKeyOutput, error) {
	var output frauddetector.GetKMSEncryptionKeyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetLabelsFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetLabelsFuture) Get(ctx workflow.Context) (*frauddetector.GetLabelsOutput, error) {
	var output frauddetector.GetLabelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetModelVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.GetModelVersionOutput, error) {
	var output frauddetector.GetModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetModelsFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetModelsFuture) Get(ctx workflow.Context) (*frauddetector.GetModelsOutput, error) {
	var output frauddetector.GetModelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetOutcomesFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetOutcomesFuture) Get(ctx workflow.Context) (*frauddetector.GetOutcomesOutput, error) {
	var output frauddetector.GetOutcomesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetRulesFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetRulesFuture) Get(ctx workflow.Context) (*frauddetector.GetRulesOutput, error) {
	var output frauddetector.GetRulesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorGetVariablesFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorGetVariablesFuture) Get(ctx workflow.Context) (*frauddetector.GetVariablesOutput, error) {
	var output frauddetector.GetVariablesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorListTagsForResourceFuture) Get(ctx workflow.Context) (*frauddetector.ListTagsForResourceOutput, error) {
	var output frauddetector.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutDetectorFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutDetectorFuture) Get(ctx workflow.Context) (*frauddetector.PutDetectorOutput, error) {
	var output frauddetector.PutDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutEntityTypeFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutEntityTypeFuture) Get(ctx workflow.Context) (*frauddetector.PutEntityTypeOutput, error) {
	var output frauddetector.PutEntityTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutEventTypeFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutEventTypeFuture) Get(ctx workflow.Context) (*frauddetector.PutEventTypeOutput, error) {
	var output frauddetector.PutEventTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutExternalModelFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutExternalModelFuture) Get(ctx workflow.Context) (*frauddetector.PutExternalModelOutput, error) {
	var output frauddetector.PutExternalModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutKMSEncryptionKeyFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutKMSEncryptionKeyFuture) Get(ctx workflow.Context) (*frauddetector.PutKMSEncryptionKeyOutput, error) {
	var output frauddetector.PutKMSEncryptionKeyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutLabelFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutLabelFuture) Get(ctx workflow.Context) (*frauddetector.PutLabelOutput, error) {
	var output frauddetector.PutLabelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorPutOutcomeFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorPutOutcomeFuture) Get(ctx workflow.Context) (*frauddetector.PutOutcomeOutput, error) {
	var output frauddetector.PutOutcomeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorTagResourceFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorTagResourceFuture) Get(ctx workflow.Context) (*frauddetector.TagResourceOutput, error) {
	var output frauddetector.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUntagResourceFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUntagResourceFuture) Get(ctx workflow.Context) (*frauddetector.UntagResourceOutput, error) {
	var output frauddetector.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionOutput, error) {
	var output frauddetector.UpdateDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateDetectorVersionMetadataFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateDetectorVersionMetadataFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {
	var output frauddetector.UpdateDetectorVersionMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateDetectorVersionStatusFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateDetectorVersionStatusFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {
	var output frauddetector.UpdateDetectorVersionStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateModelFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateModelFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelOutput, error) {
	var output frauddetector.UpdateModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateModelVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelVersionOutput, error) {
	var output frauddetector.UpdateModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateModelVersionStatusFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateModelVersionStatusFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelVersionStatusOutput, error) {
	var output frauddetector.UpdateModelVersionStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateRuleMetadataFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateRuleMetadataFuture) Get(ctx workflow.Context) (*frauddetector.UpdateRuleMetadataOutput, error) {
	var output frauddetector.UpdateRuleMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateRuleVersionFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateRuleVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateRuleVersionOutput, error) {
	var output frauddetector.UpdateRuleVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FraudDetectorUpdateVariableFuture struct {
	Future workflow.Future
}

func (r *FraudDetectorUpdateVariableFuture) Get(ctx workflow.Context) (*frauddetector.UpdateVariableOutput, error) {
	var output frauddetector.UpdateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) BatchCreateVariable(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) (*frauddetector.BatchCreateVariableOutput, error) {
	var output frauddetector.BatchCreateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchCreateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) BatchCreateVariableAsync(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) *FraudDetectorBatchCreateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchCreateVariable", input)
	return &FraudDetectorBatchCreateVariableFuture{Future: future}
}

func (a *FraudDetectorStub) BatchGetVariable(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) (*frauddetector.BatchGetVariableOutput, error) {
	var output frauddetector.BatchGetVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchGetVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) BatchGetVariableAsync(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) *FraudDetectorBatchGetVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchGetVariable", input)
	return &FraudDetectorBatchGetVariableFuture{Future: future}
}

func (a *FraudDetectorStub) CreateDetectorVersion(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) (*frauddetector.CreateDetectorVersionOutput, error) {
	var output frauddetector.CreateDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) *FraudDetectorCreateDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateDetectorVersion", input)
	return &FraudDetectorCreateDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) CreateModel(ctx workflow.Context, input *frauddetector.CreateModelInput) (*frauddetector.CreateModelOutput, error) {
	var output frauddetector.CreateModelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateModelAsync(ctx workflow.Context, input *frauddetector.CreateModelInput) *FraudDetectorCreateModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModel", input)
	return &FraudDetectorCreateModelFuture{Future: future}
}

func (a *FraudDetectorStub) CreateModelVersion(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) (*frauddetector.CreateModelVersionOutput, error) {
	var output frauddetector.CreateModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateModelVersionAsync(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) *FraudDetectorCreateModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModelVersion", input)
	return &FraudDetectorCreateModelVersionFuture{Future: future}
}

func (a *FraudDetectorStub) CreateRule(ctx workflow.Context, input *frauddetector.CreateRuleInput) (*frauddetector.CreateRuleOutput, error) {
	var output frauddetector.CreateRuleOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateRule", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateRuleAsync(ctx workflow.Context, input *frauddetector.CreateRuleInput) *FraudDetectorCreateRuleFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateRule", input)
	return &FraudDetectorCreateRuleFuture{Future: future}
}

func (a *FraudDetectorStub) CreateVariable(ctx workflow.Context, input *frauddetector.CreateVariableInput) (*frauddetector.CreateVariableOutput, error) {
	var output frauddetector.CreateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateVariableAsync(ctx workflow.Context, input *frauddetector.CreateVariableInput) *FraudDetectorCreateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateVariable", input)
	return &FraudDetectorCreateVariableFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteDetector(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) (*frauddetector.DeleteDetectorOutput, error) {
	var output frauddetector.DeleteDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteDetectorAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) *FraudDetectorDeleteDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetector", input)
	return &FraudDetectorDeleteDetectorFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteDetectorVersion(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) (*frauddetector.DeleteDetectorVersionOutput, error) {
	var output frauddetector.DeleteDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteDetectorVersionAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) *FraudDetectorDeleteDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetectorVersion", input)
	return &FraudDetectorDeleteDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteEvent(ctx workflow.Context, input *frauddetector.DeleteEventInput) (*frauddetector.DeleteEventOutput, error) {
	var output frauddetector.DeleteEventOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteEvent", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteEventAsync(ctx workflow.Context, input *frauddetector.DeleteEventInput) *FraudDetectorDeleteEventFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteEvent", input)
	return &FraudDetectorDeleteEventFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteRule(ctx workflow.Context, input *frauddetector.DeleteRuleInput) (*frauddetector.DeleteRuleOutput, error) {
	var output frauddetector.DeleteRuleOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteRule", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteRuleAsync(ctx workflow.Context, input *frauddetector.DeleteRuleInput) *FraudDetectorDeleteRuleFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteRule", input)
	return &FraudDetectorDeleteRuleFuture{Future: future}
}

func (a *FraudDetectorStub) DescribeDetector(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) (*frauddetector.DescribeDetectorOutput, error) {
	var output frauddetector.DescribeDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DescribeDetectorAsync(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) *FraudDetectorDescribeDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeDetector", input)
	return &FraudDetectorDescribeDetectorFuture{Future: future}
}

func (a *FraudDetectorStub) DescribeModelVersions(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) (*frauddetector.DescribeModelVersionsOutput, error) {
	var output frauddetector.DescribeModelVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeModelVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DescribeModelVersionsAsync(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) *FraudDetectorDescribeModelVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeModelVersions", input)
	return &FraudDetectorDescribeModelVersionsFuture{Future: future}
}

func (a *FraudDetectorStub) GetDetectorVersion(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) (*frauddetector.GetDetectorVersionOutput, error) {
	var output frauddetector.GetDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetDetectorVersionAsync(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) *FraudDetectorGetDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectorVersion", input)
	return &FraudDetectorGetDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) GetDetectors(ctx workflow.Context, input *frauddetector.GetDetectorsInput) (*frauddetector.GetDetectorsOutput, error) {
	var output frauddetector.GetDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetDetectorsAsync(ctx workflow.Context, input *frauddetector.GetDetectorsInput) *FraudDetectorGetDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectors", input)
	return &FraudDetectorGetDetectorsFuture{Future: future}
}

func (a *FraudDetectorStub) GetEntityTypes(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) (*frauddetector.GetEntityTypesOutput, error) {
	var output frauddetector.GetEntityTypesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEntityTypes", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetEntityTypesAsync(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) *FraudDetectorGetEntityTypesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEntityTypes", input)
	return &FraudDetectorGetEntityTypesFuture{Future: future}
}

func (a *FraudDetectorStub) GetEventPrediction(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) (*frauddetector.GetEventPredictionOutput, error) {
	var output frauddetector.GetEventPredictionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventPrediction", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetEventPredictionAsync(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) *FraudDetectorGetEventPredictionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventPrediction", input)
	return &FraudDetectorGetEventPredictionFuture{Future: future}
}

func (a *FraudDetectorStub) GetEventTypes(ctx workflow.Context, input *frauddetector.GetEventTypesInput) (*frauddetector.GetEventTypesOutput, error) {
	var output frauddetector.GetEventTypesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventTypes", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetEventTypesAsync(ctx workflow.Context, input *frauddetector.GetEventTypesInput) *FraudDetectorGetEventTypesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventTypes", input)
	return &FraudDetectorGetEventTypesFuture{Future: future}
}

func (a *FraudDetectorStub) GetExternalModels(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) (*frauddetector.GetExternalModelsOutput, error) {
	var output frauddetector.GetExternalModelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetExternalModels", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetExternalModelsAsync(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) *FraudDetectorGetExternalModelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetExternalModels", input)
	return &FraudDetectorGetExternalModelsFuture{Future: future}
}

func (a *FraudDetectorStub) GetKMSEncryptionKey(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) (*frauddetector.GetKMSEncryptionKeyOutput, error) {
	var output frauddetector.GetKMSEncryptionKeyOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetKMSEncryptionKey", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) *FraudDetectorGetKMSEncryptionKeyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetKMSEncryptionKey", input)
	return &FraudDetectorGetKMSEncryptionKeyFuture{Future: future}
}

func (a *FraudDetectorStub) GetLabels(ctx workflow.Context, input *frauddetector.GetLabelsInput) (*frauddetector.GetLabelsOutput, error) {
	var output frauddetector.GetLabelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetLabels", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetLabelsAsync(ctx workflow.Context, input *frauddetector.GetLabelsInput) *FraudDetectorGetLabelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetLabels", input)
	return &FraudDetectorGetLabelsFuture{Future: future}
}

func (a *FraudDetectorStub) GetModelVersion(ctx workflow.Context, input *frauddetector.GetModelVersionInput) (*frauddetector.GetModelVersionOutput, error) {
	var output frauddetector.GetModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetModelVersionAsync(ctx workflow.Context, input *frauddetector.GetModelVersionInput) *FraudDetectorGetModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModelVersion", input)
	return &FraudDetectorGetModelVersionFuture{Future: future}
}

func (a *FraudDetectorStub) GetModels(ctx workflow.Context, input *frauddetector.GetModelsInput) (*frauddetector.GetModelsOutput, error) {
	var output frauddetector.GetModelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModels", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetModelsAsync(ctx workflow.Context, input *frauddetector.GetModelsInput) *FraudDetectorGetModelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModels", input)
	return &FraudDetectorGetModelsFuture{Future: future}
}

func (a *FraudDetectorStub) GetOutcomes(ctx workflow.Context, input *frauddetector.GetOutcomesInput) (*frauddetector.GetOutcomesOutput, error) {
	var output frauddetector.GetOutcomesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetOutcomes", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetOutcomesAsync(ctx workflow.Context, input *frauddetector.GetOutcomesInput) *FraudDetectorGetOutcomesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetOutcomes", input)
	return &FraudDetectorGetOutcomesFuture{Future: future}
}

func (a *FraudDetectorStub) GetRules(ctx workflow.Context, input *frauddetector.GetRulesInput) (*frauddetector.GetRulesOutput, error) {
	var output frauddetector.GetRulesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetRules", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetRulesAsync(ctx workflow.Context, input *frauddetector.GetRulesInput) *FraudDetectorGetRulesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetRules", input)
	return &FraudDetectorGetRulesFuture{Future: future}
}

func (a *FraudDetectorStub) GetVariables(ctx workflow.Context, input *frauddetector.GetVariablesInput) (*frauddetector.GetVariablesOutput, error) {
	var output frauddetector.GetVariablesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetVariables", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetVariablesAsync(ctx workflow.Context, input *frauddetector.GetVariablesInput) *FraudDetectorGetVariablesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetVariables", input)
	return &FraudDetectorGetVariablesFuture{Future: future}
}

func (a *FraudDetectorStub) ListTagsForResource(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) (*frauddetector.ListTagsForResourceOutput, error) {
	var output frauddetector.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) ListTagsForResourceAsync(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) *FraudDetectorListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.ListTagsForResource", input)
	return &FraudDetectorListTagsForResourceFuture{Future: future}
}

func (a *FraudDetectorStub) PutDetector(ctx workflow.Context, input *frauddetector.PutDetectorInput) (*frauddetector.PutDetectorOutput, error) {
	var output frauddetector.PutDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutDetectorAsync(ctx workflow.Context, input *frauddetector.PutDetectorInput) *FraudDetectorPutDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutDetector", input)
	return &FraudDetectorPutDetectorFuture{Future: future}
}

func (a *FraudDetectorStub) PutEntityType(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) (*frauddetector.PutEntityTypeOutput, error) {
	var output frauddetector.PutEntityTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEntityType", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutEntityTypeAsync(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) *FraudDetectorPutEntityTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEntityType", input)
	return &FraudDetectorPutEntityTypeFuture{Future: future}
}

func (a *FraudDetectorStub) PutEventType(ctx workflow.Context, input *frauddetector.PutEventTypeInput) (*frauddetector.PutEventTypeOutput, error) {
	var output frauddetector.PutEventTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEventType", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutEventTypeAsync(ctx workflow.Context, input *frauddetector.PutEventTypeInput) *FraudDetectorPutEventTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEventType", input)
	return &FraudDetectorPutEventTypeFuture{Future: future}
}

func (a *FraudDetectorStub) PutExternalModel(ctx workflow.Context, input *frauddetector.PutExternalModelInput) (*frauddetector.PutExternalModelOutput, error) {
	var output frauddetector.PutExternalModelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutExternalModel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutExternalModelAsync(ctx workflow.Context, input *frauddetector.PutExternalModelInput) *FraudDetectorPutExternalModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutExternalModel", input)
	return &FraudDetectorPutExternalModelFuture{Future: future}
}

func (a *FraudDetectorStub) PutKMSEncryptionKey(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) (*frauddetector.PutKMSEncryptionKeyOutput, error) {
	var output frauddetector.PutKMSEncryptionKeyOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutKMSEncryptionKey", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) *FraudDetectorPutKMSEncryptionKeyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutKMSEncryptionKey", input)
	return &FraudDetectorPutKMSEncryptionKeyFuture{Future: future}
}

func (a *FraudDetectorStub) PutLabel(ctx workflow.Context, input *frauddetector.PutLabelInput) (*frauddetector.PutLabelOutput, error) {
	var output frauddetector.PutLabelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutLabel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutLabelAsync(ctx workflow.Context, input *frauddetector.PutLabelInput) *FraudDetectorPutLabelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutLabel", input)
	return &FraudDetectorPutLabelFuture{Future: future}
}

func (a *FraudDetectorStub) PutOutcome(ctx workflow.Context, input *frauddetector.PutOutcomeInput) (*frauddetector.PutOutcomeOutput, error) {
	var output frauddetector.PutOutcomeOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutOutcome", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutOutcomeAsync(ctx workflow.Context, input *frauddetector.PutOutcomeInput) *FraudDetectorPutOutcomeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutOutcome", input)
	return &FraudDetectorPutOutcomeFuture{Future: future}
}

func (a *FraudDetectorStub) TagResource(ctx workflow.Context, input *frauddetector.TagResourceInput) (*frauddetector.TagResourceOutput, error) {
	var output frauddetector.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) TagResourceAsync(ctx workflow.Context, input *frauddetector.TagResourceInput) *FraudDetectorTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.TagResource", input)
	return &FraudDetectorTagResourceFuture{Future: future}
}

func (a *FraudDetectorStub) UntagResource(ctx workflow.Context, input *frauddetector.UntagResourceInput) (*frauddetector.UntagResourceOutput, error) {
	var output frauddetector.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UntagResourceAsync(ctx workflow.Context, input *frauddetector.UntagResourceInput) *FraudDetectorUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UntagResource", input)
	return &FraudDetectorUntagResourceFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateDetectorVersion(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) (*frauddetector.UpdateDetectorVersionOutput, error) {
	var output frauddetector.UpdateDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) *FraudDetectorUpdateDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersion", input)
	return &FraudDetectorUpdateDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateDetectorVersionMetadata(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {
	var output frauddetector.UpdateDetectorVersionMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateDetectorVersionMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) *FraudDetectorUpdateDetectorVersionMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionMetadata", input)
	return &FraudDetectorUpdateDetectorVersionMetadataFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateDetectorVersionStatus(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {
	var output frauddetector.UpdateDetectorVersionStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateDetectorVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) *FraudDetectorUpdateDetectorVersionStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionStatus", input)
	return &FraudDetectorUpdateDetectorVersionStatusFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateModel(ctx workflow.Context, input *frauddetector.UpdateModelInput) (*frauddetector.UpdateModelOutput, error) {
	var output frauddetector.UpdateModelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateModelAsync(ctx workflow.Context, input *frauddetector.UpdateModelInput) *FraudDetectorUpdateModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModel", input)
	return &FraudDetectorUpdateModelFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateModelVersion(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) (*frauddetector.UpdateModelVersionOutput, error) {
	var output frauddetector.UpdateModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateModelVersionAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) *FraudDetectorUpdateModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersion", input)
	return &FraudDetectorUpdateModelVersionFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateModelVersionStatus(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) (*frauddetector.UpdateModelVersionStatusOutput, error) {
	var output frauddetector.UpdateModelVersionStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersionStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateModelVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) *FraudDetectorUpdateModelVersionStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersionStatus", input)
	return &FraudDetectorUpdateModelVersionStatusFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateRuleMetadata(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) (*frauddetector.UpdateRuleMetadataOutput, error) {
	var output frauddetector.UpdateRuleMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateRuleMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) *FraudDetectorUpdateRuleMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleMetadata", input)
	return &FraudDetectorUpdateRuleMetadataFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateRuleVersion(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) (*frauddetector.UpdateRuleVersionOutput, error) {
	var output frauddetector.UpdateRuleVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateRuleVersionAsync(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) *FraudDetectorUpdateRuleVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleVersion", input)
	return &FraudDetectorUpdateRuleVersionFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateVariable(ctx workflow.Context, input *frauddetector.UpdateVariableInput) (*frauddetector.UpdateVariableOutput, error) {
	var output frauddetector.UpdateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateVariableAsync(ctx workflow.Context, input *frauddetector.UpdateVariableInput) *FraudDetectorUpdateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateVariable", input)
	return &FraudDetectorUpdateVariableFuture{Future: future}
}
