// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/frauddetector"
	"go.temporal.io/sdk/workflow"
)

type FraudDetectorClient interface {
	BatchCreateVariable(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) (*frauddetector.BatchCreateVariableOutput, error)
	BatchCreateVariableAsync(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) *FrauddetectorBatchCreateVariableFuture

	BatchGetVariable(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) (*frauddetector.BatchGetVariableOutput, error)
	BatchGetVariableAsync(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) *FrauddetectorBatchGetVariableFuture

	CreateDetectorVersion(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) (*frauddetector.CreateDetectorVersionOutput, error)
	CreateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) *FrauddetectorCreateDetectorVersionFuture

	CreateModel(ctx workflow.Context, input *frauddetector.CreateModelInput) (*frauddetector.CreateModelOutput, error)
	CreateModelAsync(ctx workflow.Context, input *frauddetector.CreateModelInput) *FrauddetectorCreateModelFuture

	CreateModelVersion(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) (*frauddetector.CreateModelVersionOutput, error)
	CreateModelVersionAsync(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) *FrauddetectorCreateModelVersionFuture

	CreateRule(ctx workflow.Context, input *frauddetector.CreateRuleInput) (*frauddetector.CreateRuleOutput, error)
	CreateRuleAsync(ctx workflow.Context, input *frauddetector.CreateRuleInput) *FrauddetectorCreateRuleFuture

	CreateVariable(ctx workflow.Context, input *frauddetector.CreateVariableInput) (*frauddetector.CreateVariableOutput, error)
	CreateVariableAsync(ctx workflow.Context, input *frauddetector.CreateVariableInput) *FrauddetectorCreateVariableFuture

	DeleteDetector(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) (*frauddetector.DeleteDetectorOutput, error)
	DeleteDetectorAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) *FrauddetectorDeleteDetectorFuture

	DeleteDetectorVersion(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) (*frauddetector.DeleteDetectorVersionOutput, error)
	DeleteDetectorVersionAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) *FrauddetectorDeleteDetectorVersionFuture

	DeleteEvent(ctx workflow.Context, input *frauddetector.DeleteEventInput) (*frauddetector.DeleteEventOutput, error)
	DeleteEventAsync(ctx workflow.Context, input *frauddetector.DeleteEventInput) *FrauddetectorDeleteEventFuture

	DeleteRule(ctx workflow.Context, input *frauddetector.DeleteRuleInput) (*frauddetector.DeleteRuleOutput, error)
	DeleteRuleAsync(ctx workflow.Context, input *frauddetector.DeleteRuleInput) *FrauddetectorDeleteRuleFuture

	DescribeDetector(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) (*frauddetector.DescribeDetectorOutput, error)
	DescribeDetectorAsync(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) *FrauddetectorDescribeDetectorFuture

	DescribeModelVersions(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) (*frauddetector.DescribeModelVersionsOutput, error)
	DescribeModelVersionsAsync(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) *FrauddetectorDescribeModelVersionsFuture

	GetDetectorVersion(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) (*frauddetector.GetDetectorVersionOutput, error)
	GetDetectorVersionAsync(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) *FrauddetectorGetDetectorVersionFuture

	GetDetectors(ctx workflow.Context, input *frauddetector.GetDetectorsInput) (*frauddetector.GetDetectorsOutput, error)
	GetDetectorsAsync(ctx workflow.Context, input *frauddetector.GetDetectorsInput) *FrauddetectorGetDetectorsFuture

	GetEntityTypes(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) (*frauddetector.GetEntityTypesOutput, error)
	GetEntityTypesAsync(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) *FrauddetectorGetEntityTypesFuture

	GetEventPrediction(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) (*frauddetector.GetEventPredictionOutput, error)
	GetEventPredictionAsync(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) *FrauddetectorGetEventPredictionFuture

	GetEventTypes(ctx workflow.Context, input *frauddetector.GetEventTypesInput) (*frauddetector.GetEventTypesOutput, error)
	GetEventTypesAsync(ctx workflow.Context, input *frauddetector.GetEventTypesInput) *FrauddetectorGetEventTypesFuture

	GetExternalModels(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) (*frauddetector.GetExternalModelsOutput, error)
	GetExternalModelsAsync(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) *FrauddetectorGetExternalModelsFuture

	GetKMSEncryptionKey(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) (*frauddetector.GetKMSEncryptionKeyOutput, error)
	GetKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) *FrauddetectorGetKMSEncryptionKeyFuture

	GetLabels(ctx workflow.Context, input *frauddetector.GetLabelsInput) (*frauddetector.GetLabelsOutput, error)
	GetLabelsAsync(ctx workflow.Context, input *frauddetector.GetLabelsInput) *FrauddetectorGetLabelsFuture

	GetModelVersion(ctx workflow.Context, input *frauddetector.GetModelVersionInput) (*frauddetector.GetModelVersionOutput, error)
	GetModelVersionAsync(ctx workflow.Context, input *frauddetector.GetModelVersionInput) *FrauddetectorGetModelVersionFuture

	GetModels(ctx workflow.Context, input *frauddetector.GetModelsInput) (*frauddetector.GetModelsOutput, error)
	GetModelsAsync(ctx workflow.Context, input *frauddetector.GetModelsInput) *FrauddetectorGetModelsFuture

	GetOutcomes(ctx workflow.Context, input *frauddetector.GetOutcomesInput) (*frauddetector.GetOutcomesOutput, error)
	GetOutcomesAsync(ctx workflow.Context, input *frauddetector.GetOutcomesInput) *FrauddetectorGetOutcomesFuture

	GetRules(ctx workflow.Context, input *frauddetector.GetRulesInput) (*frauddetector.GetRulesOutput, error)
	GetRulesAsync(ctx workflow.Context, input *frauddetector.GetRulesInput) *FrauddetectorGetRulesFuture

	GetVariables(ctx workflow.Context, input *frauddetector.GetVariablesInput) (*frauddetector.GetVariablesOutput, error)
	GetVariablesAsync(ctx workflow.Context, input *frauddetector.GetVariablesInput) *FrauddetectorGetVariablesFuture

	ListTagsForResource(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) (*frauddetector.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) *FrauddetectorListTagsForResourceFuture

	PutDetector(ctx workflow.Context, input *frauddetector.PutDetectorInput) (*frauddetector.PutDetectorOutput, error)
	PutDetectorAsync(ctx workflow.Context, input *frauddetector.PutDetectorInput) *FrauddetectorPutDetectorFuture

	PutEntityType(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) (*frauddetector.PutEntityTypeOutput, error)
	PutEntityTypeAsync(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) *FrauddetectorPutEntityTypeFuture

	PutEventType(ctx workflow.Context, input *frauddetector.PutEventTypeInput) (*frauddetector.PutEventTypeOutput, error)
	PutEventTypeAsync(ctx workflow.Context, input *frauddetector.PutEventTypeInput) *FrauddetectorPutEventTypeFuture

	PutExternalModel(ctx workflow.Context, input *frauddetector.PutExternalModelInput) (*frauddetector.PutExternalModelOutput, error)
	PutExternalModelAsync(ctx workflow.Context, input *frauddetector.PutExternalModelInput) *FrauddetectorPutExternalModelFuture

	PutKMSEncryptionKey(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) (*frauddetector.PutKMSEncryptionKeyOutput, error)
	PutKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) *FrauddetectorPutKMSEncryptionKeyFuture

	PutLabel(ctx workflow.Context, input *frauddetector.PutLabelInput) (*frauddetector.PutLabelOutput, error)
	PutLabelAsync(ctx workflow.Context, input *frauddetector.PutLabelInput) *FrauddetectorPutLabelFuture

	PutOutcome(ctx workflow.Context, input *frauddetector.PutOutcomeInput) (*frauddetector.PutOutcomeOutput, error)
	PutOutcomeAsync(ctx workflow.Context, input *frauddetector.PutOutcomeInput) *FrauddetectorPutOutcomeFuture

	TagResource(ctx workflow.Context, input *frauddetector.TagResourceInput) (*frauddetector.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *frauddetector.TagResourceInput) *FrauddetectorTagResourceFuture

	UntagResource(ctx workflow.Context, input *frauddetector.UntagResourceInput) (*frauddetector.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *frauddetector.UntagResourceInput) *FrauddetectorUntagResourceFuture

	UpdateDetectorVersion(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) (*frauddetector.UpdateDetectorVersionOutput, error)
	UpdateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) *FrauddetectorUpdateDetectorVersionFuture

	UpdateDetectorVersionMetadata(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) (*frauddetector.UpdateDetectorVersionMetadataOutput, error)
	UpdateDetectorVersionMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) *FrauddetectorUpdateDetectorVersionMetadataFuture

	UpdateDetectorVersionStatus(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) (*frauddetector.UpdateDetectorVersionStatusOutput, error)
	UpdateDetectorVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) *FrauddetectorUpdateDetectorVersionStatusFuture

	UpdateModel(ctx workflow.Context, input *frauddetector.UpdateModelInput) (*frauddetector.UpdateModelOutput, error)
	UpdateModelAsync(ctx workflow.Context, input *frauddetector.UpdateModelInput) *FrauddetectorUpdateModelFuture

	UpdateModelVersion(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) (*frauddetector.UpdateModelVersionOutput, error)
	UpdateModelVersionAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) *FrauddetectorUpdateModelVersionFuture

	UpdateModelVersionStatus(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) (*frauddetector.UpdateModelVersionStatusOutput, error)
	UpdateModelVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) *FrauddetectorUpdateModelVersionStatusFuture

	UpdateRuleMetadata(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) (*frauddetector.UpdateRuleMetadataOutput, error)
	UpdateRuleMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) *FrauddetectorUpdateRuleMetadataFuture

	UpdateRuleVersion(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) (*frauddetector.UpdateRuleVersionOutput, error)
	UpdateRuleVersionAsync(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) *FrauddetectorUpdateRuleVersionFuture

	UpdateVariable(ctx workflow.Context, input *frauddetector.UpdateVariableInput) (*frauddetector.UpdateVariableOutput, error)
	UpdateVariableAsync(ctx workflow.Context, input *frauddetector.UpdateVariableInput) *FrauddetectorUpdateVariableFuture
}

type FraudDetectorStub struct{}

func NewFraudDetectorStub() FraudDetectorClient {
	return &FraudDetectorStub{}
}

type FrauddetectorBatchCreateVariableFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorBatchCreateVariableFuture) Get(ctx workflow.Context) (*frauddetector.BatchCreateVariableOutput, error) {
	var output frauddetector.BatchCreateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorBatchGetVariableFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorBatchGetVariableFuture) Get(ctx workflow.Context) (*frauddetector.BatchGetVariableOutput, error) {
	var output frauddetector.BatchGetVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorCreateDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorCreateDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.CreateDetectorVersionOutput, error) {
	var output frauddetector.CreateDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorCreateModelFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorCreateModelFuture) Get(ctx workflow.Context) (*frauddetector.CreateModelOutput, error) {
	var output frauddetector.CreateModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorCreateModelVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorCreateModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.CreateModelVersionOutput, error) {
	var output frauddetector.CreateModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorCreateRuleFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorCreateRuleFuture) Get(ctx workflow.Context) (*frauddetector.CreateRuleOutput, error) {
	var output frauddetector.CreateRuleOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorCreateVariableFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorCreateVariableFuture) Get(ctx workflow.Context) (*frauddetector.CreateVariableOutput, error) {
	var output frauddetector.CreateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorDeleteDetectorFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorDeleteDetectorFuture) Get(ctx workflow.Context) (*frauddetector.DeleteDetectorOutput, error) {
	var output frauddetector.DeleteDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorDeleteDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorDeleteDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.DeleteDetectorVersionOutput, error) {
	var output frauddetector.DeleteDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorDeleteEventFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorDeleteEventFuture) Get(ctx workflow.Context) (*frauddetector.DeleteEventOutput, error) {
	var output frauddetector.DeleteEventOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorDeleteRuleFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorDeleteRuleFuture) Get(ctx workflow.Context) (*frauddetector.DeleteRuleOutput, error) {
	var output frauddetector.DeleteRuleOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorDescribeDetectorFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorDescribeDetectorFuture) Get(ctx workflow.Context) (*frauddetector.DescribeDetectorOutput, error) {
	var output frauddetector.DescribeDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorDescribeModelVersionsFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorDescribeModelVersionsFuture) Get(ctx workflow.Context) (*frauddetector.DescribeModelVersionsOutput, error) {
	var output frauddetector.DescribeModelVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.GetDetectorVersionOutput, error) {
	var output frauddetector.GetDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetDetectorsFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetDetectorsFuture) Get(ctx workflow.Context) (*frauddetector.GetDetectorsOutput, error) {
	var output frauddetector.GetDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetEntityTypesFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetEntityTypesFuture) Get(ctx workflow.Context) (*frauddetector.GetEntityTypesOutput, error) {
	var output frauddetector.GetEntityTypesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetEventPredictionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetEventPredictionFuture) Get(ctx workflow.Context) (*frauddetector.GetEventPredictionOutput, error) {
	var output frauddetector.GetEventPredictionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetEventTypesFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetEventTypesFuture) Get(ctx workflow.Context) (*frauddetector.GetEventTypesOutput, error) {
	var output frauddetector.GetEventTypesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetExternalModelsFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetExternalModelsFuture) Get(ctx workflow.Context) (*frauddetector.GetExternalModelsOutput, error) {
	var output frauddetector.GetExternalModelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetKMSEncryptionKeyFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetKMSEncryptionKeyFuture) Get(ctx workflow.Context) (*frauddetector.GetKMSEncryptionKeyOutput, error) {
	var output frauddetector.GetKMSEncryptionKeyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetLabelsFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetLabelsFuture) Get(ctx workflow.Context) (*frauddetector.GetLabelsOutput, error) {
	var output frauddetector.GetLabelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetModelVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.GetModelVersionOutput, error) {
	var output frauddetector.GetModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetModelsFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetModelsFuture) Get(ctx workflow.Context) (*frauddetector.GetModelsOutput, error) {
	var output frauddetector.GetModelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetOutcomesFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetOutcomesFuture) Get(ctx workflow.Context) (*frauddetector.GetOutcomesOutput, error) {
	var output frauddetector.GetOutcomesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetRulesFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetRulesFuture) Get(ctx workflow.Context) (*frauddetector.GetRulesOutput, error) {
	var output frauddetector.GetRulesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorGetVariablesFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorGetVariablesFuture) Get(ctx workflow.Context) (*frauddetector.GetVariablesOutput, error) {
	var output frauddetector.GetVariablesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorListTagsForResourceFuture) Get(ctx workflow.Context) (*frauddetector.ListTagsForResourceOutput, error) {
	var output frauddetector.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutDetectorFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutDetectorFuture) Get(ctx workflow.Context) (*frauddetector.PutDetectorOutput, error) {
	var output frauddetector.PutDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutEntityTypeFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutEntityTypeFuture) Get(ctx workflow.Context) (*frauddetector.PutEntityTypeOutput, error) {
	var output frauddetector.PutEntityTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutEventTypeFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutEventTypeFuture) Get(ctx workflow.Context) (*frauddetector.PutEventTypeOutput, error) {
	var output frauddetector.PutEventTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutExternalModelFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutExternalModelFuture) Get(ctx workflow.Context) (*frauddetector.PutExternalModelOutput, error) {
	var output frauddetector.PutExternalModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutKMSEncryptionKeyFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutKMSEncryptionKeyFuture) Get(ctx workflow.Context) (*frauddetector.PutKMSEncryptionKeyOutput, error) {
	var output frauddetector.PutKMSEncryptionKeyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutLabelFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutLabelFuture) Get(ctx workflow.Context) (*frauddetector.PutLabelOutput, error) {
	var output frauddetector.PutLabelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorPutOutcomeFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorPutOutcomeFuture) Get(ctx workflow.Context) (*frauddetector.PutOutcomeOutput, error) {
	var output frauddetector.PutOutcomeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorTagResourceFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorTagResourceFuture) Get(ctx workflow.Context) (*frauddetector.TagResourceOutput, error) {
	var output frauddetector.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUntagResourceFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUntagResourceFuture) Get(ctx workflow.Context) (*frauddetector.UntagResourceOutput, error) {
	var output frauddetector.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateDetectorVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionOutput, error) {
	var output frauddetector.UpdateDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateDetectorVersionMetadataFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateDetectorVersionMetadataFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {
	var output frauddetector.UpdateDetectorVersionMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateDetectorVersionStatusFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateDetectorVersionStatusFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {
	var output frauddetector.UpdateDetectorVersionStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateModelFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateModelFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelOutput, error) {
	var output frauddetector.UpdateModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateModelVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelVersionOutput, error) {
	var output frauddetector.UpdateModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateModelVersionStatusFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateModelVersionStatusFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelVersionStatusOutput, error) {
	var output frauddetector.UpdateModelVersionStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateRuleMetadataFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateRuleMetadataFuture) Get(ctx workflow.Context) (*frauddetector.UpdateRuleMetadataOutput, error) {
	var output frauddetector.UpdateRuleMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateRuleVersionFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateRuleVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateRuleVersionOutput, error) {
	var output frauddetector.UpdateRuleVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type FrauddetectorUpdateVariableFuture struct {
	Future workflow.Future
}

func (r *FrauddetectorUpdateVariableFuture) Get(ctx workflow.Context) (*frauddetector.UpdateVariableOutput, error) {
	var output frauddetector.UpdateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) BatchCreateVariable(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) (*frauddetector.BatchCreateVariableOutput, error) {
	var output frauddetector.BatchCreateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchCreateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) BatchCreateVariableAsync(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) *FrauddetectorBatchCreateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchCreateVariable", input)
	return &FrauddetectorBatchCreateVariableFuture{Future: future}
}

func (a *FraudDetectorStub) BatchGetVariable(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) (*frauddetector.BatchGetVariableOutput, error) {
	var output frauddetector.BatchGetVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchGetVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) BatchGetVariableAsync(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) *FrauddetectorBatchGetVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.BatchGetVariable", input)
	return &FrauddetectorBatchGetVariableFuture{Future: future}
}

func (a *FraudDetectorStub) CreateDetectorVersion(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) (*frauddetector.CreateDetectorVersionOutput, error) {
	var output frauddetector.CreateDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) *FrauddetectorCreateDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateDetectorVersion", input)
	return &FrauddetectorCreateDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) CreateModel(ctx workflow.Context, input *frauddetector.CreateModelInput) (*frauddetector.CreateModelOutput, error) {
	var output frauddetector.CreateModelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateModelAsync(ctx workflow.Context, input *frauddetector.CreateModelInput) *FrauddetectorCreateModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModel", input)
	return &FrauddetectorCreateModelFuture{Future: future}
}

func (a *FraudDetectorStub) CreateModelVersion(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) (*frauddetector.CreateModelVersionOutput, error) {
	var output frauddetector.CreateModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateModelVersionAsync(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) *FrauddetectorCreateModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateModelVersion", input)
	return &FrauddetectorCreateModelVersionFuture{Future: future}
}

func (a *FraudDetectorStub) CreateRule(ctx workflow.Context, input *frauddetector.CreateRuleInput) (*frauddetector.CreateRuleOutput, error) {
	var output frauddetector.CreateRuleOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateRule", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateRuleAsync(ctx workflow.Context, input *frauddetector.CreateRuleInput) *FrauddetectorCreateRuleFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateRule", input)
	return &FrauddetectorCreateRuleFuture{Future: future}
}

func (a *FraudDetectorStub) CreateVariable(ctx workflow.Context, input *frauddetector.CreateVariableInput) (*frauddetector.CreateVariableOutput, error) {
	var output frauddetector.CreateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) CreateVariableAsync(ctx workflow.Context, input *frauddetector.CreateVariableInput) *FrauddetectorCreateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.CreateVariable", input)
	return &FrauddetectorCreateVariableFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteDetector(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) (*frauddetector.DeleteDetectorOutput, error) {
	var output frauddetector.DeleteDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteDetectorAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) *FrauddetectorDeleteDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetector", input)
	return &FrauddetectorDeleteDetectorFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteDetectorVersion(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) (*frauddetector.DeleteDetectorVersionOutput, error) {
	var output frauddetector.DeleteDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteDetectorVersionAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) *FrauddetectorDeleteDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteDetectorVersion", input)
	return &FrauddetectorDeleteDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteEvent(ctx workflow.Context, input *frauddetector.DeleteEventInput) (*frauddetector.DeleteEventOutput, error) {
	var output frauddetector.DeleteEventOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteEvent", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteEventAsync(ctx workflow.Context, input *frauddetector.DeleteEventInput) *FrauddetectorDeleteEventFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteEvent", input)
	return &FrauddetectorDeleteEventFuture{Future: future}
}

func (a *FraudDetectorStub) DeleteRule(ctx workflow.Context, input *frauddetector.DeleteRuleInput) (*frauddetector.DeleteRuleOutput, error) {
	var output frauddetector.DeleteRuleOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteRule", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DeleteRuleAsync(ctx workflow.Context, input *frauddetector.DeleteRuleInput) *FrauddetectorDeleteRuleFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DeleteRule", input)
	return &FrauddetectorDeleteRuleFuture{Future: future}
}

func (a *FraudDetectorStub) DescribeDetector(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) (*frauddetector.DescribeDetectorOutput, error) {
	var output frauddetector.DescribeDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DescribeDetectorAsync(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) *FrauddetectorDescribeDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeDetector", input)
	return &FrauddetectorDescribeDetectorFuture{Future: future}
}

func (a *FraudDetectorStub) DescribeModelVersions(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) (*frauddetector.DescribeModelVersionsOutput, error) {
	var output frauddetector.DescribeModelVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeModelVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) DescribeModelVersionsAsync(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) *FrauddetectorDescribeModelVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.DescribeModelVersions", input)
	return &FrauddetectorDescribeModelVersionsFuture{Future: future}
}

func (a *FraudDetectorStub) GetDetectorVersion(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) (*frauddetector.GetDetectorVersionOutput, error) {
	var output frauddetector.GetDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetDetectorVersionAsync(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) *FrauddetectorGetDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectorVersion", input)
	return &FrauddetectorGetDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) GetDetectors(ctx workflow.Context, input *frauddetector.GetDetectorsInput) (*frauddetector.GetDetectorsOutput, error) {
	var output frauddetector.GetDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetDetectorsAsync(ctx workflow.Context, input *frauddetector.GetDetectorsInput) *FrauddetectorGetDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetDetectors", input)
	return &FrauddetectorGetDetectorsFuture{Future: future}
}

func (a *FraudDetectorStub) GetEntityTypes(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) (*frauddetector.GetEntityTypesOutput, error) {
	var output frauddetector.GetEntityTypesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEntityTypes", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetEntityTypesAsync(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) *FrauddetectorGetEntityTypesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEntityTypes", input)
	return &FrauddetectorGetEntityTypesFuture{Future: future}
}

func (a *FraudDetectorStub) GetEventPrediction(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) (*frauddetector.GetEventPredictionOutput, error) {
	var output frauddetector.GetEventPredictionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventPrediction", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetEventPredictionAsync(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) *FrauddetectorGetEventPredictionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventPrediction", input)
	return &FrauddetectorGetEventPredictionFuture{Future: future}
}

func (a *FraudDetectorStub) GetEventTypes(ctx workflow.Context, input *frauddetector.GetEventTypesInput) (*frauddetector.GetEventTypesOutput, error) {
	var output frauddetector.GetEventTypesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventTypes", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetEventTypesAsync(ctx workflow.Context, input *frauddetector.GetEventTypesInput) *FrauddetectorGetEventTypesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetEventTypes", input)
	return &FrauddetectorGetEventTypesFuture{Future: future}
}

func (a *FraudDetectorStub) GetExternalModels(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) (*frauddetector.GetExternalModelsOutput, error) {
	var output frauddetector.GetExternalModelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetExternalModels", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetExternalModelsAsync(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) *FrauddetectorGetExternalModelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetExternalModels", input)
	return &FrauddetectorGetExternalModelsFuture{Future: future}
}

func (a *FraudDetectorStub) GetKMSEncryptionKey(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) (*frauddetector.GetKMSEncryptionKeyOutput, error) {
	var output frauddetector.GetKMSEncryptionKeyOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetKMSEncryptionKey", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) *FrauddetectorGetKMSEncryptionKeyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetKMSEncryptionKey", input)
	return &FrauddetectorGetKMSEncryptionKeyFuture{Future: future}
}

func (a *FraudDetectorStub) GetLabels(ctx workflow.Context, input *frauddetector.GetLabelsInput) (*frauddetector.GetLabelsOutput, error) {
	var output frauddetector.GetLabelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetLabels", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetLabelsAsync(ctx workflow.Context, input *frauddetector.GetLabelsInput) *FrauddetectorGetLabelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetLabels", input)
	return &FrauddetectorGetLabelsFuture{Future: future}
}

func (a *FraudDetectorStub) GetModelVersion(ctx workflow.Context, input *frauddetector.GetModelVersionInput) (*frauddetector.GetModelVersionOutput, error) {
	var output frauddetector.GetModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetModelVersionAsync(ctx workflow.Context, input *frauddetector.GetModelVersionInput) *FrauddetectorGetModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModelVersion", input)
	return &FrauddetectorGetModelVersionFuture{Future: future}
}

func (a *FraudDetectorStub) GetModels(ctx workflow.Context, input *frauddetector.GetModelsInput) (*frauddetector.GetModelsOutput, error) {
	var output frauddetector.GetModelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModels", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetModelsAsync(ctx workflow.Context, input *frauddetector.GetModelsInput) *FrauddetectorGetModelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetModels", input)
	return &FrauddetectorGetModelsFuture{Future: future}
}

func (a *FraudDetectorStub) GetOutcomes(ctx workflow.Context, input *frauddetector.GetOutcomesInput) (*frauddetector.GetOutcomesOutput, error) {
	var output frauddetector.GetOutcomesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetOutcomes", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetOutcomesAsync(ctx workflow.Context, input *frauddetector.GetOutcomesInput) *FrauddetectorGetOutcomesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetOutcomes", input)
	return &FrauddetectorGetOutcomesFuture{Future: future}
}

func (a *FraudDetectorStub) GetRules(ctx workflow.Context, input *frauddetector.GetRulesInput) (*frauddetector.GetRulesOutput, error) {
	var output frauddetector.GetRulesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetRules", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetRulesAsync(ctx workflow.Context, input *frauddetector.GetRulesInput) *FrauddetectorGetRulesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetRules", input)
	return &FrauddetectorGetRulesFuture{Future: future}
}

func (a *FraudDetectorStub) GetVariables(ctx workflow.Context, input *frauddetector.GetVariablesInput) (*frauddetector.GetVariablesOutput, error) {
	var output frauddetector.GetVariablesOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetVariables", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) GetVariablesAsync(ctx workflow.Context, input *frauddetector.GetVariablesInput) *FrauddetectorGetVariablesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.GetVariables", input)
	return &FrauddetectorGetVariablesFuture{Future: future}
}

func (a *FraudDetectorStub) ListTagsForResource(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) (*frauddetector.ListTagsForResourceOutput, error) {
	var output frauddetector.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) ListTagsForResourceAsync(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) *FrauddetectorListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.ListTagsForResource", input)
	return &FrauddetectorListTagsForResourceFuture{Future: future}
}

func (a *FraudDetectorStub) PutDetector(ctx workflow.Context, input *frauddetector.PutDetectorInput) (*frauddetector.PutDetectorOutput, error) {
	var output frauddetector.PutDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutDetectorAsync(ctx workflow.Context, input *frauddetector.PutDetectorInput) *FrauddetectorPutDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutDetector", input)
	return &FrauddetectorPutDetectorFuture{Future: future}
}

func (a *FraudDetectorStub) PutEntityType(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) (*frauddetector.PutEntityTypeOutput, error) {
	var output frauddetector.PutEntityTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEntityType", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutEntityTypeAsync(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) *FrauddetectorPutEntityTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEntityType", input)
	return &FrauddetectorPutEntityTypeFuture{Future: future}
}

func (a *FraudDetectorStub) PutEventType(ctx workflow.Context, input *frauddetector.PutEventTypeInput) (*frauddetector.PutEventTypeOutput, error) {
	var output frauddetector.PutEventTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEventType", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutEventTypeAsync(ctx workflow.Context, input *frauddetector.PutEventTypeInput) *FrauddetectorPutEventTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutEventType", input)
	return &FrauddetectorPutEventTypeFuture{Future: future}
}

func (a *FraudDetectorStub) PutExternalModel(ctx workflow.Context, input *frauddetector.PutExternalModelInput) (*frauddetector.PutExternalModelOutput, error) {
	var output frauddetector.PutExternalModelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutExternalModel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutExternalModelAsync(ctx workflow.Context, input *frauddetector.PutExternalModelInput) *FrauddetectorPutExternalModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutExternalModel", input)
	return &FrauddetectorPutExternalModelFuture{Future: future}
}

func (a *FraudDetectorStub) PutKMSEncryptionKey(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) (*frauddetector.PutKMSEncryptionKeyOutput, error) {
	var output frauddetector.PutKMSEncryptionKeyOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutKMSEncryptionKey", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) *FrauddetectorPutKMSEncryptionKeyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutKMSEncryptionKey", input)
	return &FrauddetectorPutKMSEncryptionKeyFuture{Future: future}
}

func (a *FraudDetectorStub) PutLabel(ctx workflow.Context, input *frauddetector.PutLabelInput) (*frauddetector.PutLabelOutput, error) {
	var output frauddetector.PutLabelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutLabel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutLabelAsync(ctx workflow.Context, input *frauddetector.PutLabelInput) *FrauddetectorPutLabelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutLabel", input)
	return &FrauddetectorPutLabelFuture{Future: future}
}

func (a *FraudDetectorStub) PutOutcome(ctx workflow.Context, input *frauddetector.PutOutcomeInput) (*frauddetector.PutOutcomeOutput, error) {
	var output frauddetector.PutOutcomeOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutOutcome", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) PutOutcomeAsync(ctx workflow.Context, input *frauddetector.PutOutcomeInput) *FrauddetectorPutOutcomeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.PutOutcome", input)
	return &FrauddetectorPutOutcomeFuture{Future: future}
}

func (a *FraudDetectorStub) TagResource(ctx workflow.Context, input *frauddetector.TagResourceInput) (*frauddetector.TagResourceOutput, error) {
	var output frauddetector.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) TagResourceAsync(ctx workflow.Context, input *frauddetector.TagResourceInput) *FrauddetectorTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.TagResource", input)
	return &FrauddetectorTagResourceFuture{Future: future}
}

func (a *FraudDetectorStub) UntagResource(ctx workflow.Context, input *frauddetector.UntagResourceInput) (*frauddetector.UntagResourceOutput, error) {
	var output frauddetector.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UntagResourceAsync(ctx workflow.Context, input *frauddetector.UntagResourceInput) *FrauddetectorUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UntagResource", input)
	return &FrauddetectorUntagResourceFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateDetectorVersion(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) (*frauddetector.UpdateDetectorVersionOutput, error) {
	var output frauddetector.UpdateDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) *FrauddetectorUpdateDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersion", input)
	return &FrauddetectorUpdateDetectorVersionFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateDetectorVersionMetadata(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {
	var output frauddetector.UpdateDetectorVersionMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateDetectorVersionMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) *FrauddetectorUpdateDetectorVersionMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionMetadata", input)
	return &FrauddetectorUpdateDetectorVersionMetadataFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateDetectorVersionStatus(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {
	var output frauddetector.UpdateDetectorVersionStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateDetectorVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) *FrauddetectorUpdateDetectorVersionStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateDetectorVersionStatus", input)
	return &FrauddetectorUpdateDetectorVersionStatusFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateModel(ctx workflow.Context, input *frauddetector.UpdateModelInput) (*frauddetector.UpdateModelOutput, error) {
	var output frauddetector.UpdateModelOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModel", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateModelAsync(ctx workflow.Context, input *frauddetector.UpdateModelInput) *FrauddetectorUpdateModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModel", input)
	return &FrauddetectorUpdateModelFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateModelVersion(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) (*frauddetector.UpdateModelVersionOutput, error) {
	var output frauddetector.UpdateModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateModelVersionAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) *FrauddetectorUpdateModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersion", input)
	return &FrauddetectorUpdateModelVersionFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateModelVersionStatus(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) (*frauddetector.UpdateModelVersionStatusOutput, error) {
	var output frauddetector.UpdateModelVersionStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersionStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateModelVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) *FrauddetectorUpdateModelVersionStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateModelVersionStatus", input)
	return &FrauddetectorUpdateModelVersionStatusFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateRuleMetadata(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) (*frauddetector.UpdateRuleMetadataOutput, error) {
	var output frauddetector.UpdateRuleMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateRuleMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) *FrauddetectorUpdateRuleMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleMetadata", input)
	return &FrauddetectorUpdateRuleMetadataFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateRuleVersion(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) (*frauddetector.UpdateRuleVersionOutput, error) {
	var output frauddetector.UpdateRuleVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateRuleVersionAsync(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) *FrauddetectorUpdateRuleVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateRuleVersion", input)
	return &FrauddetectorUpdateRuleVersionFuture{Future: future}
}

func (a *FraudDetectorStub) UpdateVariable(ctx workflow.Context, input *frauddetector.UpdateVariableInput) (*frauddetector.UpdateVariableOutput, error) {
	var output frauddetector.UpdateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *FraudDetectorStub) UpdateVariableAsync(ctx workflow.Context, input *frauddetector.UpdateVariableInput) *FrauddetectorUpdateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws.frauddetector.UpdateVariable", input)
	return &FrauddetectorUpdateVariableFuture{Future: future}
}
