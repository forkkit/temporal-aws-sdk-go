// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/iot1clickprojects"
	"go.temporal.io/sdk/workflow"
)

type IoT1ClickProjectsClient interface {
	AssociateDeviceWithPlacement(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error)
	AssociateDeviceWithPlacementAsync(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) *IoT1ClickProjectsAssociateDeviceWithPlacementFuture

	CreatePlacement(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) (*iot1clickprojects.CreatePlacementOutput, error)
	CreatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) *IoT1ClickProjectsCreatePlacementFuture

	CreateProject(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) (*iot1clickprojects.CreateProjectOutput, error)
	CreateProjectAsync(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) *IoT1ClickProjectsCreateProjectFuture

	DeletePlacement(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) (*iot1clickprojects.DeletePlacementOutput, error)
	DeletePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) *IoT1ClickProjectsDeletePlacementFuture

	DeleteProject(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) (*iot1clickprojects.DeleteProjectOutput, error)
	DeleteProjectAsync(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) *IoT1ClickProjectsDeleteProjectFuture

	DescribePlacement(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) (*iot1clickprojects.DescribePlacementOutput, error)
	DescribePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) *IoT1ClickProjectsDescribePlacementFuture

	DescribeProject(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) (*iot1clickprojects.DescribeProjectOutput, error)
	DescribeProjectAsync(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) *IoT1ClickProjectsDescribeProjectFuture

	DisassociateDeviceFromPlacement(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error)
	DisassociateDeviceFromPlacementAsync(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) *IoT1ClickProjectsDisassociateDeviceFromPlacementFuture

	GetDevicesInPlacement(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) (*iot1clickprojects.GetDevicesInPlacementOutput, error)
	GetDevicesInPlacementAsync(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) *IoT1ClickProjectsGetDevicesInPlacementFuture

	ListPlacements(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) (*iot1clickprojects.ListPlacementsOutput, error)
	ListPlacementsAsync(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) *IoT1ClickProjectsListPlacementsFuture

	ListProjects(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) (*iot1clickprojects.ListProjectsOutput, error)
	ListProjectsAsync(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) *IoT1ClickProjectsListProjectsFuture

	ListTagsForResource(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) (*iot1clickprojects.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) *IoT1ClickProjectsListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) (*iot1clickprojects.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) *IoT1ClickProjectsTagResourceFuture

	UntagResource(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) (*iot1clickprojects.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) *IoT1ClickProjectsUntagResourceFuture

	UpdatePlacement(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) (*iot1clickprojects.UpdatePlacementOutput, error)
	UpdatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) *IoT1ClickProjectsUpdatePlacementFuture

	UpdateProject(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) (*iot1clickprojects.UpdateProjectOutput, error)
	UpdateProjectAsync(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) *IoT1ClickProjectsUpdateProjectFuture
}

type IoT1ClickProjectsStub struct{}

func NewIoT1ClickProjectsStub() IoT1ClickProjectsClient {
	return &IoT1ClickProjectsStub{}
}

type IoT1ClickProjectsAssociateDeviceWithPlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsAssociateDeviceWithPlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error) {
	var output iot1clickprojects.AssociateDeviceWithPlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsCreatePlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsCreatePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.CreatePlacementOutput, error) {
	var output iot1clickprojects.CreatePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsCreateProjectFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsCreateProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.CreateProjectOutput, error) {
	var output iot1clickprojects.CreateProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsDeletePlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsDeletePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.DeletePlacementOutput, error) {
	var output iot1clickprojects.DeletePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsDeleteProjectFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsDeleteProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.DeleteProjectOutput, error) {
	var output iot1clickprojects.DeleteProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsDescribePlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsDescribePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.DescribePlacementOutput, error) {
	var output iot1clickprojects.DescribePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsDescribeProjectFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsDescribeProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.DescribeProjectOutput, error) {
	var output iot1clickprojects.DescribeProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsDisassociateDeviceFromPlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsDisassociateDeviceFromPlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error) {
	var output iot1clickprojects.DisassociateDeviceFromPlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsGetDevicesInPlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsGetDevicesInPlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.GetDevicesInPlacementOutput, error) {
	var output iot1clickprojects.GetDevicesInPlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsListPlacementsFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsListPlacementsFuture) Get(ctx workflow.Context) (*iot1clickprojects.ListPlacementsOutput, error) {
	var output iot1clickprojects.ListPlacementsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsListProjectsFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsListProjectsFuture) Get(ctx workflow.Context) (*iot1clickprojects.ListProjectsOutput, error) {
	var output iot1clickprojects.ListProjectsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsListTagsForResourceFuture) Get(ctx workflow.Context) (*iot1clickprojects.ListTagsForResourceOutput, error) {
	var output iot1clickprojects.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsTagResourceFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsTagResourceFuture) Get(ctx workflow.Context) (*iot1clickprojects.TagResourceOutput, error) {
	var output iot1clickprojects.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsUntagResourceFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsUntagResourceFuture) Get(ctx workflow.Context) (*iot1clickprojects.UntagResourceOutput, error) {
	var output iot1clickprojects.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsUpdatePlacementFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsUpdatePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.UpdatePlacementOutput, error) {
	var output iot1clickprojects.UpdatePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type IoT1ClickProjectsUpdateProjectFuture struct {
	Future workflow.Future
}

func (r *IoT1ClickProjectsUpdateProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.UpdateProjectOutput, error) {
	var output iot1clickprojects.UpdateProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) AssociateDeviceWithPlacement(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error) {
	var output iot1clickprojects.AssociateDeviceWithPlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.AssociateDeviceWithPlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) AssociateDeviceWithPlacementAsync(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) *IoT1ClickProjectsAssociateDeviceWithPlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.AssociateDeviceWithPlacement", input)
	return &IoT1ClickProjectsAssociateDeviceWithPlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) CreatePlacement(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) (*iot1clickprojects.CreatePlacementOutput, error) {
	var output iot1clickprojects.CreatePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreatePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) CreatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) *IoT1ClickProjectsCreatePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreatePlacement", input)
	return &IoT1ClickProjectsCreatePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) CreateProject(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) (*iot1clickprojects.CreateProjectOutput, error) {
	var output iot1clickprojects.CreateProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreateProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) CreateProjectAsync(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) *IoT1ClickProjectsCreateProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreateProject", input)
	return &IoT1ClickProjectsCreateProjectFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DeletePlacement(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) (*iot1clickprojects.DeletePlacementOutput, error) {
	var output iot1clickprojects.DeletePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeletePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DeletePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) *IoT1ClickProjectsDeletePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeletePlacement", input)
	return &IoT1ClickProjectsDeletePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DeleteProject(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) (*iot1clickprojects.DeleteProjectOutput, error) {
	var output iot1clickprojects.DeleteProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeleteProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DeleteProjectAsync(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) *IoT1ClickProjectsDeleteProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeleteProject", input)
	return &IoT1ClickProjectsDeleteProjectFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DescribePlacement(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) (*iot1clickprojects.DescribePlacementOutput, error) {
	var output iot1clickprojects.DescribePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DescribePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) *IoT1ClickProjectsDescribePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribePlacement", input)
	return &IoT1ClickProjectsDescribePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DescribeProject(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) (*iot1clickprojects.DescribeProjectOutput, error) {
	var output iot1clickprojects.DescribeProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribeProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DescribeProjectAsync(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) *IoT1ClickProjectsDescribeProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribeProject", input)
	return &IoT1ClickProjectsDescribeProjectFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DisassociateDeviceFromPlacement(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error) {
	var output iot1clickprojects.DisassociateDeviceFromPlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DisassociateDeviceFromPlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DisassociateDeviceFromPlacementAsync(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) *IoT1ClickProjectsDisassociateDeviceFromPlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DisassociateDeviceFromPlacement", input)
	return &IoT1ClickProjectsDisassociateDeviceFromPlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) GetDevicesInPlacement(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) (*iot1clickprojects.GetDevicesInPlacementOutput, error) {
	var output iot1clickprojects.GetDevicesInPlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.GetDevicesInPlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) GetDevicesInPlacementAsync(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) *IoT1ClickProjectsGetDevicesInPlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.GetDevicesInPlacement", input)
	return &IoT1ClickProjectsGetDevicesInPlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) ListPlacements(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) (*iot1clickprojects.ListPlacementsOutput, error) {
	var output iot1clickprojects.ListPlacementsOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListPlacements", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) ListPlacementsAsync(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) *IoT1ClickProjectsListPlacementsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListPlacements", input)
	return &IoT1ClickProjectsListPlacementsFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) ListProjects(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) (*iot1clickprojects.ListProjectsOutput, error) {
	var output iot1clickprojects.ListProjectsOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListProjects", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) ListProjectsAsync(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) *IoT1ClickProjectsListProjectsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListProjects", input)
	return &IoT1ClickProjectsListProjectsFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) ListTagsForResource(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) (*iot1clickprojects.ListTagsForResourceOutput, error) {
	var output iot1clickprojects.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) *IoT1ClickProjectsListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListTagsForResource", input)
	return &IoT1ClickProjectsListTagsForResourceFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) TagResource(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) (*iot1clickprojects.TagResourceOutput, error) {
	var output iot1clickprojects.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) TagResourceAsync(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) *IoT1ClickProjectsTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.TagResource", input)
	return &IoT1ClickProjectsTagResourceFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) UntagResource(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) (*iot1clickprojects.UntagResourceOutput, error) {
	var output iot1clickprojects.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) UntagResourceAsync(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) *IoT1ClickProjectsUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UntagResource", input)
	return &IoT1ClickProjectsUntagResourceFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) UpdatePlacement(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) (*iot1clickprojects.UpdatePlacementOutput, error) {
	var output iot1clickprojects.UpdatePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdatePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) UpdatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) *IoT1ClickProjectsUpdatePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdatePlacement", input)
	return &IoT1ClickProjectsUpdatePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) UpdateProject(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) (*iot1clickprojects.UpdateProjectOutput, error) {
	var output iot1clickprojects.UpdateProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdateProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) UpdateProjectAsync(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) *IoT1ClickProjectsUpdateProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdateProject", input)
	return &IoT1ClickProjectsUpdateProjectFuture{Future: future}
}
