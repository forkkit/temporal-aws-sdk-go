// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/iot1clickprojects"
	"go.temporal.io/sdk/workflow"
)

type IoT1ClickProjectsClient interface {
	AssociateDeviceWithPlacement(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error)
	AssociateDeviceWithPlacementAsync(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) *Iot1clickprojectsAssociateDeviceWithPlacementFuture

	CreatePlacement(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) (*iot1clickprojects.CreatePlacementOutput, error)
	CreatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) *Iot1clickprojectsCreatePlacementFuture

	CreateProject(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) (*iot1clickprojects.CreateProjectOutput, error)
	CreateProjectAsync(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) *Iot1clickprojectsCreateProjectFuture

	DeletePlacement(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) (*iot1clickprojects.DeletePlacementOutput, error)
	DeletePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) *Iot1clickprojectsDeletePlacementFuture

	DeleteProject(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) (*iot1clickprojects.DeleteProjectOutput, error)
	DeleteProjectAsync(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) *Iot1clickprojectsDeleteProjectFuture

	DescribePlacement(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) (*iot1clickprojects.DescribePlacementOutput, error)
	DescribePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) *Iot1clickprojectsDescribePlacementFuture

	DescribeProject(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) (*iot1clickprojects.DescribeProjectOutput, error)
	DescribeProjectAsync(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) *Iot1clickprojectsDescribeProjectFuture

	DisassociateDeviceFromPlacement(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error)
	DisassociateDeviceFromPlacementAsync(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) *Iot1clickprojectsDisassociateDeviceFromPlacementFuture

	GetDevicesInPlacement(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) (*iot1clickprojects.GetDevicesInPlacementOutput, error)
	GetDevicesInPlacementAsync(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) *Iot1clickprojectsGetDevicesInPlacementFuture

	ListPlacements(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) (*iot1clickprojects.ListPlacementsOutput, error)
	ListPlacementsAsync(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) *Iot1clickprojectsListPlacementsFuture

	ListProjects(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) (*iot1clickprojects.ListProjectsOutput, error)
	ListProjectsAsync(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) *Iot1clickprojectsListProjectsFuture

	ListTagsForResource(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) (*iot1clickprojects.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) *Iot1clickprojectsListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) (*iot1clickprojects.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) *Iot1clickprojectsTagResourceFuture

	UntagResource(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) (*iot1clickprojects.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) *Iot1clickprojectsUntagResourceFuture

	UpdatePlacement(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) (*iot1clickprojects.UpdatePlacementOutput, error)
	UpdatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) *Iot1clickprojectsUpdatePlacementFuture

	UpdateProject(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) (*iot1clickprojects.UpdateProjectOutput, error)
	UpdateProjectAsync(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) *Iot1clickprojectsUpdateProjectFuture
}

type IoT1ClickProjectsStub struct{}

func NewIoT1ClickProjectsStub() IoT1ClickProjectsClient {
	return &IoT1ClickProjectsStub{}
}

type Iot1clickprojectsAssociateDeviceWithPlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsAssociateDeviceWithPlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error) {
	var output iot1clickprojects.AssociateDeviceWithPlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsCreatePlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsCreatePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.CreatePlacementOutput, error) {
	var output iot1clickprojects.CreatePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsCreateProjectFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsCreateProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.CreateProjectOutput, error) {
	var output iot1clickprojects.CreateProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsDeletePlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsDeletePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.DeletePlacementOutput, error) {
	var output iot1clickprojects.DeletePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsDeleteProjectFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsDeleteProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.DeleteProjectOutput, error) {
	var output iot1clickprojects.DeleteProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsDescribePlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsDescribePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.DescribePlacementOutput, error) {
	var output iot1clickprojects.DescribePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsDescribeProjectFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsDescribeProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.DescribeProjectOutput, error) {
	var output iot1clickprojects.DescribeProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsDisassociateDeviceFromPlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsDisassociateDeviceFromPlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error) {
	var output iot1clickprojects.DisassociateDeviceFromPlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsGetDevicesInPlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsGetDevicesInPlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.GetDevicesInPlacementOutput, error) {
	var output iot1clickprojects.GetDevicesInPlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsListPlacementsFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsListPlacementsFuture) Get(ctx workflow.Context) (*iot1clickprojects.ListPlacementsOutput, error) {
	var output iot1clickprojects.ListPlacementsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsListProjectsFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsListProjectsFuture) Get(ctx workflow.Context) (*iot1clickprojects.ListProjectsOutput, error) {
	var output iot1clickprojects.ListProjectsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsListTagsForResourceFuture) Get(ctx workflow.Context) (*iot1clickprojects.ListTagsForResourceOutput, error) {
	var output iot1clickprojects.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsTagResourceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsTagResourceFuture) Get(ctx workflow.Context) (*iot1clickprojects.TagResourceOutput, error) {
	var output iot1clickprojects.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsUntagResourceFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsUntagResourceFuture) Get(ctx workflow.Context) (*iot1clickprojects.UntagResourceOutput, error) {
	var output iot1clickprojects.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsUpdatePlacementFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsUpdatePlacementFuture) Get(ctx workflow.Context) (*iot1clickprojects.UpdatePlacementOutput, error) {
	var output iot1clickprojects.UpdatePlacementOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type Iot1clickprojectsUpdateProjectFuture struct {
	Future workflow.Future
}

func (r *Iot1clickprojectsUpdateProjectFuture) Get(ctx workflow.Context) (*iot1clickprojects.UpdateProjectOutput, error) {
	var output iot1clickprojects.UpdateProjectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) AssociateDeviceWithPlacement(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error) {
	var output iot1clickprojects.AssociateDeviceWithPlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.AssociateDeviceWithPlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) AssociateDeviceWithPlacementAsync(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) *Iot1clickprojectsAssociateDeviceWithPlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.AssociateDeviceWithPlacement", input)
	return &Iot1clickprojectsAssociateDeviceWithPlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) CreatePlacement(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) (*iot1clickprojects.CreatePlacementOutput, error) {
	var output iot1clickprojects.CreatePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreatePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) CreatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) *Iot1clickprojectsCreatePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreatePlacement", input)
	return &Iot1clickprojectsCreatePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) CreateProject(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) (*iot1clickprojects.CreateProjectOutput, error) {
	var output iot1clickprojects.CreateProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreateProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) CreateProjectAsync(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) *Iot1clickprojectsCreateProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.CreateProject", input)
	return &Iot1clickprojectsCreateProjectFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DeletePlacement(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) (*iot1clickprojects.DeletePlacementOutput, error) {
	var output iot1clickprojects.DeletePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeletePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DeletePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) *Iot1clickprojectsDeletePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeletePlacement", input)
	return &Iot1clickprojectsDeletePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DeleteProject(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) (*iot1clickprojects.DeleteProjectOutput, error) {
	var output iot1clickprojects.DeleteProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeleteProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DeleteProjectAsync(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) *Iot1clickprojectsDeleteProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DeleteProject", input)
	return &Iot1clickprojectsDeleteProjectFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DescribePlacement(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) (*iot1clickprojects.DescribePlacementOutput, error) {
	var output iot1clickprojects.DescribePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DescribePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) *Iot1clickprojectsDescribePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribePlacement", input)
	return &Iot1clickprojectsDescribePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DescribeProject(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) (*iot1clickprojects.DescribeProjectOutput, error) {
	var output iot1clickprojects.DescribeProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribeProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DescribeProjectAsync(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) *Iot1clickprojectsDescribeProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DescribeProject", input)
	return &Iot1clickprojectsDescribeProjectFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) DisassociateDeviceFromPlacement(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error) {
	var output iot1clickprojects.DisassociateDeviceFromPlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DisassociateDeviceFromPlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) DisassociateDeviceFromPlacementAsync(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) *Iot1clickprojectsDisassociateDeviceFromPlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.DisassociateDeviceFromPlacement", input)
	return &Iot1clickprojectsDisassociateDeviceFromPlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) GetDevicesInPlacement(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) (*iot1clickprojects.GetDevicesInPlacementOutput, error) {
	var output iot1clickprojects.GetDevicesInPlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.GetDevicesInPlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) GetDevicesInPlacementAsync(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) *Iot1clickprojectsGetDevicesInPlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.GetDevicesInPlacement", input)
	return &Iot1clickprojectsGetDevicesInPlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) ListPlacements(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) (*iot1clickprojects.ListPlacementsOutput, error) {
	var output iot1clickprojects.ListPlacementsOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListPlacements", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) ListPlacementsAsync(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) *Iot1clickprojectsListPlacementsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListPlacements", input)
	return &Iot1clickprojectsListPlacementsFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) ListProjects(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) (*iot1clickprojects.ListProjectsOutput, error) {
	var output iot1clickprojects.ListProjectsOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListProjects", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) ListProjectsAsync(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) *Iot1clickprojectsListProjectsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListProjects", input)
	return &Iot1clickprojectsListProjectsFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) ListTagsForResource(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) (*iot1clickprojects.ListTagsForResourceOutput, error) {
	var output iot1clickprojects.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) *Iot1clickprojectsListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.ListTagsForResource", input)
	return &Iot1clickprojectsListTagsForResourceFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) TagResource(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) (*iot1clickprojects.TagResourceOutput, error) {
	var output iot1clickprojects.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) TagResourceAsync(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) *Iot1clickprojectsTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.TagResource", input)
	return &Iot1clickprojectsTagResourceFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) UntagResource(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) (*iot1clickprojects.UntagResourceOutput, error) {
	var output iot1clickprojects.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) UntagResourceAsync(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) *Iot1clickprojectsUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UntagResource", input)
	return &Iot1clickprojectsUntagResourceFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) UpdatePlacement(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) (*iot1clickprojects.UpdatePlacementOutput, error) {
	var output iot1clickprojects.UpdatePlacementOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdatePlacement", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) UpdatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) *Iot1clickprojectsUpdatePlacementFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdatePlacement", input)
	return &Iot1clickprojectsUpdatePlacementFuture{Future: future}
}

func (a *IoT1ClickProjectsStub) UpdateProject(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) (*iot1clickprojects.UpdateProjectOutput, error) {
	var output iot1clickprojects.UpdateProjectOutput
	err := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdateProject", input).Get(ctx, &output)
	return &output, err
}

func (a *IoT1ClickProjectsStub) UpdateProjectAsync(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) *Iot1clickprojectsUpdateProjectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.iot1clickprojects.UpdateProject", input)
	return &Iot1clickprojectsUpdateProjectFuture{Future: future}
}
