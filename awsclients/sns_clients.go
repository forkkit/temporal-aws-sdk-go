// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/sns"
	"go.temporal.io/sdk/workflow"
)

type SNSClient interface {
	AddPermission(ctx workflow.Context, input *sns.AddPermissionInput) (*sns.AddPermissionOutput, error)
	AddPermissionAsync(ctx workflow.Context, input *sns.AddPermissionInput) *SnsAddPermissionFuture

	CheckIfPhoneNumberIsOptedOut(ctx workflow.Context, input *sns.CheckIfPhoneNumberIsOptedOutInput) (*sns.CheckIfPhoneNumberIsOptedOutOutput, error)
	CheckIfPhoneNumberIsOptedOutAsync(ctx workflow.Context, input *sns.CheckIfPhoneNumberIsOptedOutInput) *SnsCheckIfPhoneNumberIsOptedOutFuture

	ConfirmSubscription(ctx workflow.Context, input *sns.ConfirmSubscriptionInput) (*sns.ConfirmSubscriptionOutput, error)
	ConfirmSubscriptionAsync(ctx workflow.Context, input *sns.ConfirmSubscriptionInput) *SnsConfirmSubscriptionFuture

	CreatePlatformApplication(ctx workflow.Context, input *sns.CreatePlatformApplicationInput) (*sns.CreatePlatformApplicationOutput, error)
	CreatePlatformApplicationAsync(ctx workflow.Context, input *sns.CreatePlatformApplicationInput) *SnsCreatePlatformApplicationFuture

	CreatePlatformEndpoint(ctx workflow.Context, input *sns.CreatePlatformEndpointInput) (*sns.CreatePlatformEndpointOutput, error)
	CreatePlatformEndpointAsync(ctx workflow.Context, input *sns.CreatePlatformEndpointInput) *SnsCreatePlatformEndpointFuture

	CreateTopic(ctx workflow.Context, input *sns.CreateTopicInput) (*sns.CreateTopicOutput, error)
	CreateTopicAsync(ctx workflow.Context, input *sns.CreateTopicInput) *SnsCreateTopicFuture

	DeleteEndpoint(ctx workflow.Context, input *sns.DeleteEndpointInput) (*sns.DeleteEndpointOutput, error)
	DeleteEndpointAsync(ctx workflow.Context, input *sns.DeleteEndpointInput) *SnsDeleteEndpointFuture

	DeletePlatformApplication(ctx workflow.Context, input *sns.DeletePlatformApplicationInput) (*sns.DeletePlatformApplicationOutput, error)
	DeletePlatformApplicationAsync(ctx workflow.Context, input *sns.DeletePlatformApplicationInput) *SnsDeletePlatformApplicationFuture

	DeleteTopic(ctx workflow.Context, input *sns.DeleteTopicInput) (*sns.DeleteTopicOutput, error)
	DeleteTopicAsync(ctx workflow.Context, input *sns.DeleteTopicInput) *SnsDeleteTopicFuture

	GetEndpointAttributes(ctx workflow.Context, input *sns.GetEndpointAttributesInput) (*sns.GetEndpointAttributesOutput, error)
	GetEndpointAttributesAsync(ctx workflow.Context, input *sns.GetEndpointAttributesInput) *SnsGetEndpointAttributesFuture

	GetPlatformApplicationAttributes(ctx workflow.Context, input *sns.GetPlatformApplicationAttributesInput) (*sns.GetPlatformApplicationAttributesOutput, error)
	GetPlatformApplicationAttributesAsync(ctx workflow.Context, input *sns.GetPlatformApplicationAttributesInput) *SnsGetPlatformApplicationAttributesFuture

	GetSMSAttributes(ctx workflow.Context, input *sns.GetSMSAttributesInput) (*sns.GetSMSAttributesOutput, error)
	GetSMSAttributesAsync(ctx workflow.Context, input *sns.GetSMSAttributesInput) *SnsGetSMSAttributesFuture

	GetSubscriptionAttributes(ctx workflow.Context, input *sns.GetSubscriptionAttributesInput) (*sns.GetSubscriptionAttributesOutput, error)
	GetSubscriptionAttributesAsync(ctx workflow.Context, input *sns.GetSubscriptionAttributesInput) *SnsGetSubscriptionAttributesFuture

	GetTopicAttributes(ctx workflow.Context, input *sns.GetTopicAttributesInput) (*sns.GetTopicAttributesOutput, error)
	GetTopicAttributesAsync(ctx workflow.Context, input *sns.GetTopicAttributesInput) *SnsGetTopicAttributesFuture

	ListEndpointsByPlatformApplication(ctx workflow.Context, input *sns.ListEndpointsByPlatformApplicationInput) (*sns.ListEndpointsByPlatformApplicationOutput, error)
	ListEndpointsByPlatformApplicationAsync(ctx workflow.Context, input *sns.ListEndpointsByPlatformApplicationInput) *SnsListEndpointsByPlatformApplicationFuture

	ListPhoneNumbersOptedOut(ctx workflow.Context, input *sns.ListPhoneNumbersOptedOutInput) (*sns.ListPhoneNumbersOptedOutOutput, error)
	ListPhoneNumbersOptedOutAsync(ctx workflow.Context, input *sns.ListPhoneNumbersOptedOutInput) *SnsListPhoneNumbersOptedOutFuture

	ListPlatformApplications(ctx workflow.Context, input *sns.ListPlatformApplicationsInput) (*sns.ListPlatformApplicationsOutput, error)
	ListPlatformApplicationsAsync(ctx workflow.Context, input *sns.ListPlatformApplicationsInput) *SnsListPlatformApplicationsFuture

	ListSubscriptions(ctx workflow.Context, input *sns.ListSubscriptionsInput) (*sns.ListSubscriptionsOutput, error)
	ListSubscriptionsAsync(ctx workflow.Context, input *sns.ListSubscriptionsInput) *SnsListSubscriptionsFuture

	ListSubscriptionsByTopic(ctx workflow.Context, input *sns.ListSubscriptionsByTopicInput) (*sns.ListSubscriptionsByTopicOutput, error)
	ListSubscriptionsByTopicAsync(ctx workflow.Context, input *sns.ListSubscriptionsByTopicInput) *SnsListSubscriptionsByTopicFuture

	ListTagsForResource(ctx workflow.Context, input *sns.ListTagsForResourceInput) (*sns.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *sns.ListTagsForResourceInput) *SnsListTagsForResourceFuture

	ListTopics(ctx workflow.Context, input *sns.ListTopicsInput) (*sns.ListTopicsOutput, error)
	ListTopicsAsync(ctx workflow.Context, input *sns.ListTopicsInput) *SnsListTopicsFuture

	OptInPhoneNumber(ctx workflow.Context, input *sns.OptInPhoneNumberInput) (*sns.OptInPhoneNumberOutput, error)
	OptInPhoneNumberAsync(ctx workflow.Context, input *sns.OptInPhoneNumberInput) *SnsOptInPhoneNumberFuture

	Publish(ctx workflow.Context, input *sns.PublishInput) (*sns.PublishOutput, error)
	PublishAsync(ctx workflow.Context, input *sns.PublishInput) *SnsPublishFuture

	RemovePermission(ctx workflow.Context, input *sns.RemovePermissionInput) (*sns.RemovePermissionOutput, error)
	RemovePermissionAsync(ctx workflow.Context, input *sns.RemovePermissionInput) *SnsRemovePermissionFuture

	SetEndpointAttributes(ctx workflow.Context, input *sns.SetEndpointAttributesInput) (*sns.SetEndpointAttributesOutput, error)
	SetEndpointAttributesAsync(ctx workflow.Context, input *sns.SetEndpointAttributesInput) *SnsSetEndpointAttributesFuture

	SetPlatformApplicationAttributes(ctx workflow.Context, input *sns.SetPlatformApplicationAttributesInput) (*sns.SetPlatformApplicationAttributesOutput, error)
	SetPlatformApplicationAttributesAsync(ctx workflow.Context, input *sns.SetPlatformApplicationAttributesInput) *SnsSetPlatformApplicationAttributesFuture

	SetSMSAttributes(ctx workflow.Context, input *sns.SetSMSAttributesInput) (*sns.SetSMSAttributesOutput, error)
	SetSMSAttributesAsync(ctx workflow.Context, input *sns.SetSMSAttributesInput) *SnsSetSMSAttributesFuture

	SetSubscriptionAttributes(ctx workflow.Context, input *sns.SetSubscriptionAttributesInput) (*sns.SetSubscriptionAttributesOutput, error)
	SetSubscriptionAttributesAsync(ctx workflow.Context, input *sns.SetSubscriptionAttributesInput) *SnsSetSubscriptionAttributesFuture

	SetTopicAttributes(ctx workflow.Context, input *sns.SetTopicAttributesInput) (*sns.SetTopicAttributesOutput, error)
	SetTopicAttributesAsync(ctx workflow.Context, input *sns.SetTopicAttributesInput) *SnsSetTopicAttributesFuture

	Subscribe(ctx workflow.Context, input *sns.SubscribeInput) (*sns.SubscribeOutput, error)
	SubscribeAsync(ctx workflow.Context, input *sns.SubscribeInput) *SnsSubscribeFuture

	TagResource(ctx workflow.Context, input *sns.TagResourceInput) (*sns.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *sns.TagResourceInput) *SnsTagResourceFuture

	Unsubscribe(ctx workflow.Context, input *sns.UnsubscribeInput) (*sns.UnsubscribeOutput, error)
	UnsubscribeAsync(ctx workflow.Context, input *sns.UnsubscribeInput) *SnsUnsubscribeFuture

	UntagResource(ctx workflow.Context, input *sns.UntagResourceInput) (*sns.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *sns.UntagResourceInput) *SnsUntagResourceFuture
}

type SNSStub struct{}

func NewSNSStub() SNSClient {
	return &SNSStub{}
}

type SnsAddPermissionFuture struct {
	Future workflow.Future
}

func (r *SnsAddPermissionFuture) Get(ctx workflow.Context) (*sns.AddPermissionOutput, error) {
	var output sns.AddPermissionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsCheckIfPhoneNumberIsOptedOutFuture struct {
	Future workflow.Future
}

func (r *SnsCheckIfPhoneNumberIsOptedOutFuture) Get(ctx workflow.Context) (*sns.CheckIfPhoneNumberIsOptedOutOutput, error) {
	var output sns.CheckIfPhoneNumberIsOptedOutOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsConfirmSubscriptionFuture struct {
	Future workflow.Future
}

func (r *SnsConfirmSubscriptionFuture) Get(ctx workflow.Context) (*sns.ConfirmSubscriptionOutput, error) {
	var output sns.ConfirmSubscriptionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsCreatePlatformApplicationFuture struct {
	Future workflow.Future
}

func (r *SnsCreatePlatformApplicationFuture) Get(ctx workflow.Context) (*sns.CreatePlatformApplicationOutput, error) {
	var output sns.CreatePlatformApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsCreatePlatformEndpointFuture struct {
	Future workflow.Future
}

func (r *SnsCreatePlatformEndpointFuture) Get(ctx workflow.Context) (*sns.CreatePlatformEndpointOutput, error) {
	var output sns.CreatePlatformEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsCreateTopicFuture struct {
	Future workflow.Future
}

func (r *SnsCreateTopicFuture) Get(ctx workflow.Context) (*sns.CreateTopicOutput, error) {
	var output sns.CreateTopicOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsDeleteEndpointFuture struct {
	Future workflow.Future
}

func (r *SnsDeleteEndpointFuture) Get(ctx workflow.Context) (*sns.DeleteEndpointOutput, error) {
	var output sns.DeleteEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsDeletePlatformApplicationFuture struct {
	Future workflow.Future
}

func (r *SnsDeletePlatformApplicationFuture) Get(ctx workflow.Context) (*sns.DeletePlatformApplicationOutput, error) {
	var output sns.DeletePlatformApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsDeleteTopicFuture struct {
	Future workflow.Future
}

func (r *SnsDeleteTopicFuture) Get(ctx workflow.Context) (*sns.DeleteTopicOutput, error) {
	var output sns.DeleteTopicOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsGetEndpointAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsGetEndpointAttributesFuture) Get(ctx workflow.Context) (*sns.GetEndpointAttributesOutput, error) {
	var output sns.GetEndpointAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsGetPlatformApplicationAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsGetPlatformApplicationAttributesFuture) Get(ctx workflow.Context) (*sns.GetPlatformApplicationAttributesOutput, error) {
	var output sns.GetPlatformApplicationAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsGetSMSAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsGetSMSAttributesFuture) Get(ctx workflow.Context) (*sns.GetSMSAttributesOutput, error) {
	var output sns.GetSMSAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsGetSubscriptionAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsGetSubscriptionAttributesFuture) Get(ctx workflow.Context) (*sns.GetSubscriptionAttributesOutput, error) {
	var output sns.GetSubscriptionAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsGetTopicAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsGetTopicAttributesFuture) Get(ctx workflow.Context) (*sns.GetTopicAttributesOutput, error) {
	var output sns.GetTopicAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListEndpointsByPlatformApplicationFuture struct {
	Future workflow.Future
}

func (r *SnsListEndpointsByPlatformApplicationFuture) Get(ctx workflow.Context) (*sns.ListEndpointsByPlatformApplicationOutput, error) {
	var output sns.ListEndpointsByPlatformApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListPhoneNumbersOptedOutFuture struct {
	Future workflow.Future
}

func (r *SnsListPhoneNumbersOptedOutFuture) Get(ctx workflow.Context) (*sns.ListPhoneNumbersOptedOutOutput, error) {
	var output sns.ListPhoneNumbersOptedOutOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListPlatformApplicationsFuture struct {
	Future workflow.Future
}

func (r *SnsListPlatformApplicationsFuture) Get(ctx workflow.Context) (*sns.ListPlatformApplicationsOutput, error) {
	var output sns.ListPlatformApplicationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListSubscriptionsFuture struct {
	Future workflow.Future
}

func (r *SnsListSubscriptionsFuture) Get(ctx workflow.Context) (*sns.ListSubscriptionsOutput, error) {
	var output sns.ListSubscriptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListSubscriptionsByTopicFuture struct {
	Future workflow.Future
}

func (r *SnsListSubscriptionsByTopicFuture) Get(ctx workflow.Context) (*sns.ListSubscriptionsByTopicOutput, error) {
	var output sns.ListSubscriptionsByTopicOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *SnsListTagsForResourceFuture) Get(ctx workflow.Context) (*sns.ListTagsForResourceOutput, error) {
	var output sns.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsListTopicsFuture struct {
	Future workflow.Future
}

func (r *SnsListTopicsFuture) Get(ctx workflow.Context) (*sns.ListTopicsOutput, error) {
	var output sns.ListTopicsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsOptInPhoneNumberFuture struct {
	Future workflow.Future
}

func (r *SnsOptInPhoneNumberFuture) Get(ctx workflow.Context) (*sns.OptInPhoneNumberOutput, error) {
	var output sns.OptInPhoneNumberOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsPublishFuture struct {
	Future workflow.Future
}

func (r *SnsPublishFuture) Get(ctx workflow.Context) (*sns.PublishOutput, error) {
	var output sns.PublishOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsRemovePermissionFuture struct {
	Future workflow.Future
}

func (r *SnsRemovePermissionFuture) Get(ctx workflow.Context) (*sns.RemovePermissionOutput, error) {
	var output sns.RemovePermissionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsSetEndpointAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsSetEndpointAttributesFuture) Get(ctx workflow.Context) (*sns.SetEndpointAttributesOutput, error) {
	var output sns.SetEndpointAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsSetPlatformApplicationAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsSetPlatformApplicationAttributesFuture) Get(ctx workflow.Context) (*sns.SetPlatformApplicationAttributesOutput, error) {
	var output sns.SetPlatformApplicationAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsSetSMSAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsSetSMSAttributesFuture) Get(ctx workflow.Context) (*sns.SetSMSAttributesOutput, error) {
	var output sns.SetSMSAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsSetSubscriptionAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsSetSubscriptionAttributesFuture) Get(ctx workflow.Context) (*sns.SetSubscriptionAttributesOutput, error) {
	var output sns.SetSubscriptionAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsSetTopicAttributesFuture struct {
	Future workflow.Future
}

func (r *SnsSetTopicAttributesFuture) Get(ctx workflow.Context) (*sns.SetTopicAttributesOutput, error) {
	var output sns.SetTopicAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsSubscribeFuture struct {
	Future workflow.Future
}

func (r *SnsSubscribeFuture) Get(ctx workflow.Context) (*sns.SubscribeOutput, error) {
	var output sns.SubscribeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsTagResourceFuture struct {
	Future workflow.Future
}

func (r *SnsTagResourceFuture) Get(ctx workflow.Context) (*sns.TagResourceOutput, error) {
	var output sns.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsUnsubscribeFuture struct {
	Future workflow.Future
}

func (r *SnsUnsubscribeFuture) Get(ctx workflow.Context) (*sns.UnsubscribeOutput, error) {
	var output sns.UnsubscribeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SnsUntagResourceFuture struct {
	Future workflow.Future
}

func (r *SnsUntagResourceFuture) Get(ctx workflow.Context) (*sns.UntagResourceOutput, error) {
	var output sns.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) AddPermission(ctx workflow.Context, input *sns.AddPermissionInput) (*sns.AddPermissionOutput, error) {
	var output sns.AddPermissionOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.AddPermission", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) AddPermissionAsync(ctx workflow.Context, input *sns.AddPermissionInput) *SnsAddPermissionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.AddPermission", input)
	return &SnsAddPermissionFuture{Future: future}
}

func (a *SNSStub) CheckIfPhoneNumberIsOptedOut(ctx workflow.Context, input *sns.CheckIfPhoneNumberIsOptedOutInput) (*sns.CheckIfPhoneNumberIsOptedOutOutput, error) {
	var output sns.CheckIfPhoneNumberIsOptedOutOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.CheckIfPhoneNumberIsOptedOut", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) CheckIfPhoneNumberIsOptedOutAsync(ctx workflow.Context, input *sns.CheckIfPhoneNumberIsOptedOutInput) *SnsCheckIfPhoneNumberIsOptedOutFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.CheckIfPhoneNumberIsOptedOut", input)
	return &SnsCheckIfPhoneNumberIsOptedOutFuture{Future: future}
}

func (a *SNSStub) ConfirmSubscription(ctx workflow.Context, input *sns.ConfirmSubscriptionInput) (*sns.ConfirmSubscriptionOutput, error) {
	var output sns.ConfirmSubscriptionOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ConfirmSubscription", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ConfirmSubscriptionAsync(ctx workflow.Context, input *sns.ConfirmSubscriptionInput) *SnsConfirmSubscriptionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ConfirmSubscription", input)
	return &SnsConfirmSubscriptionFuture{Future: future}
}

func (a *SNSStub) CreatePlatformApplication(ctx workflow.Context, input *sns.CreatePlatformApplicationInput) (*sns.CreatePlatformApplicationOutput, error) {
	var output sns.CreatePlatformApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.CreatePlatformApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) CreatePlatformApplicationAsync(ctx workflow.Context, input *sns.CreatePlatformApplicationInput) *SnsCreatePlatformApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.CreatePlatformApplication", input)
	return &SnsCreatePlatformApplicationFuture{Future: future}
}

func (a *SNSStub) CreatePlatformEndpoint(ctx workflow.Context, input *sns.CreatePlatformEndpointInput) (*sns.CreatePlatformEndpointOutput, error) {
	var output sns.CreatePlatformEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.CreatePlatformEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) CreatePlatformEndpointAsync(ctx workflow.Context, input *sns.CreatePlatformEndpointInput) *SnsCreatePlatformEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.CreatePlatformEndpoint", input)
	return &SnsCreatePlatformEndpointFuture{Future: future}
}

func (a *SNSStub) CreateTopic(ctx workflow.Context, input *sns.CreateTopicInput) (*sns.CreateTopicOutput, error) {
	var output sns.CreateTopicOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.CreateTopic", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) CreateTopicAsync(ctx workflow.Context, input *sns.CreateTopicInput) *SnsCreateTopicFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.CreateTopic", input)
	return &SnsCreateTopicFuture{Future: future}
}

func (a *SNSStub) DeleteEndpoint(ctx workflow.Context, input *sns.DeleteEndpointInput) (*sns.DeleteEndpointOutput, error) {
	var output sns.DeleteEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.DeleteEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) DeleteEndpointAsync(ctx workflow.Context, input *sns.DeleteEndpointInput) *SnsDeleteEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.DeleteEndpoint", input)
	return &SnsDeleteEndpointFuture{Future: future}
}

func (a *SNSStub) DeletePlatformApplication(ctx workflow.Context, input *sns.DeletePlatformApplicationInput) (*sns.DeletePlatformApplicationOutput, error) {
	var output sns.DeletePlatformApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.DeletePlatformApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) DeletePlatformApplicationAsync(ctx workflow.Context, input *sns.DeletePlatformApplicationInput) *SnsDeletePlatformApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.DeletePlatformApplication", input)
	return &SnsDeletePlatformApplicationFuture{Future: future}
}

func (a *SNSStub) DeleteTopic(ctx workflow.Context, input *sns.DeleteTopicInput) (*sns.DeleteTopicOutput, error) {
	var output sns.DeleteTopicOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.DeleteTopic", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) DeleteTopicAsync(ctx workflow.Context, input *sns.DeleteTopicInput) *SnsDeleteTopicFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.DeleteTopic", input)
	return &SnsDeleteTopicFuture{Future: future}
}

func (a *SNSStub) GetEndpointAttributes(ctx workflow.Context, input *sns.GetEndpointAttributesInput) (*sns.GetEndpointAttributesOutput, error) {
	var output sns.GetEndpointAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.GetEndpointAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) GetEndpointAttributesAsync(ctx workflow.Context, input *sns.GetEndpointAttributesInput) *SnsGetEndpointAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.GetEndpointAttributes", input)
	return &SnsGetEndpointAttributesFuture{Future: future}
}

func (a *SNSStub) GetPlatformApplicationAttributes(ctx workflow.Context, input *sns.GetPlatformApplicationAttributesInput) (*sns.GetPlatformApplicationAttributesOutput, error) {
	var output sns.GetPlatformApplicationAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.GetPlatformApplicationAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) GetPlatformApplicationAttributesAsync(ctx workflow.Context, input *sns.GetPlatformApplicationAttributesInput) *SnsGetPlatformApplicationAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.GetPlatformApplicationAttributes", input)
	return &SnsGetPlatformApplicationAttributesFuture{Future: future}
}

func (a *SNSStub) GetSMSAttributes(ctx workflow.Context, input *sns.GetSMSAttributesInput) (*sns.GetSMSAttributesOutput, error) {
	var output sns.GetSMSAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.GetSMSAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) GetSMSAttributesAsync(ctx workflow.Context, input *sns.GetSMSAttributesInput) *SnsGetSMSAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.GetSMSAttributes", input)
	return &SnsGetSMSAttributesFuture{Future: future}
}

func (a *SNSStub) GetSubscriptionAttributes(ctx workflow.Context, input *sns.GetSubscriptionAttributesInput) (*sns.GetSubscriptionAttributesOutput, error) {
	var output sns.GetSubscriptionAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.GetSubscriptionAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) GetSubscriptionAttributesAsync(ctx workflow.Context, input *sns.GetSubscriptionAttributesInput) *SnsGetSubscriptionAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.GetSubscriptionAttributes", input)
	return &SnsGetSubscriptionAttributesFuture{Future: future}
}

func (a *SNSStub) GetTopicAttributes(ctx workflow.Context, input *sns.GetTopicAttributesInput) (*sns.GetTopicAttributesOutput, error) {
	var output sns.GetTopicAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.GetTopicAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) GetTopicAttributesAsync(ctx workflow.Context, input *sns.GetTopicAttributesInput) *SnsGetTopicAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.GetTopicAttributes", input)
	return &SnsGetTopicAttributesFuture{Future: future}
}

func (a *SNSStub) ListEndpointsByPlatformApplication(ctx workflow.Context, input *sns.ListEndpointsByPlatformApplicationInput) (*sns.ListEndpointsByPlatformApplicationOutput, error) {
	var output sns.ListEndpointsByPlatformApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListEndpointsByPlatformApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListEndpointsByPlatformApplicationAsync(ctx workflow.Context, input *sns.ListEndpointsByPlatformApplicationInput) *SnsListEndpointsByPlatformApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListEndpointsByPlatformApplication", input)
	return &SnsListEndpointsByPlatformApplicationFuture{Future: future}
}

func (a *SNSStub) ListPhoneNumbersOptedOut(ctx workflow.Context, input *sns.ListPhoneNumbersOptedOutInput) (*sns.ListPhoneNumbersOptedOutOutput, error) {
	var output sns.ListPhoneNumbersOptedOutOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListPhoneNumbersOptedOut", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListPhoneNumbersOptedOutAsync(ctx workflow.Context, input *sns.ListPhoneNumbersOptedOutInput) *SnsListPhoneNumbersOptedOutFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListPhoneNumbersOptedOut", input)
	return &SnsListPhoneNumbersOptedOutFuture{Future: future}
}

func (a *SNSStub) ListPlatformApplications(ctx workflow.Context, input *sns.ListPlatformApplicationsInput) (*sns.ListPlatformApplicationsOutput, error) {
	var output sns.ListPlatformApplicationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListPlatformApplications", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListPlatformApplicationsAsync(ctx workflow.Context, input *sns.ListPlatformApplicationsInput) *SnsListPlatformApplicationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListPlatformApplications", input)
	return &SnsListPlatformApplicationsFuture{Future: future}
}

func (a *SNSStub) ListSubscriptions(ctx workflow.Context, input *sns.ListSubscriptionsInput) (*sns.ListSubscriptionsOutput, error) {
	var output sns.ListSubscriptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListSubscriptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListSubscriptionsAsync(ctx workflow.Context, input *sns.ListSubscriptionsInput) *SnsListSubscriptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListSubscriptions", input)
	return &SnsListSubscriptionsFuture{Future: future}
}

func (a *SNSStub) ListSubscriptionsByTopic(ctx workflow.Context, input *sns.ListSubscriptionsByTopicInput) (*sns.ListSubscriptionsByTopicOutput, error) {
	var output sns.ListSubscriptionsByTopicOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListSubscriptionsByTopic", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListSubscriptionsByTopicAsync(ctx workflow.Context, input *sns.ListSubscriptionsByTopicInput) *SnsListSubscriptionsByTopicFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListSubscriptionsByTopic", input)
	return &SnsListSubscriptionsByTopicFuture{Future: future}
}

func (a *SNSStub) ListTagsForResource(ctx workflow.Context, input *sns.ListTagsForResourceInput) (*sns.ListTagsForResourceOutput, error) {
	var output sns.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListTagsForResourceAsync(ctx workflow.Context, input *sns.ListTagsForResourceInput) *SnsListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListTagsForResource", input)
	return &SnsListTagsForResourceFuture{Future: future}
}

func (a *SNSStub) ListTopics(ctx workflow.Context, input *sns.ListTopicsInput) (*sns.ListTopicsOutput, error) {
	var output sns.ListTopicsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.ListTopics", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) ListTopicsAsync(ctx workflow.Context, input *sns.ListTopicsInput) *SnsListTopicsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.ListTopics", input)
	return &SnsListTopicsFuture{Future: future}
}

func (a *SNSStub) OptInPhoneNumber(ctx workflow.Context, input *sns.OptInPhoneNumberInput) (*sns.OptInPhoneNumberOutput, error) {
	var output sns.OptInPhoneNumberOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.OptInPhoneNumber", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) OptInPhoneNumberAsync(ctx workflow.Context, input *sns.OptInPhoneNumberInput) *SnsOptInPhoneNumberFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.OptInPhoneNumber", input)
	return &SnsOptInPhoneNumberFuture{Future: future}
}

func (a *SNSStub) Publish(ctx workflow.Context, input *sns.PublishInput) (*sns.PublishOutput, error) {
	var output sns.PublishOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.Publish", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) PublishAsync(ctx workflow.Context, input *sns.PublishInput) *SnsPublishFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.Publish", input)
	return &SnsPublishFuture{Future: future}
}

func (a *SNSStub) RemovePermission(ctx workflow.Context, input *sns.RemovePermissionInput) (*sns.RemovePermissionOutput, error) {
	var output sns.RemovePermissionOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.RemovePermission", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) RemovePermissionAsync(ctx workflow.Context, input *sns.RemovePermissionInput) *SnsRemovePermissionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.RemovePermission", input)
	return &SnsRemovePermissionFuture{Future: future}
}

func (a *SNSStub) SetEndpointAttributes(ctx workflow.Context, input *sns.SetEndpointAttributesInput) (*sns.SetEndpointAttributesOutput, error) {
	var output sns.SetEndpointAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.SetEndpointAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) SetEndpointAttributesAsync(ctx workflow.Context, input *sns.SetEndpointAttributesInput) *SnsSetEndpointAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.SetEndpointAttributes", input)
	return &SnsSetEndpointAttributesFuture{Future: future}
}

func (a *SNSStub) SetPlatformApplicationAttributes(ctx workflow.Context, input *sns.SetPlatformApplicationAttributesInput) (*sns.SetPlatformApplicationAttributesOutput, error) {
	var output sns.SetPlatformApplicationAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.SetPlatformApplicationAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) SetPlatformApplicationAttributesAsync(ctx workflow.Context, input *sns.SetPlatformApplicationAttributesInput) *SnsSetPlatformApplicationAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.SetPlatformApplicationAttributes", input)
	return &SnsSetPlatformApplicationAttributesFuture{Future: future}
}

func (a *SNSStub) SetSMSAttributes(ctx workflow.Context, input *sns.SetSMSAttributesInput) (*sns.SetSMSAttributesOutput, error) {
	var output sns.SetSMSAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.SetSMSAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) SetSMSAttributesAsync(ctx workflow.Context, input *sns.SetSMSAttributesInput) *SnsSetSMSAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.SetSMSAttributes", input)
	return &SnsSetSMSAttributesFuture{Future: future}
}

func (a *SNSStub) SetSubscriptionAttributes(ctx workflow.Context, input *sns.SetSubscriptionAttributesInput) (*sns.SetSubscriptionAttributesOutput, error) {
	var output sns.SetSubscriptionAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.SetSubscriptionAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) SetSubscriptionAttributesAsync(ctx workflow.Context, input *sns.SetSubscriptionAttributesInput) *SnsSetSubscriptionAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.SetSubscriptionAttributes", input)
	return &SnsSetSubscriptionAttributesFuture{Future: future}
}

func (a *SNSStub) SetTopicAttributes(ctx workflow.Context, input *sns.SetTopicAttributesInput) (*sns.SetTopicAttributesOutput, error) {
	var output sns.SetTopicAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.SetTopicAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) SetTopicAttributesAsync(ctx workflow.Context, input *sns.SetTopicAttributesInput) *SnsSetTopicAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.SetTopicAttributes", input)
	return &SnsSetTopicAttributesFuture{Future: future}
}

func (a *SNSStub) Subscribe(ctx workflow.Context, input *sns.SubscribeInput) (*sns.SubscribeOutput, error) {
	var output sns.SubscribeOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.Subscribe", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) SubscribeAsync(ctx workflow.Context, input *sns.SubscribeInput) *SnsSubscribeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.Subscribe", input)
	return &SnsSubscribeFuture{Future: future}
}

func (a *SNSStub) TagResource(ctx workflow.Context, input *sns.TagResourceInput) (*sns.TagResourceOutput, error) {
	var output sns.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) TagResourceAsync(ctx workflow.Context, input *sns.TagResourceInput) *SnsTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.TagResource", input)
	return &SnsTagResourceFuture{Future: future}
}

func (a *SNSStub) Unsubscribe(ctx workflow.Context, input *sns.UnsubscribeInput) (*sns.UnsubscribeOutput, error) {
	var output sns.UnsubscribeOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.Unsubscribe", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) UnsubscribeAsync(ctx workflow.Context, input *sns.UnsubscribeInput) *SnsUnsubscribeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.Unsubscribe", input)
	return &SnsUnsubscribeFuture{Future: future}
}

func (a *SNSStub) UntagResource(ctx workflow.Context, input *sns.UntagResourceInput) (*sns.UntagResourceOutput, error) {
	var output sns.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.sns.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SNSStub) UntagResourceAsync(ctx workflow.Context, input *sns.UntagResourceInput) *SnsUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sns.UntagResource", input)
	return &SnsUntagResourceFuture{Future: future}
}
