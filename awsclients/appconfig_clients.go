// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/appconfig"
	"go.temporal.io/sdk/workflow"
)

type AppConfigClient interface {
	CreateApplication(ctx workflow.Context, input *appconfig.CreateApplicationInput) (*appconfig.CreateApplicationOutput, error)
	CreateApplicationAsync(ctx workflow.Context, input *appconfig.CreateApplicationInput) *AppconfigCreateApplicationFuture

	CreateConfigurationProfile(ctx workflow.Context, input *appconfig.CreateConfigurationProfileInput) (*appconfig.CreateConfigurationProfileOutput, error)
	CreateConfigurationProfileAsync(ctx workflow.Context, input *appconfig.CreateConfigurationProfileInput) *AppconfigCreateConfigurationProfileFuture

	CreateDeploymentStrategy(ctx workflow.Context, input *appconfig.CreateDeploymentStrategyInput) (*appconfig.CreateDeploymentStrategyOutput, error)
	CreateDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.CreateDeploymentStrategyInput) *AppconfigCreateDeploymentStrategyFuture

	CreateEnvironment(ctx workflow.Context, input *appconfig.CreateEnvironmentInput) (*appconfig.CreateEnvironmentOutput, error)
	CreateEnvironmentAsync(ctx workflow.Context, input *appconfig.CreateEnvironmentInput) *AppconfigCreateEnvironmentFuture

	CreateHostedConfigurationVersion(ctx workflow.Context, input *appconfig.CreateHostedConfigurationVersionInput) (*appconfig.CreateHostedConfigurationVersionOutput, error)
	CreateHostedConfigurationVersionAsync(ctx workflow.Context, input *appconfig.CreateHostedConfigurationVersionInput) *AppconfigCreateHostedConfigurationVersionFuture

	DeleteApplication(ctx workflow.Context, input *appconfig.DeleteApplicationInput) (*appconfig.DeleteApplicationOutput, error)
	DeleteApplicationAsync(ctx workflow.Context, input *appconfig.DeleteApplicationInput) *AppconfigDeleteApplicationFuture

	DeleteConfigurationProfile(ctx workflow.Context, input *appconfig.DeleteConfigurationProfileInput) (*appconfig.DeleteConfigurationProfileOutput, error)
	DeleteConfigurationProfileAsync(ctx workflow.Context, input *appconfig.DeleteConfigurationProfileInput) *AppconfigDeleteConfigurationProfileFuture

	DeleteDeploymentStrategy(ctx workflow.Context, input *appconfig.DeleteDeploymentStrategyInput) (*appconfig.DeleteDeploymentStrategyOutput, error)
	DeleteDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.DeleteDeploymentStrategyInput) *AppconfigDeleteDeploymentStrategyFuture

	DeleteEnvironment(ctx workflow.Context, input *appconfig.DeleteEnvironmentInput) (*appconfig.DeleteEnvironmentOutput, error)
	DeleteEnvironmentAsync(ctx workflow.Context, input *appconfig.DeleteEnvironmentInput) *AppconfigDeleteEnvironmentFuture

	DeleteHostedConfigurationVersion(ctx workflow.Context, input *appconfig.DeleteHostedConfigurationVersionInput) (*appconfig.DeleteHostedConfigurationVersionOutput, error)
	DeleteHostedConfigurationVersionAsync(ctx workflow.Context, input *appconfig.DeleteHostedConfigurationVersionInput) *AppconfigDeleteHostedConfigurationVersionFuture

	GetApplication(ctx workflow.Context, input *appconfig.GetApplicationInput) (*appconfig.GetApplicationOutput, error)
	GetApplicationAsync(ctx workflow.Context, input *appconfig.GetApplicationInput) *AppconfigGetApplicationFuture

	GetConfiguration(ctx workflow.Context, input *appconfig.GetConfigurationInput) (*appconfig.GetConfigurationOutput, error)
	GetConfigurationAsync(ctx workflow.Context, input *appconfig.GetConfigurationInput) *AppconfigGetConfigurationFuture

	GetConfigurationProfile(ctx workflow.Context, input *appconfig.GetConfigurationProfileInput) (*appconfig.GetConfigurationProfileOutput, error)
	GetConfigurationProfileAsync(ctx workflow.Context, input *appconfig.GetConfigurationProfileInput) *AppconfigGetConfigurationProfileFuture

	GetDeployment(ctx workflow.Context, input *appconfig.GetDeploymentInput) (*appconfig.GetDeploymentOutput, error)
	GetDeploymentAsync(ctx workflow.Context, input *appconfig.GetDeploymentInput) *AppconfigGetDeploymentFuture

	GetDeploymentStrategy(ctx workflow.Context, input *appconfig.GetDeploymentStrategyInput) (*appconfig.GetDeploymentStrategyOutput, error)
	GetDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.GetDeploymentStrategyInput) *AppconfigGetDeploymentStrategyFuture

	GetEnvironment(ctx workflow.Context, input *appconfig.GetEnvironmentInput) (*appconfig.GetEnvironmentOutput, error)
	GetEnvironmentAsync(ctx workflow.Context, input *appconfig.GetEnvironmentInput) *AppconfigGetEnvironmentFuture

	GetHostedConfigurationVersion(ctx workflow.Context, input *appconfig.GetHostedConfigurationVersionInput) (*appconfig.GetHostedConfigurationVersionOutput, error)
	GetHostedConfigurationVersionAsync(ctx workflow.Context, input *appconfig.GetHostedConfigurationVersionInput) *AppconfigGetHostedConfigurationVersionFuture

	ListApplications(ctx workflow.Context, input *appconfig.ListApplicationsInput) (*appconfig.ListApplicationsOutput, error)
	ListApplicationsAsync(ctx workflow.Context, input *appconfig.ListApplicationsInput) *AppconfigListApplicationsFuture

	ListConfigurationProfiles(ctx workflow.Context, input *appconfig.ListConfigurationProfilesInput) (*appconfig.ListConfigurationProfilesOutput, error)
	ListConfigurationProfilesAsync(ctx workflow.Context, input *appconfig.ListConfigurationProfilesInput) *AppconfigListConfigurationProfilesFuture

	ListDeploymentStrategies(ctx workflow.Context, input *appconfig.ListDeploymentStrategiesInput) (*appconfig.ListDeploymentStrategiesOutput, error)
	ListDeploymentStrategiesAsync(ctx workflow.Context, input *appconfig.ListDeploymentStrategiesInput) *AppconfigListDeploymentStrategiesFuture

	ListDeployments(ctx workflow.Context, input *appconfig.ListDeploymentsInput) (*appconfig.ListDeploymentsOutput, error)
	ListDeploymentsAsync(ctx workflow.Context, input *appconfig.ListDeploymentsInput) *AppconfigListDeploymentsFuture

	ListEnvironments(ctx workflow.Context, input *appconfig.ListEnvironmentsInput) (*appconfig.ListEnvironmentsOutput, error)
	ListEnvironmentsAsync(ctx workflow.Context, input *appconfig.ListEnvironmentsInput) *AppconfigListEnvironmentsFuture

	ListHostedConfigurationVersions(ctx workflow.Context, input *appconfig.ListHostedConfigurationVersionsInput) (*appconfig.ListHostedConfigurationVersionsOutput, error)
	ListHostedConfigurationVersionsAsync(ctx workflow.Context, input *appconfig.ListHostedConfigurationVersionsInput) *AppconfigListHostedConfigurationVersionsFuture

	ListTagsForResource(ctx workflow.Context, input *appconfig.ListTagsForResourceInput) (*appconfig.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *appconfig.ListTagsForResourceInput) *AppconfigListTagsForResourceFuture

	StartDeployment(ctx workflow.Context, input *appconfig.StartDeploymentInput) (*appconfig.StartDeploymentOutput, error)
	StartDeploymentAsync(ctx workflow.Context, input *appconfig.StartDeploymentInput) *AppconfigStartDeploymentFuture

	StopDeployment(ctx workflow.Context, input *appconfig.StopDeploymentInput) (*appconfig.StopDeploymentOutput, error)
	StopDeploymentAsync(ctx workflow.Context, input *appconfig.StopDeploymentInput) *AppconfigStopDeploymentFuture

	TagResource(ctx workflow.Context, input *appconfig.TagResourceInput) (*appconfig.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *appconfig.TagResourceInput) *AppconfigTagResourceFuture

	UntagResource(ctx workflow.Context, input *appconfig.UntagResourceInput) (*appconfig.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *appconfig.UntagResourceInput) *AppconfigUntagResourceFuture

	UpdateApplication(ctx workflow.Context, input *appconfig.UpdateApplicationInput) (*appconfig.UpdateApplicationOutput, error)
	UpdateApplicationAsync(ctx workflow.Context, input *appconfig.UpdateApplicationInput) *AppconfigUpdateApplicationFuture

	UpdateConfigurationProfile(ctx workflow.Context, input *appconfig.UpdateConfigurationProfileInput) (*appconfig.UpdateConfigurationProfileOutput, error)
	UpdateConfigurationProfileAsync(ctx workflow.Context, input *appconfig.UpdateConfigurationProfileInput) *AppconfigUpdateConfigurationProfileFuture

	UpdateDeploymentStrategy(ctx workflow.Context, input *appconfig.UpdateDeploymentStrategyInput) (*appconfig.UpdateDeploymentStrategyOutput, error)
	UpdateDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.UpdateDeploymentStrategyInput) *AppconfigUpdateDeploymentStrategyFuture

	UpdateEnvironment(ctx workflow.Context, input *appconfig.UpdateEnvironmentInput) (*appconfig.UpdateEnvironmentOutput, error)
	UpdateEnvironmentAsync(ctx workflow.Context, input *appconfig.UpdateEnvironmentInput) *AppconfigUpdateEnvironmentFuture

	ValidateConfiguration(ctx workflow.Context, input *appconfig.ValidateConfigurationInput) (*appconfig.ValidateConfigurationOutput, error)
	ValidateConfigurationAsync(ctx workflow.Context, input *appconfig.ValidateConfigurationInput) *AppconfigValidateConfigurationFuture
}

type AppConfigStub struct{}

func NewAppConfigStub() AppConfigClient {
	return &AppConfigStub{}
}

type AppconfigCreateApplicationFuture struct {
	Future workflow.Future
}

func (r *AppconfigCreateApplicationFuture) Get(ctx workflow.Context) (*appconfig.CreateApplicationOutput, error) {
	var output appconfig.CreateApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigCreateConfigurationProfileFuture struct {
	Future workflow.Future
}

func (r *AppconfigCreateConfigurationProfileFuture) Get(ctx workflow.Context) (*appconfig.CreateConfigurationProfileOutput, error) {
	var output appconfig.CreateConfigurationProfileOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigCreateDeploymentStrategyFuture struct {
	Future workflow.Future
}

func (r *AppconfigCreateDeploymentStrategyFuture) Get(ctx workflow.Context) (*appconfig.CreateDeploymentStrategyOutput, error) {
	var output appconfig.CreateDeploymentStrategyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigCreateEnvironmentFuture struct {
	Future workflow.Future
}

func (r *AppconfigCreateEnvironmentFuture) Get(ctx workflow.Context) (*appconfig.CreateEnvironmentOutput, error) {
	var output appconfig.CreateEnvironmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigCreateHostedConfigurationVersionFuture struct {
	Future workflow.Future
}

func (r *AppconfigCreateHostedConfigurationVersionFuture) Get(ctx workflow.Context) (*appconfig.CreateHostedConfigurationVersionOutput, error) {
	var output appconfig.CreateHostedConfigurationVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigDeleteApplicationFuture struct {
	Future workflow.Future
}

func (r *AppconfigDeleteApplicationFuture) Get(ctx workflow.Context) (*appconfig.DeleteApplicationOutput, error) {
	var output appconfig.DeleteApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigDeleteConfigurationProfileFuture struct {
	Future workflow.Future
}

func (r *AppconfigDeleteConfigurationProfileFuture) Get(ctx workflow.Context) (*appconfig.DeleteConfigurationProfileOutput, error) {
	var output appconfig.DeleteConfigurationProfileOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigDeleteDeploymentStrategyFuture struct {
	Future workflow.Future
}

func (r *AppconfigDeleteDeploymentStrategyFuture) Get(ctx workflow.Context) (*appconfig.DeleteDeploymentStrategyOutput, error) {
	var output appconfig.DeleteDeploymentStrategyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigDeleteEnvironmentFuture struct {
	Future workflow.Future
}

func (r *AppconfigDeleteEnvironmentFuture) Get(ctx workflow.Context) (*appconfig.DeleteEnvironmentOutput, error) {
	var output appconfig.DeleteEnvironmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigDeleteHostedConfigurationVersionFuture struct {
	Future workflow.Future
}

func (r *AppconfigDeleteHostedConfigurationVersionFuture) Get(ctx workflow.Context) (*appconfig.DeleteHostedConfigurationVersionOutput, error) {
	var output appconfig.DeleteHostedConfigurationVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetApplicationFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetApplicationFuture) Get(ctx workflow.Context) (*appconfig.GetApplicationOutput, error) {
	var output appconfig.GetApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetConfigurationFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetConfigurationFuture) Get(ctx workflow.Context) (*appconfig.GetConfigurationOutput, error) {
	var output appconfig.GetConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetConfigurationProfileFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetConfigurationProfileFuture) Get(ctx workflow.Context) (*appconfig.GetConfigurationProfileOutput, error) {
	var output appconfig.GetConfigurationProfileOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetDeploymentFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetDeploymentFuture) Get(ctx workflow.Context) (*appconfig.GetDeploymentOutput, error) {
	var output appconfig.GetDeploymentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetDeploymentStrategyFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetDeploymentStrategyFuture) Get(ctx workflow.Context) (*appconfig.GetDeploymentStrategyOutput, error) {
	var output appconfig.GetDeploymentStrategyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetEnvironmentFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetEnvironmentFuture) Get(ctx workflow.Context) (*appconfig.GetEnvironmentOutput, error) {
	var output appconfig.GetEnvironmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigGetHostedConfigurationVersionFuture struct {
	Future workflow.Future
}

func (r *AppconfigGetHostedConfigurationVersionFuture) Get(ctx workflow.Context) (*appconfig.GetHostedConfigurationVersionOutput, error) {
	var output appconfig.GetHostedConfigurationVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListApplicationsFuture struct {
	Future workflow.Future
}

func (r *AppconfigListApplicationsFuture) Get(ctx workflow.Context) (*appconfig.ListApplicationsOutput, error) {
	var output appconfig.ListApplicationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListConfigurationProfilesFuture struct {
	Future workflow.Future
}

func (r *AppconfigListConfigurationProfilesFuture) Get(ctx workflow.Context) (*appconfig.ListConfigurationProfilesOutput, error) {
	var output appconfig.ListConfigurationProfilesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListDeploymentStrategiesFuture struct {
	Future workflow.Future
}

func (r *AppconfigListDeploymentStrategiesFuture) Get(ctx workflow.Context) (*appconfig.ListDeploymentStrategiesOutput, error) {
	var output appconfig.ListDeploymentStrategiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListDeploymentsFuture struct {
	Future workflow.Future
}

func (r *AppconfigListDeploymentsFuture) Get(ctx workflow.Context) (*appconfig.ListDeploymentsOutput, error) {
	var output appconfig.ListDeploymentsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListEnvironmentsFuture struct {
	Future workflow.Future
}

func (r *AppconfigListEnvironmentsFuture) Get(ctx workflow.Context) (*appconfig.ListEnvironmentsOutput, error) {
	var output appconfig.ListEnvironmentsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListHostedConfigurationVersionsFuture struct {
	Future workflow.Future
}

func (r *AppconfigListHostedConfigurationVersionsFuture) Get(ctx workflow.Context) (*appconfig.ListHostedConfigurationVersionsOutput, error) {
	var output appconfig.ListHostedConfigurationVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *AppconfigListTagsForResourceFuture) Get(ctx workflow.Context) (*appconfig.ListTagsForResourceOutput, error) {
	var output appconfig.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigStartDeploymentFuture struct {
	Future workflow.Future
}

func (r *AppconfigStartDeploymentFuture) Get(ctx workflow.Context) (*appconfig.StartDeploymentOutput, error) {
	var output appconfig.StartDeploymentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigStopDeploymentFuture struct {
	Future workflow.Future
}

func (r *AppconfigStopDeploymentFuture) Get(ctx workflow.Context) (*appconfig.StopDeploymentOutput, error) {
	var output appconfig.StopDeploymentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigTagResourceFuture struct {
	Future workflow.Future
}

func (r *AppconfigTagResourceFuture) Get(ctx workflow.Context) (*appconfig.TagResourceOutput, error) {
	var output appconfig.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigUntagResourceFuture struct {
	Future workflow.Future
}

func (r *AppconfigUntagResourceFuture) Get(ctx workflow.Context) (*appconfig.UntagResourceOutput, error) {
	var output appconfig.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigUpdateApplicationFuture struct {
	Future workflow.Future
}

func (r *AppconfigUpdateApplicationFuture) Get(ctx workflow.Context) (*appconfig.UpdateApplicationOutput, error) {
	var output appconfig.UpdateApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigUpdateConfigurationProfileFuture struct {
	Future workflow.Future
}

func (r *AppconfigUpdateConfigurationProfileFuture) Get(ctx workflow.Context) (*appconfig.UpdateConfigurationProfileOutput, error) {
	var output appconfig.UpdateConfigurationProfileOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigUpdateDeploymentStrategyFuture struct {
	Future workflow.Future
}

func (r *AppconfigUpdateDeploymentStrategyFuture) Get(ctx workflow.Context) (*appconfig.UpdateDeploymentStrategyOutput, error) {
	var output appconfig.UpdateDeploymentStrategyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigUpdateEnvironmentFuture struct {
	Future workflow.Future
}

func (r *AppconfigUpdateEnvironmentFuture) Get(ctx workflow.Context) (*appconfig.UpdateEnvironmentOutput, error) {
	var output appconfig.UpdateEnvironmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AppconfigValidateConfigurationFuture struct {
	Future workflow.Future
}

func (r *AppconfigValidateConfigurationFuture) Get(ctx workflow.Context) (*appconfig.ValidateConfigurationOutput, error) {
	var output appconfig.ValidateConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) CreateApplication(ctx workflow.Context, input *appconfig.CreateApplicationInput) (*appconfig.CreateApplicationOutput, error) {
	var output appconfig.CreateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) CreateApplicationAsync(ctx workflow.Context, input *appconfig.CreateApplicationInput) *AppconfigCreateApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateApplication", input)
	return &AppconfigCreateApplicationFuture{Future: future}
}

func (a *AppConfigStub) CreateConfigurationProfile(ctx workflow.Context, input *appconfig.CreateConfigurationProfileInput) (*appconfig.CreateConfigurationProfileOutput, error) {
	var output appconfig.CreateConfigurationProfileOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateConfigurationProfile", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) CreateConfigurationProfileAsync(ctx workflow.Context, input *appconfig.CreateConfigurationProfileInput) *AppconfigCreateConfigurationProfileFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateConfigurationProfile", input)
	return &AppconfigCreateConfigurationProfileFuture{Future: future}
}

func (a *AppConfigStub) CreateDeploymentStrategy(ctx workflow.Context, input *appconfig.CreateDeploymentStrategyInput) (*appconfig.CreateDeploymentStrategyOutput, error) {
	var output appconfig.CreateDeploymentStrategyOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateDeploymentStrategy", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) CreateDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.CreateDeploymentStrategyInput) *AppconfigCreateDeploymentStrategyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateDeploymentStrategy", input)
	return &AppconfigCreateDeploymentStrategyFuture{Future: future}
}

func (a *AppConfigStub) CreateEnvironment(ctx workflow.Context, input *appconfig.CreateEnvironmentInput) (*appconfig.CreateEnvironmentOutput, error) {
	var output appconfig.CreateEnvironmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateEnvironment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) CreateEnvironmentAsync(ctx workflow.Context, input *appconfig.CreateEnvironmentInput) *AppconfigCreateEnvironmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateEnvironment", input)
	return &AppconfigCreateEnvironmentFuture{Future: future}
}

func (a *AppConfigStub) CreateHostedConfigurationVersion(ctx workflow.Context, input *appconfig.CreateHostedConfigurationVersionInput) (*appconfig.CreateHostedConfigurationVersionOutput, error) {
	var output appconfig.CreateHostedConfigurationVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateHostedConfigurationVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) CreateHostedConfigurationVersionAsync(ctx workflow.Context, input *appconfig.CreateHostedConfigurationVersionInput) *AppconfigCreateHostedConfigurationVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.CreateHostedConfigurationVersion", input)
	return &AppconfigCreateHostedConfigurationVersionFuture{Future: future}
}

func (a *AppConfigStub) DeleteApplication(ctx workflow.Context, input *appconfig.DeleteApplicationInput) (*appconfig.DeleteApplicationOutput, error) {
	var output appconfig.DeleteApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) DeleteApplicationAsync(ctx workflow.Context, input *appconfig.DeleteApplicationInput) *AppconfigDeleteApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteApplication", input)
	return &AppconfigDeleteApplicationFuture{Future: future}
}

func (a *AppConfigStub) DeleteConfigurationProfile(ctx workflow.Context, input *appconfig.DeleteConfigurationProfileInput) (*appconfig.DeleteConfigurationProfileOutput, error) {
	var output appconfig.DeleteConfigurationProfileOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteConfigurationProfile", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) DeleteConfigurationProfileAsync(ctx workflow.Context, input *appconfig.DeleteConfigurationProfileInput) *AppconfigDeleteConfigurationProfileFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteConfigurationProfile", input)
	return &AppconfigDeleteConfigurationProfileFuture{Future: future}
}

func (a *AppConfigStub) DeleteDeploymentStrategy(ctx workflow.Context, input *appconfig.DeleteDeploymentStrategyInput) (*appconfig.DeleteDeploymentStrategyOutput, error) {
	var output appconfig.DeleteDeploymentStrategyOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteDeploymentStrategy", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) DeleteDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.DeleteDeploymentStrategyInput) *AppconfigDeleteDeploymentStrategyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteDeploymentStrategy", input)
	return &AppconfigDeleteDeploymentStrategyFuture{Future: future}
}

func (a *AppConfigStub) DeleteEnvironment(ctx workflow.Context, input *appconfig.DeleteEnvironmentInput) (*appconfig.DeleteEnvironmentOutput, error) {
	var output appconfig.DeleteEnvironmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteEnvironment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) DeleteEnvironmentAsync(ctx workflow.Context, input *appconfig.DeleteEnvironmentInput) *AppconfigDeleteEnvironmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteEnvironment", input)
	return &AppconfigDeleteEnvironmentFuture{Future: future}
}

func (a *AppConfigStub) DeleteHostedConfigurationVersion(ctx workflow.Context, input *appconfig.DeleteHostedConfigurationVersionInput) (*appconfig.DeleteHostedConfigurationVersionOutput, error) {
	var output appconfig.DeleteHostedConfigurationVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteHostedConfigurationVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) DeleteHostedConfigurationVersionAsync(ctx workflow.Context, input *appconfig.DeleteHostedConfigurationVersionInput) *AppconfigDeleteHostedConfigurationVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.DeleteHostedConfigurationVersion", input)
	return &AppconfigDeleteHostedConfigurationVersionFuture{Future: future}
}

func (a *AppConfigStub) GetApplication(ctx workflow.Context, input *appconfig.GetApplicationInput) (*appconfig.GetApplicationOutput, error) {
	var output appconfig.GetApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetApplicationAsync(ctx workflow.Context, input *appconfig.GetApplicationInput) *AppconfigGetApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetApplication", input)
	return &AppconfigGetApplicationFuture{Future: future}
}

func (a *AppConfigStub) GetConfiguration(ctx workflow.Context, input *appconfig.GetConfigurationInput) (*appconfig.GetConfigurationOutput, error) {
	var output appconfig.GetConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetConfigurationAsync(ctx workflow.Context, input *appconfig.GetConfigurationInput) *AppconfigGetConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetConfiguration", input)
	return &AppconfigGetConfigurationFuture{Future: future}
}

func (a *AppConfigStub) GetConfigurationProfile(ctx workflow.Context, input *appconfig.GetConfigurationProfileInput) (*appconfig.GetConfigurationProfileOutput, error) {
	var output appconfig.GetConfigurationProfileOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetConfigurationProfile", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetConfigurationProfileAsync(ctx workflow.Context, input *appconfig.GetConfigurationProfileInput) *AppconfigGetConfigurationProfileFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetConfigurationProfile", input)
	return &AppconfigGetConfigurationProfileFuture{Future: future}
}

func (a *AppConfigStub) GetDeployment(ctx workflow.Context, input *appconfig.GetDeploymentInput) (*appconfig.GetDeploymentOutput, error) {
	var output appconfig.GetDeploymentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetDeployment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetDeploymentAsync(ctx workflow.Context, input *appconfig.GetDeploymentInput) *AppconfigGetDeploymentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetDeployment", input)
	return &AppconfigGetDeploymentFuture{Future: future}
}

func (a *AppConfigStub) GetDeploymentStrategy(ctx workflow.Context, input *appconfig.GetDeploymentStrategyInput) (*appconfig.GetDeploymentStrategyOutput, error) {
	var output appconfig.GetDeploymentStrategyOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetDeploymentStrategy", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.GetDeploymentStrategyInput) *AppconfigGetDeploymentStrategyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetDeploymentStrategy", input)
	return &AppconfigGetDeploymentStrategyFuture{Future: future}
}

func (a *AppConfigStub) GetEnvironment(ctx workflow.Context, input *appconfig.GetEnvironmentInput) (*appconfig.GetEnvironmentOutput, error) {
	var output appconfig.GetEnvironmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetEnvironment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetEnvironmentAsync(ctx workflow.Context, input *appconfig.GetEnvironmentInput) *AppconfigGetEnvironmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetEnvironment", input)
	return &AppconfigGetEnvironmentFuture{Future: future}
}

func (a *AppConfigStub) GetHostedConfigurationVersion(ctx workflow.Context, input *appconfig.GetHostedConfigurationVersionInput) (*appconfig.GetHostedConfigurationVersionOutput, error) {
	var output appconfig.GetHostedConfigurationVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.GetHostedConfigurationVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) GetHostedConfigurationVersionAsync(ctx workflow.Context, input *appconfig.GetHostedConfigurationVersionInput) *AppconfigGetHostedConfigurationVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.GetHostedConfigurationVersion", input)
	return &AppconfigGetHostedConfigurationVersionFuture{Future: future}
}

func (a *AppConfigStub) ListApplications(ctx workflow.Context, input *appconfig.ListApplicationsInput) (*appconfig.ListApplicationsOutput, error) {
	var output appconfig.ListApplicationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListApplications", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListApplicationsAsync(ctx workflow.Context, input *appconfig.ListApplicationsInput) *AppconfigListApplicationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListApplications", input)
	return &AppconfigListApplicationsFuture{Future: future}
}

func (a *AppConfigStub) ListConfigurationProfiles(ctx workflow.Context, input *appconfig.ListConfigurationProfilesInput) (*appconfig.ListConfigurationProfilesOutput, error) {
	var output appconfig.ListConfigurationProfilesOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListConfigurationProfiles", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListConfigurationProfilesAsync(ctx workflow.Context, input *appconfig.ListConfigurationProfilesInput) *AppconfigListConfigurationProfilesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListConfigurationProfiles", input)
	return &AppconfigListConfigurationProfilesFuture{Future: future}
}

func (a *AppConfigStub) ListDeploymentStrategies(ctx workflow.Context, input *appconfig.ListDeploymentStrategiesInput) (*appconfig.ListDeploymentStrategiesOutput, error) {
	var output appconfig.ListDeploymentStrategiesOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListDeploymentStrategies", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListDeploymentStrategiesAsync(ctx workflow.Context, input *appconfig.ListDeploymentStrategiesInput) *AppconfigListDeploymentStrategiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListDeploymentStrategies", input)
	return &AppconfigListDeploymentStrategiesFuture{Future: future}
}

func (a *AppConfigStub) ListDeployments(ctx workflow.Context, input *appconfig.ListDeploymentsInput) (*appconfig.ListDeploymentsOutput, error) {
	var output appconfig.ListDeploymentsOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListDeployments", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListDeploymentsAsync(ctx workflow.Context, input *appconfig.ListDeploymentsInput) *AppconfigListDeploymentsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListDeployments", input)
	return &AppconfigListDeploymentsFuture{Future: future}
}

func (a *AppConfigStub) ListEnvironments(ctx workflow.Context, input *appconfig.ListEnvironmentsInput) (*appconfig.ListEnvironmentsOutput, error) {
	var output appconfig.ListEnvironmentsOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListEnvironments", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListEnvironmentsAsync(ctx workflow.Context, input *appconfig.ListEnvironmentsInput) *AppconfigListEnvironmentsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListEnvironments", input)
	return &AppconfigListEnvironmentsFuture{Future: future}
}

func (a *AppConfigStub) ListHostedConfigurationVersions(ctx workflow.Context, input *appconfig.ListHostedConfigurationVersionsInput) (*appconfig.ListHostedConfigurationVersionsOutput, error) {
	var output appconfig.ListHostedConfigurationVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListHostedConfigurationVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListHostedConfigurationVersionsAsync(ctx workflow.Context, input *appconfig.ListHostedConfigurationVersionsInput) *AppconfigListHostedConfigurationVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListHostedConfigurationVersions", input)
	return &AppconfigListHostedConfigurationVersionsFuture{Future: future}
}

func (a *AppConfigStub) ListTagsForResource(ctx workflow.Context, input *appconfig.ListTagsForResourceInput) (*appconfig.ListTagsForResourceOutput, error) {
	var output appconfig.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ListTagsForResourceAsync(ctx workflow.Context, input *appconfig.ListTagsForResourceInput) *AppconfigListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ListTagsForResource", input)
	return &AppconfigListTagsForResourceFuture{Future: future}
}

func (a *AppConfigStub) StartDeployment(ctx workflow.Context, input *appconfig.StartDeploymentInput) (*appconfig.StartDeploymentOutput, error) {
	var output appconfig.StartDeploymentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.StartDeployment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) StartDeploymentAsync(ctx workflow.Context, input *appconfig.StartDeploymentInput) *AppconfigStartDeploymentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.StartDeployment", input)
	return &AppconfigStartDeploymentFuture{Future: future}
}

func (a *AppConfigStub) StopDeployment(ctx workflow.Context, input *appconfig.StopDeploymentInput) (*appconfig.StopDeploymentOutput, error) {
	var output appconfig.StopDeploymentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.StopDeployment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) StopDeploymentAsync(ctx workflow.Context, input *appconfig.StopDeploymentInput) *AppconfigStopDeploymentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.StopDeployment", input)
	return &AppconfigStopDeploymentFuture{Future: future}
}

func (a *AppConfigStub) TagResource(ctx workflow.Context, input *appconfig.TagResourceInput) (*appconfig.TagResourceOutput, error) {
	var output appconfig.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) TagResourceAsync(ctx workflow.Context, input *appconfig.TagResourceInput) *AppconfigTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.TagResource", input)
	return &AppconfigTagResourceFuture{Future: future}
}

func (a *AppConfigStub) UntagResource(ctx workflow.Context, input *appconfig.UntagResourceInput) (*appconfig.UntagResourceOutput, error) {
	var output appconfig.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) UntagResourceAsync(ctx workflow.Context, input *appconfig.UntagResourceInput) *AppconfigUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.UntagResource", input)
	return &AppconfigUntagResourceFuture{Future: future}
}

func (a *AppConfigStub) UpdateApplication(ctx workflow.Context, input *appconfig.UpdateApplicationInput) (*appconfig.UpdateApplicationOutput, error) {
	var output appconfig.UpdateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) UpdateApplicationAsync(ctx workflow.Context, input *appconfig.UpdateApplicationInput) *AppconfigUpdateApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateApplication", input)
	return &AppconfigUpdateApplicationFuture{Future: future}
}

func (a *AppConfigStub) UpdateConfigurationProfile(ctx workflow.Context, input *appconfig.UpdateConfigurationProfileInput) (*appconfig.UpdateConfigurationProfileOutput, error) {
	var output appconfig.UpdateConfigurationProfileOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateConfigurationProfile", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) UpdateConfigurationProfileAsync(ctx workflow.Context, input *appconfig.UpdateConfigurationProfileInput) *AppconfigUpdateConfigurationProfileFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateConfigurationProfile", input)
	return &AppconfigUpdateConfigurationProfileFuture{Future: future}
}

func (a *AppConfigStub) UpdateDeploymentStrategy(ctx workflow.Context, input *appconfig.UpdateDeploymentStrategyInput) (*appconfig.UpdateDeploymentStrategyOutput, error) {
	var output appconfig.UpdateDeploymentStrategyOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateDeploymentStrategy", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) UpdateDeploymentStrategyAsync(ctx workflow.Context, input *appconfig.UpdateDeploymentStrategyInput) *AppconfigUpdateDeploymentStrategyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateDeploymentStrategy", input)
	return &AppconfigUpdateDeploymentStrategyFuture{Future: future}
}

func (a *AppConfigStub) UpdateEnvironment(ctx workflow.Context, input *appconfig.UpdateEnvironmentInput) (*appconfig.UpdateEnvironmentOutput, error) {
	var output appconfig.UpdateEnvironmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateEnvironment", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) UpdateEnvironmentAsync(ctx workflow.Context, input *appconfig.UpdateEnvironmentInput) *AppconfigUpdateEnvironmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.UpdateEnvironment", input)
	return &AppconfigUpdateEnvironmentFuture{Future: future}
}

func (a *AppConfigStub) ValidateConfiguration(ctx workflow.Context, input *appconfig.ValidateConfigurationInput) (*appconfig.ValidateConfigurationOutput, error) {
	var output appconfig.ValidateConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.appconfig.ValidateConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *AppConfigStub) ValidateConfigurationAsync(ctx workflow.Context, input *appconfig.ValidateConfigurationInput) *AppconfigValidateConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.appconfig.ValidateConfiguration", input)
	return &AppconfigValidateConfigurationFuture{Future: future}
}
