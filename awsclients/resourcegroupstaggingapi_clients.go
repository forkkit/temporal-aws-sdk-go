// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/resourcegroupstaggingapi"
	"go.temporal.io/sdk/workflow"
)

type ResourceGroupsTaggingAPIClient interface {
	DescribeReportCreation(ctx workflow.Context, input *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error)
	DescribeReportCreationAsync(ctx workflow.Context, input *resourcegroupstaggingapi.DescribeReportCreationInput) *ResourcegroupstaggingapiDescribeReportCreationFuture

	GetComplianceSummary(ctx workflow.Context, input *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error)
	GetComplianceSummaryAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetComplianceSummaryInput) *ResourcegroupstaggingapiGetComplianceSummaryFuture

	GetResources(ctx workflow.Context, input *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error)
	GetResourcesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetResourcesInput) *ResourcegroupstaggingapiGetResourcesFuture

	GetTagKeys(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error)
	GetTagKeysAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagKeysInput) *ResourcegroupstaggingapiGetTagKeysFuture

	GetTagValues(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error)
	GetTagValuesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagValuesInput) *ResourcegroupstaggingapiGetTagValuesFuture

	StartReportCreation(ctx workflow.Context, input *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error)
	StartReportCreationAsync(ctx workflow.Context, input *resourcegroupstaggingapi.StartReportCreationInput) *ResourcegroupstaggingapiStartReportCreationFuture

	TagResources(ctx workflow.Context, input *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error)
	TagResourcesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.TagResourcesInput) *ResourcegroupstaggingapiTagResourcesFuture

	UntagResources(ctx workflow.Context, input *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error)
	UntagResourcesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.UntagResourcesInput) *ResourcegroupstaggingapiUntagResourcesFuture
}

type ResourceGroupsTaggingAPIStub struct{}

func NewResourceGroupsTaggingAPIStub() ResourceGroupsTaggingAPIClient {
	return &ResourceGroupsTaggingAPIStub{}
}

type ResourcegroupstaggingapiDescribeReportCreationFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiDescribeReportCreationFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
	var output resourcegroupstaggingapi.DescribeReportCreationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiGetComplianceSummaryFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiGetComplianceSummaryFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
	var output resourcegroupstaggingapi.GetComplianceSummaryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiGetResourcesFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiGetResourcesFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	var output resourcegroupstaggingapi.GetResourcesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiGetTagKeysFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiGetTagKeysFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
	var output resourcegroupstaggingapi.GetTagKeysOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiGetTagValuesFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiGetTagValuesFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
	var output resourcegroupstaggingapi.GetTagValuesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiStartReportCreationFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiStartReportCreationFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
	var output resourcegroupstaggingapi.StartReportCreationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiTagResourcesFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiTagResourcesFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	var output resourcegroupstaggingapi.TagResourcesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ResourcegroupstaggingapiUntagResourcesFuture struct {
	Future workflow.Future
}

func (r *ResourcegroupstaggingapiUntagResourcesFuture) Get(ctx workflow.Context) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	var output resourcegroupstaggingapi.UntagResourcesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) DescribeReportCreation(ctx workflow.Context, input *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
	var output resourcegroupstaggingapi.DescribeReportCreationOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.DescribeReportCreation", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) DescribeReportCreationAsync(ctx workflow.Context, input *resourcegroupstaggingapi.DescribeReportCreationInput) *ResourcegroupstaggingapiDescribeReportCreationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.DescribeReportCreation", input)
	return &ResourcegroupstaggingapiDescribeReportCreationFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) GetComplianceSummary(ctx workflow.Context, input *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
	var output resourcegroupstaggingapi.GetComplianceSummaryOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetComplianceSummary", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) GetComplianceSummaryAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetComplianceSummaryInput) *ResourcegroupstaggingapiGetComplianceSummaryFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetComplianceSummary", input)
	return &ResourcegroupstaggingapiGetComplianceSummaryFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) GetResources(ctx workflow.Context, input *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	var output resourcegroupstaggingapi.GetResourcesOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetResources", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) GetResourcesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetResourcesInput) *ResourcegroupstaggingapiGetResourcesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetResources", input)
	return &ResourcegroupstaggingapiGetResourcesFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) GetTagKeys(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
	var output resourcegroupstaggingapi.GetTagKeysOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetTagKeys", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) GetTagKeysAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagKeysInput) *ResourcegroupstaggingapiGetTagKeysFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetTagKeys", input)
	return &ResourcegroupstaggingapiGetTagKeysFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) GetTagValues(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
	var output resourcegroupstaggingapi.GetTagValuesOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetTagValues", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) GetTagValuesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.GetTagValuesInput) *ResourcegroupstaggingapiGetTagValuesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.GetTagValues", input)
	return &ResourcegroupstaggingapiGetTagValuesFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) StartReportCreation(ctx workflow.Context, input *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
	var output resourcegroupstaggingapi.StartReportCreationOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.StartReportCreation", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) StartReportCreationAsync(ctx workflow.Context, input *resourcegroupstaggingapi.StartReportCreationInput) *ResourcegroupstaggingapiStartReportCreationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.StartReportCreation", input)
	return &ResourcegroupstaggingapiStartReportCreationFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) TagResources(ctx workflow.Context, input *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	var output resourcegroupstaggingapi.TagResourcesOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.TagResources", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) TagResourcesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.TagResourcesInput) *ResourcegroupstaggingapiTagResourcesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.TagResources", input)
	return &ResourcegroupstaggingapiTagResourcesFuture{Future: future}
}

func (a *ResourceGroupsTaggingAPIStub) UntagResources(ctx workflow.Context, input *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	var output resourcegroupstaggingapi.UntagResourcesOutput
	err := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.UntagResources", input).Get(ctx, &output)
	return &output, err
}

func (a *ResourceGroupsTaggingAPIStub) UntagResourcesAsync(ctx workflow.Context, input *resourcegroupstaggingapi.UntagResourcesInput) *ResourcegroupstaggingapiUntagResourcesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.resourcegroupstaggingapi.UntagResources", input)
	return &ResourcegroupstaggingapiUntagResourcesFuture{Future: future}
}
