// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/codestarconnections"
	"go.temporal.io/sdk/workflow"
)

type CodeStarConnectionsClient interface {
	CreateConnection(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) (*codestarconnections.CreateConnectionOutput, error)
	CreateConnectionAsync(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) *CodeStarConnectionsCreateConnectionFuture

	CreateHost(ctx workflow.Context, input *codestarconnections.CreateHostInput) (*codestarconnections.CreateHostOutput, error)
	CreateHostAsync(ctx workflow.Context, input *codestarconnections.CreateHostInput) *CodeStarConnectionsCreateHostFuture

	DeleteConnection(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) (*codestarconnections.DeleteConnectionOutput, error)
	DeleteConnectionAsync(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) *CodeStarConnectionsDeleteConnectionFuture

	DeleteHost(ctx workflow.Context, input *codestarconnections.DeleteHostInput) (*codestarconnections.DeleteHostOutput, error)
	DeleteHostAsync(ctx workflow.Context, input *codestarconnections.DeleteHostInput) *CodeStarConnectionsDeleteHostFuture

	GetConnection(ctx workflow.Context, input *codestarconnections.GetConnectionInput) (*codestarconnections.GetConnectionOutput, error)
	GetConnectionAsync(ctx workflow.Context, input *codestarconnections.GetConnectionInput) *CodeStarConnectionsGetConnectionFuture

	GetHost(ctx workflow.Context, input *codestarconnections.GetHostInput) (*codestarconnections.GetHostOutput, error)
	GetHostAsync(ctx workflow.Context, input *codestarconnections.GetHostInput) *CodeStarConnectionsGetHostFuture

	ListConnections(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) (*codestarconnections.ListConnectionsOutput, error)
	ListConnectionsAsync(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) *CodeStarConnectionsListConnectionsFuture

	ListHosts(ctx workflow.Context, input *codestarconnections.ListHostsInput) (*codestarconnections.ListHostsOutput, error)
	ListHostsAsync(ctx workflow.Context, input *codestarconnections.ListHostsInput) *CodeStarConnectionsListHostsFuture

	ListTagsForResource(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) (*codestarconnections.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) *CodeStarConnectionsListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *codestarconnections.TagResourceInput) (*codestarconnections.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *codestarconnections.TagResourceInput) *CodeStarConnectionsTagResourceFuture

	UntagResource(ctx workflow.Context, input *codestarconnections.UntagResourceInput) (*codestarconnections.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *codestarconnections.UntagResourceInput) *CodeStarConnectionsUntagResourceFuture
}

type CodeStarConnectionsStub struct{}

func NewCodeStarConnectionsStub() CodeStarConnectionsClient {
	return &CodeStarConnectionsStub{}
}

type CodeStarConnectionsCreateConnectionFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsCreateConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.CreateConnectionOutput, error) {
	var output codestarconnections.CreateConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsCreateHostFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsCreateHostFuture) Get(ctx workflow.Context) (*codestarconnections.CreateHostOutput, error) {
	var output codestarconnections.CreateHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsDeleteConnectionFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsDeleteConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.DeleteConnectionOutput, error) {
	var output codestarconnections.DeleteConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsDeleteHostFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsDeleteHostFuture) Get(ctx workflow.Context) (*codestarconnections.DeleteHostOutput, error) {
	var output codestarconnections.DeleteHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsGetConnectionFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsGetConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.GetConnectionOutput, error) {
	var output codestarconnections.GetConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsGetHostFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsGetHostFuture) Get(ctx workflow.Context) (*codestarconnections.GetHostOutput, error) {
	var output codestarconnections.GetHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsListConnectionsFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsListConnectionsFuture) Get(ctx workflow.Context) (*codestarconnections.ListConnectionsOutput, error) {
	var output codestarconnections.ListConnectionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsListHostsFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsListHostsFuture) Get(ctx workflow.Context) (*codestarconnections.ListHostsOutput, error) {
	var output codestarconnections.ListHostsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsListTagsForResourceFuture) Get(ctx workflow.Context) (*codestarconnections.ListTagsForResourceOutput, error) {
	var output codestarconnections.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsTagResourceFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsTagResourceFuture) Get(ctx workflow.Context) (*codestarconnections.TagResourceOutput, error) {
	var output codestarconnections.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeStarConnectionsUntagResourceFuture struct {
	Future workflow.Future
}

func (r *CodeStarConnectionsUntagResourceFuture) Get(ctx workflow.Context) (*codestarconnections.UntagResourceOutput, error) {
	var output codestarconnections.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) CreateConnection(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) (*codestarconnections.CreateConnectionOutput, error) {
	var output codestarconnections.CreateConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) CreateConnectionAsync(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) *CodeStarConnectionsCreateConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateConnection", input)
	return &CodeStarConnectionsCreateConnectionFuture{Future: future}
}

func (a *CodeStarConnectionsStub) CreateHost(ctx workflow.Context, input *codestarconnections.CreateHostInput) (*codestarconnections.CreateHostOutput, error) {
	var output codestarconnections.CreateHostOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateHost", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) CreateHostAsync(ctx workflow.Context, input *codestarconnections.CreateHostInput) *CodeStarConnectionsCreateHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateHost", input)
	return &CodeStarConnectionsCreateHostFuture{Future: future}
}

func (a *CodeStarConnectionsStub) DeleteConnection(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) (*codestarconnections.DeleteConnectionOutput, error) {
	var output codestarconnections.DeleteConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) DeleteConnectionAsync(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) *CodeStarConnectionsDeleteConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteConnection", input)
	return &CodeStarConnectionsDeleteConnectionFuture{Future: future}
}

func (a *CodeStarConnectionsStub) DeleteHost(ctx workflow.Context, input *codestarconnections.DeleteHostInput) (*codestarconnections.DeleteHostOutput, error) {
	var output codestarconnections.DeleteHostOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteHost", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) DeleteHostAsync(ctx workflow.Context, input *codestarconnections.DeleteHostInput) *CodeStarConnectionsDeleteHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteHost", input)
	return &CodeStarConnectionsDeleteHostFuture{Future: future}
}

func (a *CodeStarConnectionsStub) GetConnection(ctx workflow.Context, input *codestarconnections.GetConnectionInput) (*codestarconnections.GetConnectionOutput, error) {
	var output codestarconnections.GetConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) GetConnectionAsync(ctx workflow.Context, input *codestarconnections.GetConnectionInput) *CodeStarConnectionsGetConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetConnection", input)
	return &CodeStarConnectionsGetConnectionFuture{Future: future}
}

func (a *CodeStarConnectionsStub) GetHost(ctx workflow.Context, input *codestarconnections.GetHostInput) (*codestarconnections.GetHostOutput, error) {
	var output codestarconnections.GetHostOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetHost", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) GetHostAsync(ctx workflow.Context, input *codestarconnections.GetHostInput) *CodeStarConnectionsGetHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetHost", input)
	return &CodeStarConnectionsGetHostFuture{Future: future}
}

func (a *CodeStarConnectionsStub) ListConnections(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) (*codestarconnections.ListConnectionsOutput, error) {
	var output codestarconnections.ListConnectionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListConnections", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) ListConnectionsAsync(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) *CodeStarConnectionsListConnectionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListConnections", input)
	return &CodeStarConnectionsListConnectionsFuture{Future: future}
}

func (a *CodeStarConnectionsStub) ListHosts(ctx workflow.Context, input *codestarconnections.ListHostsInput) (*codestarconnections.ListHostsOutput, error) {
	var output codestarconnections.ListHostsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListHosts", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) ListHostsAsync(ctx workflow.Context, input *codestarconnections.ListHostsInput) *CodeStarConnectionsListHostsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListHosts", input)
	return &CodeStarConnectionsListHostsFuture{Future: future}
}

func (a *CodeStarConnectionsStub) ListTagsForResource(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) (*codestarconnections.ListTagsForResourceOutput, error) {
	var output codestarconnections.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) ListTagsForResourceAsync(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) *CodeStarConnectionsListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListTagsForResource", input)
	return &CodeStarConnectionsListTagsForResourceFuture{Future: future}
}

func (a *CodeStarConnectionsStub) TagResource(ctx workflow.Context, input *codestarconnections.TagResourceInput) (*codestarconnections.TagResourceOutput, error) {
	var output codestarconnections.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) TagResourceAsync(ctx workflow.Context, input *codestarconnections.TagResourceInput) *CodeStarConnectionsTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.TagResource", input)
	return &CodeStarConnectionsTagResourceFuture{Future: future}
}

func (a *CodeStarConnectionsStub) UntagResource(ctx workflow.Context, input *codestarconnections.UntagResourceInput) (*codestarconnections.UntagResourceOutput, error) {
	var output codestarconnections.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) UntagResourceAsync(ctx workflow.Context, input *codestarconnections.UntagResourceInput) *CodeStarConnectionsUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.UntagResource", input)
	return &CodeStarConnectionsUntagResourceFuture{Future: future}
}
