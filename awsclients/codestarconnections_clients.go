// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/codestarconnections"
	"go.temporal.io/sdk/workflow"
)

type CodeStarConnectionsClient interface {
	CreateConnection(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) (*codestarconnections.CreateConnectionOutput, error)
	CreateConnectionAsync(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) *CodestarconnectionsCreateConnectionFuture

	CreateHost(ctx workflow.Context, input *codestarconnections.CreateHostInput) (*codestarconnections.CreateHostOutput, error)
	CreateHostAsync(ctx workflow.Context, input *codestarconnections.CreateHostInput) *CodestarconnectionsCreateHostFuture

	DeleteConnection(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) (*codestarconnections.DeleteConnectionOutput, error)
	DeleteConnectionAsync(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) *CodestarconnectionsDeleteConnectionFuture

	DeleteHost(ctx workflow.Context, input *codestarconnections.DeleteHostInput) (*codestarconnections.DeleteHostOutput, error)
	DeleteHostAsync(ctx workflow.Context, input *codestarconnections.DeleteHostInput) *CodestarconnectionsDeleteHostFuture

	GetConnection(ctx workflow.Context, input *codestarconnections.GetConnectionInput) (*codestarconnections.GetConnectionOutput, error)
	GetConnectionAsync(ctx workflow.Context, input *codestarconnections.GetConnectionInput) *CodestarconnectionsGetConnectionFuture

	GetHost(ctx workflow.Context, input *codestarconnections.GetHostInput) (*codestarconnections.GetHostOutput, error)
	GetHostAsync(ctx workflow.Context, input *codestarconnections.GetHostInput) *CodestarconnectionsGetHostFuture

	ListConnections(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) (*codestarconnections.ListConnectionsOutput, error)
	ListConnectionsAsync(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) *CodestarconnectionsListConnectionsFuture

	ListHosts(ctx workflow.Context, input *codestarconnections.ListHostsInput) (*codestarconnections.ListHostsOutput, error)
	ListHostsAsync(ctx workflow.Context, input *codestarconnections.ListHostsInput) *CodestarconnectionsListHostsFuture

	ListTagsForResource(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) (*codestarconnections.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) *CodestarconnectionsListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *codestarconnections.TagResourceInput) (*codestarconnections.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *codestarconnections.TagResourceInput) *CodestarconnectionsTagResourceFuture

	UntagResource(ctx workflow.Context, input *codestarconnections.UntagResourceInput) (*codestarconnections.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *codestarconnections.UntagResourceInput) *CodestarconnectionsUntagResourceFuture
}

type CodeStarConnectionsStub struct{}

func NewCodeStarConnectionsStub() CodeStarConnectionsClient {
	return &CodeStarConnectionsStub{}
}

type CodestarconnectionsCreateConnectionFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsCreateConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.CreateConnectionOutput, error) {
	var output codestarconnections.CreateConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsCreateHostFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsCreateHostFuture) Get(ctx workflow.Context) (*codestarconnections.CreateHostOutput, error) {
	var output codestarconnections.CreateHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsDeleteConnectionFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsDeleteConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.DeleteConnectionOutput, error) {
	var output codestarconnections.DeleteConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsDeleteHostFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsDeleteHostFuture) Get(ctx workflow.Context) (*codestarconnections.DeleteHostOutput, error) {
	var output codestarconnections.DeleteHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsGetConnectionFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsGetConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.GetConnectionOutput, error) {
	var output codestarconnections.GetConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsGetHostFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsGetHostFuture) Get(ctx workflow.Context) (*codestarconnections.GetHostOutput, error) {
	var output codestarconnections.GetHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsListConnectionsFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsListConnectionsFuture) Get(ctx workflow.Context) (*codestarconnections.ListConnectionsOutput, error) {
	var output codestarconnections.ListConnectionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsListHostsFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsListHostsFuture) Get(ctx workflow.Context) (*codestarconnections.ListHostsOutput, error) {
	var output codestarconnections.ListHostsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsListTagsForResourceFuture) Get(ctx workflow.Context) (*codestarconnections.ListTagsForResourceOutput, error) {
	var output codestarconnections.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsTagResourceFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsTagResourceFuture) Get(ctx workflow.Context) (*codestarconnections.TagResourceOutput, error) {
	var output codestarconnections.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodestarconnectionsUntagResourceFuture struct {
	Future workflow.Future
}

func (r *CodestarconnectionsUntagResourceFuture) Get(ctx workflow.Context) (*codestarconnections.UntagResourceOutput, error) {
	var output codestarconnections.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) CreateConnection(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) (*codestarconnections.CreateConnectionOutput, error) {
	var output codestarconnections.CreateConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) CreateConnectionAsync(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) *CodestarconnectionsCreateConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateConnection", input)
	return &CodestarconnectionsCreateConnectionFuture{Future: future}
}

func (a *CodeStarConnectionsStub) CreateHost(ctx workflow.Context, input *codestarconnections.CreateHostInput) (*codestarconnections.CreateHostOutput, error) {
	var output codestarconnections.CreateHostOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateHost", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) CreateHostAsync(ctx workflow.Context, input *codestarconnections.CreateHostInput) *CodestarconnectionsCreateHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.CreateHost", input)
	return &CodestarconnectionsCreateHostFuture{Future: future}
}

func (a *CodeStarConnectionsStub) DeleteConnection(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) (*codestarconnections.DeleteConnectionOutput, error) {
	var output codestarconnections.DeleteConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) DeleteConnectionAsync(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) *CodestarconnectionsDeleteConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteConnection", input)
	return &CodestarconnectionsDeleteConnectionFuture{Future: future}
}

func (a *CodeStarConnectionsStub) DeleteHost(ctx workflow.Context, input *codestarconnections.DeleteHostInput) (*codestarconnections.DeleteHostOutput, error) {
	var output codestarconnections.DeleteHostOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteHost", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) DeleteHostAsync(ctx workflow.Context, input *codestarconnections.DeleteHostInput) *CodestarconnectionsDeleteHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.DeleteHost", input)
	return &CodestarconnectionsDeleteHostFuture{Future: future}
}

func (a *CodeStarConnectionsStub) GetConnection(ctx workflow.Context, input *codestarconnections.GetConnectionInput) (*codestarconnections.GetConnectionOutput, error) {
	var output codestarconnections.GetConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) GetConnectionAsync(ctx workflow.Context, input *codestarconnections.GetConnectionInput) *CodestarconnectionsGetConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetConnection", input)
	return &CodestarconnectionsGetConnectionFuture{Future: future}
}

func (a *CodeStarConnectionsStub) GetHost(ctx workflow.Context, input *codestarconnections.GetHostInput) (*codestarconnections.GetHostOutput, error) {
	var output codestarconnections.GetHostOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetHost", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) GetHostAsync(ctx workflow.Context, input *codestarconnections.GetHostInput) *CodestarconnectionsGetHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.GetHost", input)
	return &CodestarconnectionsGetHostFuture{Future: future}
}

func (a *CodeStarConnectionsStub) ListConnections(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) (*codestarconnections.ListConnectionsOutput, error) {
	var output codestarconnections.ListConnectionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListConnections", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) ListConnectionsAsync(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) *CodestarconnectionsListConnectionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListConnections", input)
	return &CodestarconnectionsListConnectionsFuture{Future: future}
}

func (a *CodeStarConnectionsStub) ListHosts(ctx workflow.Context, input *codestarconnections.ListHostsInput) (*codestarconnections.ListHostsOutput, error) {
	var output codestarconnections.ListHostsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListHosts", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) ListHostsAsync(ctx workflow.Context, input *codestarconnections.ListHostsInput) *CodestarconnectionsListHostsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListHosts", input)
	return &CodestarconnectionsListHostsFuture{Future: future}
}

func (a *CodeStarConnectionsStub) ListTagsForResource(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) (*codestarconnections.ListTagsForResourceOutput, error) {
	var output codestarconnections.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) ListTagsForResourceAsync(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) *CodestarconnectionsListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.ListTagsForResource", input)
	return &CodestarconnectionsListTagsForResourceFuture{Future: future}
}

func (a *CodeStarConnectionsStub) TagResource(ctx workflow.Context, input *codestarconnections.TagResourceInput) (*codestarconnections.TagResourceOutput, error) {
	var output codestarconnections.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) TagResourceAsync(ctx workflow.Context, input *codestarconnections.TagResourceInput) *CodestarconnectionsTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.TagResource", input)
	return &CodestarconnectionsTagResourceFuture{Future: future}
}

func (a *CodeStarConnectionsStub) UntagResource(ctx workflow.Context, input *codestarconnections.UntagResourceInput) (*codestarconnections.UntagResourceOutput, error) {
	var output codestarconnections.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codestarconnections.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeStarConnectionsStub) UntagResourceAsync(ctx workflow.Context, input *codestarconnections.UntagResourceInput) *CodestarconnectionsUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codestarconnections.UntagResource", input)
	return &CodestarconnectionsUntagResourceFuture{Future: future}
}
