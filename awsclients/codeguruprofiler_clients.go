// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/codeguruprofiler"
	"go.temporal.io/sdk/workflow"
)

type CodeGuruProfilerClient interface {
	AddNotificationChannels(ctx workflow.Context, input *codeguruprofiler.AddNotificationChannelsInput) (*codeguruprofiler.AddNotificationChannelsOutput, error)
	AddNotificationChannelsAsync(ctx workflow.Context, input *codeguruprofiler.AddNotificationChannelsInput) *CodeguruprofilerAddNotificationChannelsFuture

	BatchGetFrameMetricData(ctx workflow.Context, input *codeguruprofiler.BatchGetFrameMetricDataInput) (*codeguruprofiler.BatchGetFrameMetricDataOutput, error)
	BatchGetFrameMetricDataAsync(ctx workflow.Context, input *codeguruprofiler.BatchGetFrameMetricDataInput) *CodeguruprofilerBatchGetFrameMetricDataFuture

	ConfigureAgent(ctx workflow.Context, input *codeguruprofiler.ConfigureAgentInput) (*codeguruprofiler.ConfigureAgentOutput, error)
	ConfigureAgentAsync(ctx workflow.Context, input *codeguruprofiler.ConfigureAgentInput) *CodeguruprofilerConfigureAgentFuture

	CreateProfilingGroup(ctx workflow.Context, input *codeguruprofiler.CreateProfilingGroupInput) (*codeguruprofiler.CreateProfilingGroupOutput, error)
	CreateProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.CreateProfilingGroupInput) *CodeguruprofilerCreateProfilingGroupFuture

	DeleteProfilingGroup(ctx workflow.Context, input *codeguruprofiler.DeleteProfilingGroupInput) (*codeguruprofiler.DeleteProfilingGroupOutput, error)
	DeleteProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.DeleteProfilingGroupInput) *CodeguruprofilerDeleteProfilingGroupFuture

	DescribeProfilingGroup(ctx workflow.Context, input *codeguruprofiler.DescribeProfilingGroupInput) (*codeguruprofiler.DescribeProfilingGroupOutput, error)
	DescribeProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.DescribeProfilingGroupInput) *CodeguruprofilerDescribeProfilingGroupFuture

	GetFindingsReportAccountSummary(ctx workflow.Context, input *codeguruprofiler.GetFindingsReportAccountSummaryInput) (*codeguruprofiler.GetFindingsReportAccountSummaryOutput, error)
	GetFindingsReportAccountSummaryAsync(ctx workflow.Context, input *codeguruprofiler.GetFindingsReportAccountSummaryInput) *CodeguruprofilerGetFindingsReportAccountSummaryFuture

	GetNotificationConfiguration(ctx workflow.Context, input *codeguruprofiler.GetNotificationConfigurationInput) (*codeguruprofiler.GetNotificationConfigurationOutput, error)
	GetNotificationConfigurationAsync(ctx workflow.Context, input *codeguruprofiler.GetNotificationConfigurationInput) *CodeguruprofilerGetNotificationConfigurationFuture

	GetPolicy(ctx workflow.Context, input *codeguruprofiler.GetPolicyInput) (*codeguruprofiler.GetPolicyOutput, error)
	GetPolicyAsync(ctx workflow.Context, input *codeguruprofiler.GetPolicyInput) *CodeguruprofilerGetPolicyFuture

	GetProfile(ctx workflow.Context, input *codeguruprofiler.GetProfileInput) (*codeguruprofiler.GetProfileOutput, error)
	GetProfileAsync(ctx workflow.Context, input *codeguruprofiler.GetProfileInput) *CodeguruprofilerGetProfileFuture

	GetRecommendations(ctx workflow.Context, input *codeguruprofiler.GetRecommendationsInput) (*codeguruprofiler.GetRecommendationsOutput, error)
	GetRecommendationsAsync(ctx workflow.Context, input *codeguruprofiler.GetRecommendationsInput) *CodeguruprofilerGetRecommendationsFuture

	ListFindingsReports(ctx workflow.Context, input *codeguruprofiler.ListFindingsReportsInput) (*codeguruprofiler.ListFindingsReportsOutput, error)
	ListFindingsReportsAsync(ctx workflow.Context, input *codeguruprofiler.ListFindingsReportsInput) *CodeguruprofilerListFindingsReportsFuture

	ListProfileTimes(ctx workflow.Context, input *codeguruprofiler.ListProfileTimesInput) (*codeguruprofiler.ListProfileTimesOutput, error)
	ListProfileTimesAsync(ctx workflow.Context, input *codeguruprofiler.ListProfileTimesInput) *CodeguruprofilerListProfileTimesFuture

	ListProfilingGroups(ctx workflow.Context, input *codeguruprofiler.ListProfilingGroupsInput) (*codeguruprofiler.ListProfilingGroupsOutput, error)
	ListProfilingGroupsAsync(ctx workflow.Context, input *codeguruprofiler.ListProfilingGroupsInput) *CodeguruprofilerListProfilingGroupsFuture

	ListTagsForResource(ctx workflow.Context, input *codeguruprofiler.ListTagsForResourceInput) (*codeguruprofiler.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *codeguruprofiler.ListTagsForResourceInput) *CodeguruprofilerListTagsForResourceFuture

	PostAgentProfile(ctx workflow.Context, input *codeguruprofiler.PostAgentProfileInput) (*codeguruprofiler.PostAgentProfileOutput, error)
	PostAgentProfileAsync(ctx workflow.Context, input *codeguruprofiler.PostAgentProfileInput) *CodeguruprofilerPostAgentProfileFuture

	PutPermission(ctx workflow.Context, input *codeguruprofiler.PutPermissionInput) (*codeguruprofiler.PutPermissionOutput, error)
	PutPermissionAsync(ctx workflow.Context, input *codeguruprofiler.PutPermissionInput) *CodeguruprofilerPutPermissionFuture

	RemoveNotificationChannel(ctx workflow.Context, input *codeguruprofiler.RemoveNotificationChannelInput) (*codeguruprofiler.RemoveNotificationChannelOutput, error)
	RemoveNotificationChannelAsync(ctx workflow.Context, input *codeguruprofiler.RemoveNotificationChannelInput) *CodeguruprofilerRemoveNotificationChannelFuture

	RemovePermission(ctx workflow.Context, input *codeguruprofiler.RemovePermissionInput) (*codeguruprofiler.RemovePermissionOutput, error)
	RemovePermissionAsync(ctx workflow.Context, input *codeguruprofiler.RemovePermissionInput) *CodeguruprofilerRemovePermissionFuture

	SubmitFeedback(ctx workflow.Context, input *codeguruprofiler.SubmitFeedbackInput) (*codeguruprofiler.SubmitFeedbackOutput, error)
	SubmitFeedbackAsync(ctx workflow.Context, input *codeguruprofiler.SubmitFeedbackInput) *CodeguruprofilerSubmitFeedbackFuture

	TagResource(ctx workflow.Context, input *codeguruprofiler.TagResourceInput) (*codeguruprofiler.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *codeguruprofiler.TagResourceInput) *CodeguruprofilerTagResourceFuture

	UntagResource(ctx workflow.Context, input *codeguruprofiler.UntagResourceInput) (*codeguruprofiler.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *codeguruprofiler.UntagResourceInput) *CodeguruprofilerUntagResourceFuture

	UpdateProfilingGroup(ctx workflow.Context, input *codeguruprofiler.UpdateProfilingGroupInput) (*codeguruprofiler.UpdateProfilingGroupOutput, error)
	UpdateProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.UpdateProfilingGroupInput) *CodeguruprofilerUpdateProfilingGroupFuture
}

type CodeGuruProfilerStub struct{}

func NewCodeGuruProfilerStub() CodeGuruProfilerClient {
	return &CodeGuruProfilerStub{}
}

type CodeguruprofilerAddNotificationChannelsFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerAddNotificationChannelsFuture) Get(ctx workflow.Context) (*codeguruprofiler.AddNotificationChannelsOutput, error) {
	var output codeguruprofiler.AddNotificationChannelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerBatchGetFrameMetricDataFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerBatchGetFrameMetricDataFuture) Get(ctx workflow.Context) (*codeguruprofiler.BatchGetFrameMetricDataOutput, error) {
	var output codeguruprofiler.BatchGetFrameMetricDataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerConfigureAgentFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerConfigureAgentFuture) Get(ctx workflow.Context) (*codeguruprofiler.ConfigureAgentOutput, error) {
	var output codeguruprofiler.ConfigureAgentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerCreateProfilingGroupFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerCreateProfilingGroupFuture) Get(ctx workflow.Context) (*codeguruprofiler.CreateProfilingGroupOutput, error) {
	var output codeguruprofiler.CreateProfilingGroupOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerDeleteProfilingGroupFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerDeleteProfilingGroupFuture) Get(ctx workflow.Context) (*codeguruprofiler.DeleteProfilingGroupOutput, error) {
	var output codeguruprofiler.DeleteProfilingGroupOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerDescribeProfilingGroupFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerDescribeProfilingGroupFuture) Get(ctx workflow.Context) (*codeguruprofiler.DescribeProfilingGroupOutput, error) {
	var output codeguruprofiler.DescribeProfilingGroupOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerGetFindingsReportAccountSummaryFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerGetFindingsReportAccountSummaryFuture) Get(ctx workflow.Context) (*codeguruprofiler.GetFindingsReportAccountSummaryOutput, error) {
	var output codeguruprofiler.GetFindingsReportAccountSummaryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerGetNotificationConfigurationFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerGetNotificationConfigurationFuture) Get(ctx workflow.Context) (*codeguruprofiler.GetNotificationConfigurationOutput, error) {
	var output codeguruprofiler.GetNotificationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerGetPolicyFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerGetPolicyFuture) Get(ctx workflow.Context) (*codeguruprofiler.GetPolicyOutput, error) {
	var output codeguruprofiler.GetPolicyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerGetProfileFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerGetProfileFuture) Get(ctx workflow.Context) (*codeguruprofiler.GetProfileOutput, error) {
	var output codeguruprofiler.GetProfileOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerGetRecommendationsFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerGetRecommendationsFuture) Get(ctx workflow.Context) (*codeguruprofiler.GetRecommendationsOutput, error) {
	var output codeguruprofiler.GetRecommendationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerListFindingsReportsFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerListFindingsReportsFuture) Get(ctx workflow.Context) (*codeguruprofiler.ListFindingsReportsOutput, error) {
	var output codeguruprofiler.ListFindingsReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerListProfileTimesFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerListProfileTimesFuture) Get(ctx workflow.Context) (*codeguruprofiler.ListProfileTimesOutput, error) {
	var output codeguruprofiler.ListProfileTimesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerListProfilingGroupsFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerListProfilingGroupsFuture) Get(ctx workflow.Context) (*codeguruprofiler.ListProfilingGroupsOutput, error) {
	var output codeguruprofiler.ListProfilingGroupsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerListTagsForResourceFuture) Get(ctx workflow.Context) (*codeguruprofiler.ListTagsForResourceOutput, error) {
	var output codeguruprofiler.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerPostAgentProfileFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerPostAgentProfileFuture) Get(ctx workflow.Context) (*codeguruprofiler.PostAgentProfileOutput, error) {
	var output codeguruprofiler.PostAgentProfileOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerPutPermissionFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerPutPermissionFuture) Get(ctx workflow.Context) (*codeguruprofiler.PutPermissionOutput, error) {
	var output codeguruprofiler.PutPermissionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerRemoveNotificationChannelFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerRemoveNotificationChannelFuture) Get(ctx workflow.Context) (*codeguruprofiler.RemoveNotificationChannelOutput, error) {
	var output codeguruprofiler.RemoveNotificationChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerRemovePermissionFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerRemovePermissionFuture) Get(ctx workflow.Context) (*codeguruprofiler.RemovePermissionOutput, error) {
	var output codeguruprofiler.RemovePermissionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerSubmitFeedbackFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerSubmitFeedbackFuture) Get(ctx workflow.Context) (*codeguruprofiler.SubmitFeedbackOutput, error) {
	var output codeguruprofiler.SubmitFeedbackOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerTagResourceFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerTagResourceFuture) Get(ctx workflow.Context) (*codeguruprofiler.TagResourceOutput, error) {
	var output codeguruprofiler.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerUntagResourceFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerUntagResourceFuture) Get(ctx workflow.Context) (*codeguruprofiler.UntagResourceOutput, error) {
	var output codeguruprofiler.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CodeguruprofilerUpdateProfilingGroupFuture struct {
	Future workflow.Future
}

func (r *CodeguruprofilerUpdateProfilingGroupFuture) Get(ctx workflow.Context) (*codeguruprofiler.UpdateProfilingGroupOutput, error) {
	var output codeguruprofiler.UpdateProfilingGroupOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) AddNotificationChannels(ctx workflow.Context, input *codeguruprofiler.AddNotificationChannelsInput) (*codeguruprofiler.AddNotificationChannelsOutput, error) {
	var output codeguruprofiler.AddNotificationChannelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.AddNotificationChannels", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) AddNotificationChannelsAsync(ctx workflow.Context, input *codeguruprofiler.AddNotificationChannelsInput) *CodeguruprofilerAddNotificationChannelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.AddNotificationChannels", input)
	return &CodeguruprofilerAddNotificationChannelsFuture{Future: future}
}

func (a *CodeGuruProfilerStub) BatchGetFrameMetricData(ctx workflow.Context, input *codeguruprofiler.BatchGetFrameMetricDataInput) (*codeguruprofiler.BatchGetFrameMetricDataOutput, error) {
	var output codeguruprofiler.BatchGetFrameMetricDataOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.BatchGetFrameMetricData", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) BatchGetFrameMetricDataAsync(ctx workflow.Context, input *codeguruprofiler.BatchGetFrameMetricDataInput) *CodeguruprofilerBatchGetFrameMetricDataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.BatchGetFrameMetricData", input)
	return &CodeguruprofilerBatchGetFrameMetricDataFuture{Future: future}
}

func (a *CodeGuruProfilerStub) ConfigureAgent(ctx workflow.Context, input *codeguruprofiler.ConfigureAgentInput) (*codeguruprofiler.ConfigureAgentOutput, error) {
	var output codeguruprofiler.ConfigureAgentOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ConfigureAgent", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) ConfigureAgentAsync(ctx workflow.Context, input *codeguruprofiler.ConfigureAgentInput) *CodeguruprofilerConfigureAgentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ConfigureAgent", input)
	return &CodeguruprofilerConfigureAgentFuture{Future: future}
}

func (a *CodeGuruProfilerStub) CreateProfilingGroup(ctx workflow.Context, input *codeguruprofiler.CreateProfilingGroupInput) (*codeguruprofiler.CreateProfilingGroupOutput, error) {
	var output codeguruprofiler.CreateProfilingGroupOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.CreateProfilingGroup", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) CreateProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.CreateProfilingGroupInput) *CodeguruprofilerCreateProfilingGroupFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.CreateProfilingGroup", input)
	return &CodeguruprofilerCreateProfilingGroupFuture{Future: future}
}

func (a *CodeGuruProfilerStub) DeleteProfilingGroup(ctx workflow.Context, input *codeguruprofiler.DeleteProfilingGroupInput) (*codeguruprofiler.DeleteProfilingGroupOutput, error) {
	var output codeguruprofiler.DeleteProfilingGroupOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.DeleteProfilingGroup", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) DeleteProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.DeleteProfilingGroupInput) *CodeguruprofilerDeleteProfilingGroupFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.DeleteProfilingGroup", input)
	return &CodeguruprofilerDeleteProfilingGroupFuture{Future: future}
}

func (a *CodeGuruProfilerStub) DescribeProfilingGroup(ctx workflow.Context, input *codeguruprofiler.DescribeProfilingGroupInput) (*codeguruprofiler.DescribeProfilingGroupOutput, error) {
	var output codeguruprofiler.DescribeProfilingGroupOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.DescribeProfilingGroup", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) DescribeProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.DescribeProfilingGroupInput) *CodeguruprofilerDescribeProfilingGroupFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.DescribeProfilingGroup", input)
	return &CodeguruprofilerDescribeProfilingGroupFuture{Future: future}
}

func (a *CodeGuruProfilerStub) GetFindingsReportAccountSummary(ctx workflow.Context, input *codeguruprofiler.GetFindingsReportAccountSummaryInput) (*codeguruprofiler.GetFindingsReportAccountSummaryOutput, error) {
	var output codeguruprofiler.GetFindingsReportAccountSummaryOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetFindingsReportAccountSummary", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) GetFindingsReportAccountSummaryAsync(ctx workflow.Context, input *codeguruprofiler.GetFindingsReportAccountSummaryInput) *CodeguruprofilerGetFindingsReportAccountSummaryFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetFindingsReportAccountSummary", input)
	return &CodeguruprofilerGetFindingsReportAccountSummaryFuture{Future: future}
}

func (a *CodeGuruProfilerStub) GetNotificationConfiguration(ctx workflow.Context, input *codeguruprofiler.GetNotificationConfigurationInput) (*codeguruprofiler.GetNotificationConfigurationOutput, error) {
	var output codeguruprofiler.GetNotificationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetNotificationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) GetNotificationConfigurationAsync(ctx workflow.Context, input *codeguruprofiler.GetNotificationConfigurationInput) *CodeguruprofilerGetNotificationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetNotificationConfiguration", input)
	return &CodeguruprofilerGetNotificationConfigurationFuture{Future: future}
}

func (a *CodeGuruProfilerStub) GetPolicy(ctx workflow.Context, input *codeguruprofiler.GetPolicyInput) (*codeguruprofiler.GetPolicyOutput, error) {
	var output codeguruprofiler.GetPolicyOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetPolicy", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) GetPolicyAsync(ctx workflow.Context, input *codeguruprofiler.GetPolicyInput) *CodeguruprofilerGetPolicyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetPolicy", input)
	return &CodeguruprofilerGetPolicyFuture{Future: future}
}

func (a *CodeGuruProfilerStub) GetProfile(ctx workflow.Context, input *codeguruprofiler.GetProfileInput) (*codeguruprofiler.GetProfileOutput, error) {
	var output codeguruprofiler.GetProfileOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetProfile", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) GetProfileAsync(ctx workflow.Context, input *codeguruprofiler.GetProfileInput) *CodeguruprofilerGetProfileFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetProfile", input)
	return &CodeguruprofilerGetProfileFuture{Future: future}
}

func (a *CodeGuruProfilerStub) GetRecommendations(ctx workflow.Context, input *codeguruprofiler.GetRecommendationsInput) (*codeguruprofiler.GetRecommendationsOutput, error) {
	var output codeguruprofiler.GetRecommendationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetRecommendations", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) GetRecommendationsAsync(ctx workflow.Context, input *codeguruprofiler.GetRecommendationsInput) *CodeguruprofilerGetRecommendationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.GetRecommendations", input)
	return &CodeguruprofilerGetRecommendationsFuture{Future: future}
}

func (a *CodeGuruProfilerStub) ListFindingsReports(ctx workflow.Context, input *codeguruprofiler.ListFindingsReportsInput) (*codeguruprofiler.ListFindingsReportsOutput, error) {
	var output codeguruprofiler.ListFindingsReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListFindingsReports", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) ListFindingsReportsAsync(ctx workflow.Context, input *codeguruprofiler.ListFindingsReportsInput) *CodeguruprofilerListFindingsReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListFindingsReports", input)
	return &CodeguruprofilerListFindingsReportsFuture{Future: future}
}

func (a *CodeGuruProfilerStub) ListProfileTimes(ctx workflow.Context, input *codeguruprofiler.ListProfileTimesInput) (*codeguruprofiler.ListProfileTimesOutput, error) {
	var output codeguruprofiler.ListProfileTimesOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListProfileTimes", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) ListProfileTimesAsync(ctx workflow.Context, input *codeguruprofiler.ListProfileTimesInput) *CodeguruprofilerListProfileTimesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListProfileTimes", input)
	return &CodeguruprofilerListProfileTimesFuture{Future: future}
}

func (a *CodeGuruProfilerStub) ListProfilingGroups(ctx workflow.Context, input *codeguruprofiler.ListProfilingGroupsInput) (*codeguruprofiler.ListProfilingGroupsOutput, error) {
	var output codeguruprofiler.ListProfilingGroupsOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListProfilingGroups", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) ListProfilingGroupsAsync(ctx workflow.Context, input *codeguruprofiler.ListProfilingGroupsInput) *CodeguruprofilerListProfilingGroupsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListProfilingGroups", input)
	return &CodeguruprofilerListProfilingGroupsFuture{Future: future}
}

func (a *CodeGuruProfilerStub) ListTagsForResource(ctx workflow.Context, input *codeguruprofiler.ListTagsForResourceInput) (*codeguruprofiler.ListTagsForResourceOutput, error) {
	var output codeguruprofiler.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) ListTagsForResourceAsync(ctx workflow.Context, input *codeguruprofiler.ListTagsForResourceInput) *CodeguruprofilerListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.ListTagsForResource", input)
	return &CodeguruprofilerListTagsForResourceFuture{Future: future}
}

func (a *CodeGuruProfilerStub) PostAgentProfile(ctx workflow.Context, input *codeguruprofiler.PostAgentProfileInput) (*codeguruprofiler.PostAgentProfileOutput, error) {
	var output codeguruprofiler.PostAgentProfileOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.PostAgentProfile", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) PostAgentProfileAsync(ctx workflow.Context, input *codeguruprofiler.PostAgentProfileInput) *CodeguruprofilerPostAgentProfileFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.PostAgentProfile", input)
	return &CodeguruprofilerPostAgentProfileFuture{Future: future}
}

func (a *CodeGuruProfilerStub) PutPermission(ctx workflow.Context, input *codeguruprofiler.PutPermissionInput) (*codeguruprofiler.PutPermissionOutput, error) {
	var output codeguruprofiler.PutPermissionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.PutPermission", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) PutPermissionAsync(ctx workflow.Context, input *codeguruprofiler.PutPermissionInput) *CodeguruprofilerPutPermissionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.PutPermission", input)
	return &CodeguruprofilerPutPermissionFuture{Future: future}
}

func (a *CodeGuruProfilerStub) RemoveNotificationChannel(ctx workflow.Context, input *codeguruprofiler.RemoveNotificationChannelInput) (*codeguruprofiler.RemoveNotificationChannelOutput, error) {
	var output codeguruprofiler.RemoveNotificationChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.RemoveNotificationChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) RemoveNotificationChannelAsync(ctx workflow.Context, input *codeguruprofiler.RemoveNotificationChannelInput) *CodeguruprofilerRemoveNotificationChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.RemoveNotificationChannel", input)
	return &CodeguruprofilerRemoveNotificationChannelFuture{Future: future}
}

func (a *CodeGuruProfilerStub) RemovePermission(ctx workflow.Context, input *codeguruprofiler.RemovePermissionInput) (*codeguruprofiler.RemovePermissionOutput, error) {
	var output codeguruprofiler.RemovePermissionOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.RemovePermission", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) RemovePermissionAsync(ctx workflow.Context, input *codeguruprofiler.RemovePermissionInput) *CodeguruprofilerRemovePermissionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.RemovePermission", input)
	return &CodeguruprofilerRemovePermissionFuture{Future: future}
}

func (a *CodeGuruProfilerStub) SubmitFeedback(ctx workflow.Context, input *codeguruprofiler.SubmitFeedbackInput) (*codeguruprofiler.SubmitFeedbackOutput, error) {
	var output codeguruprofiler.SubmitFeedbackOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.SubmitFeedback", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) SubmitFeedbackAsync(ctx workflow.Context, input *codeguruprofiler.SubmitFeedbackInput) *CodeguruprofilerSubmitFeedbackFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.SubmitFeedback", input)
	return &CodeguruprofilerSubmitFeedbackFuture{Future: future}
}

func (a *CodeGuruProfilerStub) TagResource(ctx workflow.Context, input *codeguruprofiler.TagResourceInput) (*codeguruprofiler.TagResourceOutput, error) {
	var output codeguruprofiler.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) TagResourceAsync(ctx workflow.Context, input *codeguruprofiler.TagResourceInput) *CodeguruprofilerTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.TagResource", input)
	return &CodeguruprofilerTagResourceFuture{Future: future}
}

func (a *CodeGuruProfilerStub) UntagResource(ctx workflow.Context, input *codeguruprofiler.UntagResourceInput) (*codeguruprofiler.UntagResourceOutput, error) {
	var output codeguruprofiler.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) UntagResourceAsync(ctx workflow.Context, input *codeguruprofiler.UntagResourceInput) *CodeguruprofilerUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.UntagResource", input)
	return &CodeguruprofilerUntagResourceFuture{Future: future}
}

func (a *CodeGuruProfilerStub) UpdateProfilingGroup(ctx workflow.Context, input *codeguruprofiler.UpdateProfilingGroupInput) (*codeguruprofiler.UpdateProfilingGroupOutput, error) {
	var output codeguruprofiler.UpdateProfilingGroupOutput
	err := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.UpdateProfilingGroup", input).Get(ctx, &output)
	return &output, err
}

func (a *CodeGuruProfilerStub) UpdateProfilingGroupAsync(ctx workflow.Context, input *codeguruprofiler.UpdateProfilingGroupInput) *CodeguruprofilerUpdateProfilingGroupFuture {
	future := workflow.ExecuteActivity(ctx, "aws.codeguruprofiler.UpdateProfilingGroup", input)
	return &CodeguruprofilerUpdateProfilingGroupFuture{Future: future}
}
