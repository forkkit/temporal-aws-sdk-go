// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/timestreamquery"
	"go.temporal.io/sdk/workflow"
)

type TimestreamQueryClient interface {
	CancelQuery(ctx workflow.Context, input *timestreamquery.CancelQueryInput) (*timestreamquery.CancelQueryOutput, error)
	CancelQueryAsync(ctx workflow.Context, input *timestreamquery.CancelQueryInput) *TimestreamqueryCancelQueryResult

	DescribeEndpoints(ctx workflow.Context, input *timestreamquery.DescribeEndpointsInput) (*timestreamquery.DescribeEndpointsOutput, error)
	DescribeEndpointsAsync(ctx workflow.Context, input *timestreamquery.DescribeEndpointsInput) *TimestreamqueryDescribeEndpointsResult

	Query(ctx workflow.Context, input *timestreamquery.QueryInput) (*timestreamquery.QueryOutput, error)
	QueryAsync(ctx workflow.Context, input *timestreamquery.QueryInput) *TimestreamqueryQueryResult
}

type TimestreamQueryStub struct{}

func NewTimestreamQueryStub() TimestreamQueryClient {
	return &TimestreamQueryStub{}
}

type TimestreamqueryCancelQueryResult struct {
	Result workflow.Future
}

func (r *TimestreamqueryCancelQueryResult) Get(ctx workflow.Context) (*timestreamquery.CancelQueryOutput, error) {
	var output timestreamquery.CancelQueryOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type TimestreamqueryDescribeEndpointsResult struct {
	Result workflow.Future
}

func (r *TimestreamqueryDescribeEndpointsResult) Get(ctx workflow.Context) (*timestreamquery.DescribeEndpointsOutput, error) {
	var output timestreamquery.DescribeEndpointsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type TimestreamqueryQueryResult struct {
	Result workflow.Future
}

func (r *TimestreamqueryQueryResult) Get(ctx workflow.Context) (*timestreamquery.QueryOutput, error) {
	var output timestreamquery.QueryOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

func (a *TimestreamQueryStub) CancelQuery(ctx workflow.Context, input *timestreamquery.CancelQueryInput) (*timestreamquery.CancelQueryOutput, error) {
	var output timestreamquery.CancelQueryOutput
	err := workflow.ExecuteActivity(ctx, "aws.timestreamquery.CancelQuery", input).Get(ctx, &output)
	return &output, err
}

func (a *TimestreamQueryStub) CancelQueryAsync(ctx workflow.Context, input *timestreamquery.CancelQueryInput) *TimestreamqueryCancelQueryResult {
	future := workflow.ExecuteActivity(ctx, "aws.timestreamquery.CancelQuery", input)
	return &TimestreamqueryCancelQueryResult{Result: future}
}

func (a *TimestreamQueryStub) DescribeEndpoints(ctx workflow.Context, input *timestreamquery.DescribeEndpointsInput) (*timestreamquery.DescribeEndpointsOutput, error) {
	var output timestreamquery.DescribeEndpointsOutput
	err := workflow.ExecuteActivity(ctx, "aws.timestreamquery.DescribeEndpoints", input).Get(ctx, &output)
	return &output, err
}

func (a *TimestreamQueryStub) DescribeEndpointsAsync(ctx workflow.Context, input *timestreamquery.DescribeEndpointsInput) *TimestreamqueryDescribeEndpointsResult {
	future := workflow.ExecuteActivity(ctx, "aws.timestreamquery.DescribeEndpoints", input)
	return &TimestreamqueryDescribeEndpointsResult{Result: future}
}

func (a *TimestreamQueryStub) Query(ctx workflow.Context, input *timestreamquery.QueryInput) (*timestreamquery.QueryOutput, error) {
	var output timestreamquery.QueryOutput
	err := workflow.ExecuteActivity(ctx, "aws.timestreamquery.Query", input).Get(ctx, &output)
	return &output, err
}

func (a *TimestreamQueryStub) QueryAsync(ctx workflow.Context, input *timestreamquery.QueryInput) *TimestreamqueryQueryResult {
	future := workflow.ExecuteActivity(ctx, "aws.timestreamquery.Query", input)
	return &TimestreamqueryQueryResult{Result: future}
}
