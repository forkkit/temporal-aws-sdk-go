// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/dynamodbstreams"
	"go.temporal.io/sdk/workflow"
)

type DynamoDBStreamsClient interface {
	DescribeStream(ctx workflow.Context, input *dynamodbstreams.DescribeStreamInput) (*dynamodbstreams.DescribeStreamOutput, error)
	DescribeStreamAsync(ctx workflow.Context, input *dynamodbstreams.DescribeStreamInput) *DynamodbstreamsDescribeStreamFuture

	GetRecords(ctx workflow.Context, input *dynamodbstreams.GetRecordsInput) (*dynamodbstreams.GetRecordsOutput, error)
	GetRecordsAsync(ctx workflow.Context, input *dynamodbstreams.GetRecordsInput) *DynamodbstreamsGetRecordsFuture

	GetShardIterator(ctx workflow.Context, input *dynamodbstreams.GetShardIteratorInput) (*dynamodbstreams.GetShardIteratorOutput, error)
	GetShardIteratorAsync(ctx workflow.Context, input *dynamodbstreams.GetShardIteratorInput) *DynamodbstreamsGetShardIteratorFuture

	ListStreams(ctx workflow.Context, input *dynamodbstreams.ListStreamsInput) (*dynamodbstreams.ListStreamsOutput, error)
	ListStreamsAsync(ctx workflow.Context, input *dynamodbstreams.ListStreamsInput) *DynamodbstreamsListStreamsFuture
}

type DynamoDBStreamsStub struct{}

func NewDynamoDBStreamsStub() DynamoDBStreamsClient {
	return &DynamoDBStreamsStub{}
}

type DynamodbstreamsDescribeStreamFuture struct {
	Future workflow.Future
}

func (r *DynamodbstreamsDescribeStreamFuture) Get(ctx workflow.Context) (*dynamodbstreams.DescribeStreamOutput, error) {
	var output dynamodbstreams.DescribeStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DynamodbstreamsGetRecordsFuture struct {
	Future workflow.Future
}

func (r *DynamodbstreamsGetRecordsFuture) Get(ctx workflow.Context) (*dynamodbstreams.GetRecordsOutput, error) {
	var output dynamodbstreams.GetRecordsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DynamodbstreamsGetShardIteratorFuture struct {
	Future workflow.Future
}

func (r *DynamodbstreamsGetShardIteratorFuture) Get(ctx workflow.Context) (*dynamodbstreams.GetShardIteratorOutput, error) {
	var output dynamodbstreams.GetShardIteratorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DynamodbstreamsListStreamsFuture struct {
	Future workflow.Future
}

func (r *DynamodbstreamsListStreamsFuture) Get(ctx workflow.Context) (*dynamodbstreams.ListStreamsOutput, error) {
	var output dynamodbstreams.ListStreamsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *DynamoDBStreamsStub) DescribeStream(ctx workflow.Context, input *dynamodbstreams.DescribeStreamInput) (*dynamodbstreams.DescribeStreamOutput, error) {
	var output dynamodbstreams.DescribeStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.DescribeStream", input).Get(ctx, &output)
	return &output, err
}

func (a *DynamoDBStreamsStub) DescribeStreamAsync(ctx workflow.Context, input *dynamodbstreams.DescribeStreamInput) *DynamodbstreamsDescribeStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.DescribeStream", input)
	return &DynamodbstreamsDescribeStreamFuture{Future: future}
}

func (a *DynamoDBStreamsStub) GetRecords(ctx workflow.Context, input *dynamodbstreams.GetRecordsInput) (*dynamodbstreams.GetRecordsOutput, error) {
	var output dynamodbstreams.GetRecordsOutput
	err := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.GetRecords", input).Get(ctx, &output)
	return &output, err
}

func (a *DynamoDBStreamsStub) GetRecordsAsync(ctx workflow.Context, input *dynamodbstreams.GetRecordsInput) *DynamodbstreamsGetRecordsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.GetRecords", input)
	return &DynamodbstreamsGetRecordsFuture{Future: future}
}

func (a *DynamoDBStreamsStub) GetShardIterator(ctx workflow.Context, input *dynamodbstreams.GetShardIteratorInput) (*dynamodbstreams.GetShardIteratorOutput, error) {
	var output dynamodbstreams.GetShardIteratorOutput
	err := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.GetShardIterator", input).Get(ctx, &output)
	return &output, err
}

func (a *DynamoDBStreamsStub) GetShardIteratorAsync(ctx workflow.Context, input *dynamodbstreams.GetShardIteratorInput) *DynamodbstreamsGetShardIteratorFuture {
	future := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.GetShardIterator", input)
	return &DynamodbstreamsGetShardIteratorFuture{Future: future}
}

func (a *DynamoDBStreamsStub) ListStreams(ctx workflow.Context, input *dynamodbstreams.ListStreamsInput) (*dynamodbstreams.ListStreamsOutput, error) {
	var output dynamodbstreams.ListStreamsOutput
	err := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.ListStreams", input).Get(ctx, &output)
	return &output, err
}

func (a *DynamoDBStreamsStub) ListStreamsAsync(ctx workflow.Context, input *dynamodbstreams.ListStreamsInput) *DynamodbstreamsListStreamsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.dynamodbstreams.ListStreams", input)
	return &DynamodbstreamsListStreamsFuture{Future: future}
}
