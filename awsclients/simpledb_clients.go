// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/simpledb"
	"go.temporal.io/sdk/workflow"
)

type SimpleDBClient interface {
	BatchDeleteAttributes(ctx workflow.Context, input *simpledb.BatchDeleteAttributesInput) (*simpledb.BatchDeleteAttributesOutput, error)
	BatchDeleteAttributesAsync(ctx workflow.Context, input *simpledb.BatchDeleteAttributesInput) *SimpledbBatchDeleteAttributesFuture

	BatchPutAttributes(ctx workflow.Context, input *simpledb.BatchPutAttributesInput) (*simpledb.BatchPutAttributesOutput, error)
	BatchPutAttributesAsync(ctx workflow.Context, input *simpledb.BatchPutAttributesInput) *SimpledbBatchPutAttributesFuture

	CreateDomain(ctx workflow.Context, input *simpledb.CreateDomainInput) (*simpledb.CreateDomainOutput, error)
	CreateDomainAsync(ctx workflow.Context, input *simpledb.CreateDomainInput) *SimpledbCreateDomainFuture

	DeleteAttributes(ctx workflow.Context, input *simpledb.DeleteAttributesInput) (*simpledb.DeleteAttributesOutput, error)
	DeleteAttributesAsync(ctx workflow.Context, input *simpledb.DeleteAttributesInput) *SimpledbDeleteAttributesFuture

	DeleteDomain(ctx workflow.Context, input *simpledb.DeleteDomainInput) (*simpledb.DeleteDomainOutput, error)
	DeleteDomainAsync(ctx workflow.Context, input *simpledb.DeleteDomainInput) *SimpledbDeleteDomainFuture

	DomainMetadata(ctx workflow.Context, input *simpledb.DomainMetadataInput) (*simpledb.DomainMetadataOutput, error)
	DomainMetadataAsync(ctx workflow.Context, input *simpledb.DomainMetadataInput) *SimpledbDomainMetadataFuture

	GetAttributes(ctx workflow.Context, input *simpledb.GetAttributesInput) (*simpledb.GetAttributesOutput, error)
	GetAttributesAsync(ctx workflow.Context, input *simpledb.GetAttributesInput) *SimpledbGetAttributesFuture

	ListDomains(ctx workflow.Context, input *simpledb.ListDomainsInput) (*simpledb.ListDomainsOutput, error)
	ListDomainsAsync(ctx workflow.Context, input *simpledb.ListDomainsInput) *SimpledbListDomainsFuture

	PutAttributes(ctx workflow.Context, input *simpledb.PutAttributesInput) (*simpledb.PutAttributesOutput, error)
	PutAttributesAsync(ctx workflow.Context, input *simpledb.PutAttributesInput) *SimpledbPutAttributesFuture

	Select(ctx workflow.Context, input *simpledb.SelectInput) (*simpledb.SelectOutput, error)
	SelectAsync(ctx workflow.Context, input *simpledb.SelectInput) *SimpledbSelectFuture
}

type SimpleDBStub struct{}

func NewSimpleDBStub() SimpleDBClient {
	return &SimpleDBStub{}
}

type SimpledbBatchDeleteAttributesFuture struct {
	Future workflow.Future
}

func (r *SimpledbBatchDeleteAttributesFuture) Get(ctx workflow.Context) (*simpledb.BatchDeleteAttributesOutput, error) {
	var output simpledb.BatchDeleteAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbBatchPutAttributesFuture struct {
	Future workflow.Future
}

func (r *SimpledbBatchPutAttributesFuture) Get(ctx workflow.Context) (*simpledb.BatchPutAttributesOutput, error) {
	var output simpledb.BatchPutAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbCreateDomainFuture struct {
	Future workflow.Future
}

func (r *SimpledbCreateDomainFuture) Get(ctx workflow.Context) (*simpledb.CreateDomainOutput, error) {
	var output simpledb.CreateDomainOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbDeleteAttributesFuture struct {
	Future workflow.Future
}

func (r *SimpledbDeleteAttributesFuture) Get(ctx workflow.Context) (*simpledb.DeleteAttributesOutput, error) {
	var output simpledb.DeleteAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbDeleteDomainFuture struct {
	Future workflow.Future
}

func (r *SimpledbDeleteDomainFuture) Get(ctx workflow.Context) (*simpledb.DeleteDomainOutput, error) {
	var output simpledb.DeleteDomainOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbDomainMetadataFuture struct {
	Future workflow.Future
}

func (r *SimpledbDomainMetadataFuture) Get(ctx workflow.Context) (*simpledb.DomainMetadataOutput, error) {
	var output simpledb.DomainMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbGetAttributesFuture struct {
	Future workflow.Future
}

func (r *SimpledbGetAttributesFuture) Get(ctx workflow.Context) (*simpledb.GetAttributesOutput, error) {
	var output simpledb.GetAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbListDomainsFuture struct {
	Future workflow.Future
}

func (r *SimpledbListDomainsFuture) Get(ctx workflow.Context) (*simpledb.ListDomainsOutput, error) {
	var output simpledb.ListDomainsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbPutAttributesFuture struct {
	Future workflow.Future
}

func (r *SimpledbPutAttributesFuture) Get(ctx workflow.Context) (*simpledb.PutAttributesOutput, error) {
	var output simpledb.PutAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SimpledbSelectFuture struct {
	Future workflow.Future
}

func (r *SimpledbSelectFuture) Get(ctx workflow.Context) (*simpledb.SelectOutput, error) {
	var output simpledb.SelectOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) BatchDeleteAttributes(ctx workflow.Context, input *simpledb.BatchDeleteAttributesInput) (*simpledb.BatchDeleteAttributesOutput, error) {
	var output simpledb.BatchDeleteAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.BatchDeleteAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) BatchDeleteAttributesAsync(ctx workflow.Context, input *simpledb.BatchDeleteAttributesInput) *SimpledbBatchDeleteAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.BatchDeleteAttributes", input)
	return &SimpledbBatchDeleteAttributesFuture{Future: future}
}

func (a *SimpleDBStub) BatchPutAttributes(ctx workflow.Context, input *simpledb.BatchPutAttributesInput) (*simpledb.BatchPutAttributesOutput, error) {
	var output simpledb.BatchPutAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.BatchPutAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) BatchPutAttributesAsync(ctx workflow.Context, input *simpledb.BatchPutAttributesInput) *SimpledbBatchPutAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.BatchPutAttributes", input)
	return &SimpledbBatchPutAttributesFuture{Future: future}
}

func (a *SimpleDBStub) CreateDomain(ctx workflow.Context, input *simpledb.CreateDomainInput) (*simpledb.CreateDomainOutput, error) {
	var output simpledb.CreateDomainOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.CreateDomain", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) CreateDomainAsync(ctx workflow.Context, input *simpledb.CreateDomainInput) *SimpledbCreateDomainFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.CreateDomain", input)
	return &SimpledbCreateDomainFuture{Future: future}
}

func (a *SimpleDBStub) DeleteAttributes(ctx workflow.Context, input *simpledb.DeleteAttributesInput) (*simpledb.DeleteAttributesOutput, error) {
	var output simpledb.DeleteAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.DeleteAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) DeleteAttributesAsync(ctx workflow.Context, input *simpledb.DeleteAttributesInput) *SimpledbDeleteAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.DeleteAttributes", input)
	return &SimpledbDeleteAttributesFuture{Future: future}
}

func (a *SimpleDBStub) DeleteDomain(ctx workflow.Context, input *simpledb.DeleteDomainInput) (*simpledb.DeleteDomainOutput, error) {
	var output simpledb.DeleteDomainOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.DeleteDomain", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) DeleteDomainAsync(ctx workflow.Context, input *simpledb.DeleteDomainInput) *SimpledbDeleteDomainFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.DeleteDomain", input)
	return &SimpledbDeleteDomainFuture{Future: future}
}

func (a *SimpleDBStub) DomainMetadata(ctx workflow.Context, input *simpledb.DomainMetadataInput) (*simpledb.DomainMetadataOutput, error) {
	var output simpledb.DomainMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.DomainMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) DomainMetadataAsync(ctx workflow.Context, input *simpledb.DomainMetadataInput) *SimpledbDomainMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.DomainMetadata", input)
	return &SimpledbDomainMetadataFuture{Future: future}
}

func (a *SimpleDBStub) GetAttributes(ctx workflow.Context, input *simpledb.GetAttributesInput) (*simpledb.GetAttributesOutput, error) {
	var output simpledb.GetAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.GetAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) GetAttributesAsync(ctx workflow.Context, input *simpledb.GetAttributesInput) *SimpledbGetAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.GetAttributes", input)
	return &SimpledbGetAttributesFuture{Future: future}
}

func (a *SimpleDBStub) ListDomains(ctx workflow.Context, input *simpledb.ListDomainsInput) (*simpledb.ListDomainsOutput, error) {
	var output simpledb.ListDomainsOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.ListDomains", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) ListDomainsAsync(ctx workflow.Context, input *simpledb.ListDomainsInput) *SimpledbListDomainsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.ListDomains", input)
	return &SimpledbListDomainsFuture{Future: future}
}

func (a *SimpleDBStub) PutAttributes(ctx workflow.Context, input *simpledb.PutAttributesInput) (*simpledb.PutAttributesOutput, error) {
	var output simpledb.PutAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.PutAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) PutAttributesAsync(ctx workflow.Context, input *simpledb.PutAttributesInput) *SimpledbPutAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.PutAttributes", input)
	return &SimpledbPutAttributesFuture{Future: future}
}

func (a *SimpleDBStub) Select(ctx workflow.Context, input *simpledb.SelectInput) (*simpledb.SelectOutput, error) {
	var output simpledb.SelectOutput
	err := workflow.ExecuteActivity(ctx, "aws.simpledb.Select", input).Get(ctx, &output)
	return &output, err
}

func (a *SimpleDBStub) SelectAsync(ctx workflow.Context, input *simpledb.SelectInput) *SimpledbSelectFuture {
	future := workflow.ExecuteActivity(ctx, "aws.simpledb.Select", input)
	return &SimpledbSelectFuture{Future: future}
}
