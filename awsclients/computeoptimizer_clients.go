// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/computeoptimizer"
	"go.temporal.io/sdk/workflow"
)

type ComputeOptimizerClient interface {
	DescribeRecommendationExportJobs(ctx workflow.Context, input *computeoptimizer.DescribeRecommendationExportJobsInput) (*computeoptimizer.DescribeRecommendationExportJobsOutput, error)
	DescribeRecommendationExportJobsAsync(ctx workflow.Context, input *computeoptimizer.DescribeRecommendationExportJobsInput) *ComputeoptimizerDescribeRecommendationExportJobsFuture

	ExportAutoScalingGroupRecommendations(ctx workflow.Context, input *computeoptimizer.ExportAutoScalingGroupRecommendationsInput) (*computeoptimizer.ExportAutoScalingGroupRecommendationsOutput, error)
	ExportAutoScalingGroupRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.ExportAutoScalingGroupRecommendationsInput) *ComputeoptimizerExportAutoScalingGroupRecommendationsFuture

	ExportEC2InstanceRecommendations(ctx workflow.Context, input *computeoptimizer.ExportEC2InstanceRecommendationsInput) (*computeoptimizer.ExportEC2InstanceRecommendationsOutput, error)
	ExportEC2InstanceRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.ExportEC2InstanceRecommendationsInput) *ComputeoptimizerExportEC2InstanceRecommendationsFuture

	GetAutoScalingGroupRecommendations(ctx workflow.Context, input *computeoptimizer.GetAutoScalingGroupRecommendationsInput) (*computeoptimizer.GetAutoScalingGroupRecommendationsOutput, error)
	GetAutoScalingGroupRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.GetAutoScalingGroupRecommendationsInput) *ComputeoptimizerGetAutoScalingGroupRecommendationsFuture

	GetEC2InstanceRecommendations(ctx workflow.Context, input *computeoptimizer.GetEC2InstanceRecommendationsInput) (*computeoptimizer.GetEC2InstanceRecommendationsOutput, error)
	GetEC2InstanceRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.GetEC2InstanceRecommendationsInput) *ComputeoptimizerGetEC2InstanceRecommendationsFuture

	GetEC2RecommendationProjectedMetrics(ctx workflow.Context, input *computeoptimizer.GetEC2RecommendationProjectedMetricsInput) (*computeoptimizer.GetEC2RecommendationProjectedMetricsOutput, error)
	GetEC2RecommendationProjectedMetricsAsync(ctx workflow.Context, input *computeoptimizer.GetEC2RecommendationProjectedMetricsInput) *ComputeoptimizerGetEC2RecommendationProjectedMetricsFuture

	GetEnrollmentStatus(ctx workflow.Context, input *computeoptimizer.GetEnrollmentStatusInput) (*computeoptimizer.GetEnrollmentStatusOutput, error)
	GetEnrollmentStatusAsync(ctx workflow.Context, input *computeoptimizer.GetEnrollmentStatusInput) *ComputeoptimizerGetEnrollmentStatusFuture

	GetRecommendationSummaries(ctx workflow.Context, input *computeoptimizer.GetRecommendationSummariesInput) (*computeoptimizer.GetRecommendationSummariesOutput, error)
	GetRecommendationSummariesAsync(ctx workflow.Context, input *computeoptimizer.GetRecommendationSummariesInput) *ComputeoptimizerGetRecommendationSummariesFuture

	UpdateEnrollmentStatus(ctx workflow.Context, input *computeoptimizer.UpdateEnrollmentStatusInput) (*computeoptimizer.UpdateEnrollmentStatusOutput, error)
	UpdateEnrollmentStatusAsync(ctx workflow.Context, input *computeoptimizer.UpdateEnrollmentStatusInput) *ComputeoptimizerUpdateEnrollmentStatusFuture
}

type ComputeOptimizerStub struct{}

func NewComputeOptimizerStub() ComputeOptimizerClient {
	return &ComputeOptimizerStub{}
}

type ComputeoptimizerDescribeRecommendationExportJobsFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerDescribeRecommendationExportJobsFuture) Get(ctx workflow.Context) (*computeoptimizer.DescribeRecommendationExportJobsOutput, error) {
	var output computeoptimizer.DescribeRecommendationExportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerExportAutoScalingGroupRecommendationsFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerExportAutoScalingGroupRecommendationsFuture) Get(ctx workflow.Context) (*computeoptimizer.ExportAutoScalingGroupRecommendationsOutput, error) {
	var output computeoptimizer.ExportAutoScalingGroupRecommendationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerExportEC2InstanceRecommendationsFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerExportEC2InstanceRecommendationsFuture) Get(ctx workflow.Context) (*computeoptimizer.ExportEC2InstanceRecommendationsOutput, error) {
	var output computeoptimizer.ExportEC2InstanceRecommendationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerGetAutoScalingGroupRecommendationsFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerGetAutoScalingGroupRecommendationsFuture) Get(ctx workflow.Context) (*computeoptimizer.GetAutoScalingGroupRecommendationsOutput, error) {
	var output computeoptimizer.GetAutoScalingGroupRecommendationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerGetEC2InstanceRecommendationsFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerGetEC2InstanceRecommendationsFuture) Get(ctx workflow.Context) (*computeoptimizer.GetEC2InstanceRecommendationsOutput, error) {
	var output computeoptimizer.GetEC2InstanceRecommendationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerGetEC2RecommendationProjectedMetricsFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerGetEC2RecommendationProjectedMetricsFuture) Get(ctx workflow.Context) (*computeoptimizer.GetEC2RecommendationProjectedMetricsOutput, error) {
	var output computeoptimizer.GetEC2RecommendationProjectedMetricsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerGetEnrollmentStatusFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerGetEnrollmentStatusFuture) Get(ctx workflow.Context) (*computeoptimizer.GetEnrollmentStatusOutput, error) {
	var output computeoptimizer.GetEnrollmentStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerGetRecommendationSummariesFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerGetRecommendationSummariesFuture) Get(ctx workflow.Context) (*computeoptimizer.GetRecommendationSummariesOutput, error) {
	var output computeoptimizer.GetRecommendationSummariesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ComputeoptimizerUpdateEnrollmentStatusFuture struct {
	Future workflow.Future
}

func (r *ComputeoptimizerUpdateEnrollmentStatusFuture) Get(ctx workflow.Context) (*computeoptimizer.UpdateEnrollmentStatusOutput, error) {
	var output computeoptimizer.UpdateEnrollmentStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) DescribeRecommendationExportJobs(ctx workflow.Context, input *computeoptimizer.DescribeRecommendationExportJobsInput) (*computeoptimizer.DescribeRecommendationExportJobsOutput, error) {
	var output computeoptimizer.DescribeRecommendationExportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.DescribeRecommendationExportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) DescribeRecommendationExportJobsAsync(ctx workflow.Context, input *computeoptimizer.DescribeRecommendationExportJobsInput) *ComputeoptimizerDescribeRecommendationExportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.DescribeRecommendationExportJobs", input)
	return &ComputeoptimizerDescribeRecommendationExportJobsFuture{Future: future}
}

func (a *ComputeOptimizerStub) ExportAutoScalingGroupRecommendations(ctx workflow.Context, input *computeoptimizer.ExportAutoScalingGroupRecommendationsInput) (*computeoptimizer.ExportAutoScalingGroupRecommendationsOutput, error) {
	var output computeoptimizer.ExportAutoScalingGroupRecommendationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.ExportAutoScalingGroupRecommendations", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) ExportAutoScalingGroupRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.ExportAutoScalingGroupRecommendationsInput) *ComputeoptimizerExportAutoScalingGroupRecommendationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.ExportAutoScalingGroupRecommendations", input)
	return &ComputeoptimizerExportAutoScalingGroupRecommendationsFuture{Future: future}
}

func (a *ComputeOptimizerStub) ExportEC2InstanceRecommendations(ctx workflow.Context, input *computeoptimizer.ExportEC2InstanceRecommendationsInput) (*computeoptimizer.ExportEC2InstanceRecommendationsOutput, error) {
	var output computeoptimizer.ExportEC2InstanceRecommendationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.ExportEC2InstanceRecommendations", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) ExportEC2InstanceRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.ExportEC2InstanceRecommendationsInput) *ComputeoptimizerExportEC2InstanceRecommendationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.ExportEC2InstanceRecommendations", input)
	return &ComputeoptimizerExportEC2InstanceRecommendationsFuture{Future: future}
}

func (a *ComputeOptimizerStub) GetAutoScalingGroupRecommendations(ctx workflow.Context, input *computeoptimizer.GetAutoScalingGroupRecommendationsInput) (*computeoptimizer.GetAutoScalingGroupRecommendationsOutput, error) {
	var output computeoptimizer.GetAutoScalingGroupRecommendationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetAutoScalingGroupRecommendations", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) GetAutoScalingGroupRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.GetAutoScalingGroupRecommendationsInput) *ComputeoptimizerGetAutoScalingGroupRecommendationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetAutoScalingGroupRecommendations", input)
	return &ComputeoptimizerGetAutoScalingGroupRecommendationsFuture{Future: future}
}

func (a *ComputeOptimizerStub) GetEC2InstanceRecommendations(ctx workflow.Context, input *computeoptimizer.GetEC2InstanceRecommendationsInput) (*computeoptimizer.GetEC2InstanceRecommendationsOutput, error) {
	var output computeoptimizer.GetEC2InstanceRecommendationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetEC2InstanceRecommendations", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) GetEC2InstanceRecommendationsAsync(ctx workflow.Context, input *computeoptimizer.GetEC2InstanceRecommendationsInput) *ComputeoptimizerGetEC2InstanceRecommendationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetEC2InstanceRecommendations", input)
	return &ComputeoptimizerGetEC2InstanceRecommendationsFuture{Future: future}
}

func (a *ComputeOptimizerStub) GetEC2RecommendationProjectedMetrics(ctx workflow.Context, input *computeoptimizer.GetEC2RecommendationProjectedMetricsInput) (*computeoptimizer.GetEC2RecommendationProjectedMetricsOutput, error) {
	var output computeoptimizer.GetEC2RecommendationProjectedMetricsOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetEC2RecommendationProjectedMetrics", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) GetEC2RecommendationProjectedMetricsAsync(ctx workflow.Context, input *computeoptimizer.GetEC2RecommendationProjectedMetricsInput) *ComputeoptimizerGetEC2RecommendationProjectedMetricsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetEC2RecommendationProjectedMetrics", input)
	return &ComputeoptimizerGetEC2RecommendationProjectedMetricsFuture{Future: future}
}

func (a *ComputeOptimizerStub) GetEnrollmentStatus(ctx workflow.Context, input *computeoptimizer.GetEnrollmentStatusInput) (*computeoptimizer.GetEnrollmentStatusOutput, error) {
	var output computeoptimizer.GetEnrollmentStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetEnrollmentStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) GetEnrollmentStatusAsync(ctx workflow.Context, input *computeoptimizer.GetEnrollmentStatusInput) *ComputeoptimizerGetEnrollmentStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetEnrollmentStatus", input)
	return &ComputeoptimizerGetEnrollmentStatusFuture{Future: future}
}

func (a *ComputeOptimizerStub) GetRecommendationSummaries(ctx workflow.Context, input *computeoptimizer.GetRecommendationSummariesInput) (*computeoptimizer.GetRecommendationSummariesOutput, error) {
	var output computeoptimizer.GetRecommendationSummariesOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetRecommendationSummaries", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) GetRecommendationSummariesAsync(ctx workflow.Context, input *computeoptimizer.GetRecommendationSummariesInput) *ComputeoptimizerGetRecommendationSummariesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.GetRecommendationSummaries", input)
	return &ComputeoptimizerGetRecommendationSummariesFuture{Future: future}
}

func (a *ComputeOptimizerStub) UpdateEnrollmentStatus(ctx workflow.Context, input *computeoptimizer.UpdateEnrollmentStatusInput) (*computeoptimizer.UpdateEnrollmentStatusOutput, error) {
	var output computeoptimizer.UpdateEnrollmentStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.UpdateEnrollmentStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *ComputeOptimizerStub) UpdateEnrollmentStatusAsync(ctx workflow.Context, input *computeoptimizer.UpdateEnrollmentStatusInput) *ComputeoptimizerUpdateEnrollmentStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws.computeoptimizer.UpdateEnrollmentStatus", input)
	return &ComputeoptimizerUpdateEnrollmentStatusFuture{Future: future}
}
