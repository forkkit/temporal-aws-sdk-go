// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/pinpoint"
	"go.temporal.io/sdk/workflow"
)

type PinpointClient interface {
	CreateApp(ctx workflow.Context, input *pinpoint.CreateAppInput) (*pinpoint.CreateAppOutput, error)
	CreateAppAsync(ctx workflow.Context, input *pinpoint.CreateAppInput) *PinpointCreateAppFuture

	CreateCampaign(ctx workflow.Context, input *pinpoint.CreateCampaignInput) (*pinpoint.CreateCampaignOutput, error)
	CreateCampaignAsync(ctx workflow.Context, input *pinpoint.CreateCampaignInput) *PinpointCreateCampaignFuture

	CreateEmailTemplate(ctx workflow.Context, input *pinpoint.CreateEmailTemplateInput) (*pinpoint.CreateEmailTemplateOutput, error)
	CreateEmailTemplateAsync(ctx workflow.Context, input *pinpoint.CreateEmailTemplateInput) *PinpointCreateEmailTemplateFuture

	CreateExportJob(ctx workflow.Context, input *pinpoint.CreateExportJobInput) (*pinpoint.CreateExportJobOutput, error)
	CreateExportJobAsync(ctx workflow.Context, input *pinpoint.CreateExportJobInput) *PinpointCreateExportJobFuture

	CreateImportJob(ctx workflow.Context, input *pinpoint.CreateImportJobInput) (*pinpoint.CreateImportJobOutput, error)
	CreateImportJobAsync(ctx workflow.Context, input *pinpoint.CreateImportJobInput) *PinpointCreateImportJobFuture

	CreateJourney(ctx workflow.Context, input *pinpoint.CreateJourneyInput) (*pinpoint.CreateJourneyOutput, error)
	CreateJourneyAsync(ctx workflow.Context, input *pinpoint.CreateJourneyInput) *PinpointCreateJourneyFuture

	CreatePushTemplate(ctx workflow.Context, input *pinpoint.CreatePushTemplateInput) (*pinpoint.CreatePushTemplateOutput, error)
	CreatePushTemplateAsync(ctx workflow.Context, input *pinpoint.CreatePushTemplateInput) *PinpointCreatePushTemplateFuture

	CreateRecommenderConfiguration(ctx workflow.Context, input *pinpoint.CreateRecommenderConfigurationInput) (*pinpoint.CreateRecommenderConfigurationOutput, error)
	CreateRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.CreateRecommenderConfigurationInput) *PinpointCreateRecommenderConfigurationFuture

	CreateSegment(ctx workflow.Context, input *pinpoint.CreateSegmentInput) (*pinpoint.CreateSegmentOutput, error)
	CreateSegmentAsync(ctx workflow.Context, input *pinpoint.CreateSegmentInput) *PinpointCreateSegmentFuture

	CreateSmsTemplate(ctx workflow.Context, input *pinpoint.CreateSmsTemplateInput) (*pinpoint.CreateSmsTemplateOutput, error)
	CreateSmsTemplateAsync(ctx workflow.Context, input *pinpoint.CreateSmsTemplateInput) *PinpointCreateSmsTemplateFuture

	CreateVoiceTemplate(ctx workflow.Context, input *pinpoint.CreateVoiceTemplateInput) (*pinpoint.CreateVoiceTemplateOutput, error)
	CreateVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.CreateVoiceTemplateInput) *PinpointCreateVoiceTemplateFuture

	DeleteAdmChannel(ctx workflow.Context, input *pinpoint.DeleteAdmChannelInput) (*pinpoint.DeleteAdmChannelOutput, error)
	DeleteAdmChannelAsync(ctx workflow.Context, input *pinpoint.DeleteAdmChannelInput) *PinpointDeleteAdmChannelFuture

	DeleteApnsChannel(ctx workflow.Context, input *pinpoint.DeleteApnsChannelInput) (*pinpoint.DeleteApnsChannelOutput, error)
	DeleteApnsChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsChannelInput) *PinpointDeleteApnsChannelFuture

	DeleteApnsSandboxChannel(ctx workflow.Context, input *pinpoint.DeleteApnsSandboxChannelInput) (*pinpoint.DeleteApnsSandboxChannelOutput, error)
	DeleteApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsSandboxChannelInput) *PinpointDeleteApnsSandboxChannelFuture

	DeleteApnsVoipChannel(ctx workflow.Context, input *pinpoint.DeleteApnsVoipChannelInput) (*pinpoint.DeleteApnsVoipChannelOutput, error)
	DeleteApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsVoipChannelInput) *PinpointDeleteApnsVoipChannelFuture

	DeleteApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.DeleteApnsVoipSandboxChannelInput) (*pinpoint.DeleteApnsVoipSandboxChannelOutput, error)
	DeleteApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsVoipSandboxChannelInput) *PinpointDeleteApnsVoipSandboxChannelFuture

	DeleteApp(ctx workflow.Context, input *pinpoint.DeleteAppInput) (*pinpoint.DeleteAppOutput, error)
	DeleteAppAsync(ctx workflow.Context, input *pinpoint.DeleteAppInput) *PinpointDeleteAppFuture

	DeleteBaiduChannel(ctx workflow.Context, input *pinpoint.DeleteBaiduChannelInput) (*pinpoint.DeleteBaiduChannelOutput, error)
	DeleteBaiduChannelAsync(ctx workflow.Context, input *pinpoint.DeleteBaiduChannelInput) *PinpointDeleteBaiduChannelFuture

	DeleteCampaign(ctx workflow.Context, input *pinpoint.DeleteCampaignInput) (*pinpoint.DeleteCampaignOutput, error)
	DeleteCampaignAsync(ctx workflow.Context, input *pinpoint.DeleteCampaignInput) *PinpointDeleteCampaignFuture

	DeleteEmailChannel(ctx workflow.Context, input *pinpoint.DeleteEmailChannelInput) (*pinpoint.DeleteEmailChannelOutput, error)
	DeleteEmailChannelAsync(ctx workflow.Context, input *pinpoint.DeleteEmailChannelInput) *PinpointDeleteEmailChannelFuture

	DeleteEmailTemplate(ctx workflow.Context, input *pinpoint.DeleteEmailTemplateInput) (*pinpoint.DeleteEmailTemplateOutput, error)
	DeleteEmailTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteEmailTemplateInput) *PinpointDeleteEmailTemplateFuture

	DeleteEndpoint(ctx workflow.Context, input *pinpoint.DeleteEndpointInput) (*pinpoint.DeleteEndpointOutput, error)
	DeleteEndpointAsync(ctx workflow.Context, input *pinpoint.DeleteEndpointInput) *PinpointDeleteEndpointFuture

	DeleteEventStream(ctx workflow.Context, input *pinpoint.DeleteEventStreamInput) (*pinpoint.DeleteEventStreamOutput, error)
	DeleteEventStreamAsync(ctx workflow.Context, input *pinpoint.DeleteEventStreamInput) *PinpointDeleteEventStreamFuture

	DeleteGcmChannel(ctx workflow.Context, input *pinpoint.DeleteGcmChannelInput) (*pinpoint.DeleteGcmChannelOutput, error)
	DeleteGcmChannelAsync(ctx workflow.Context, input *pinpoint.DeleteGcmChannelInput) *PinpointDeleteGcmChannelFuture

	DeleteJourney(ctx workflow.Context, input *pinpoint.DeleteJourneyInput) (*pinpoint.DeleteJourneyOutput, error)
	DeleteJourneyAsync(ctx workflow.Context, input *pinpoint.DeleteJourneyInput) *PinpointDeleteJourneyFuture

	DeletePushTemplate(ctx workflow.Context, input *pinpoint.DeletePushTemplateInput) (*pinpoint.DeletePushTemplateOutput, error)
	DeletePushTemplateAsync(ctx workflow.Context, input *pinpoint.DeletePushTemplateInput) *PinpointDeletePushTemplateFuture

	DeleteRecommenderConfiguration(ctx workflow.Context, input *pinpoint.DeleteRecommenderConfigurationInput) (*pinpoint.DeleteRecommenderConfigurationOutput, error)
	DeleteRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.DeleteRecommenderConfigurationInput) *PinpointDeleteRecommenderConfigurationFuture

	DeleteSegment(ctx workflow.Context, input *pinpoint.DeleteSegmentInput) (*pinpoint.DeleteSegmentOutput, error)
	DeleteSegmentAsync(ctx workflow.Context, input *pinpoint.DeleteSegmentInput) *PinpointDeleteSegmentFuture

	DeleteSmsChannel(ctx workflow.Context, input *pinpoint.DeleteSmsChannelInput) (*pinpoint.DeleteSmsChannelOutput, error)
	DeleteSmsChannelAsync(ctx workflow.Context, input *pinpoint.DeleteSmsChannelInput) *PinpointDeleteSmsChannelFuture

	DeleteSmsTemplate(ctx workflow.Context, input *pinpoint.DeleteSmsTemplateInput) (*pinpoint.DeleteSmsTemplateOutput, error)
	DeleteSmsTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteSmsTemplateInput) *PinpointDeleteSmsTemplateFuture

	DeleteUserEndpoints(ctx workflow.Context, input *pinpoint.DeleteUserEndpointsInput) (*pinpoint.DeleteUserEndpointsOutput, error)
	DeleteUserEndpointsAsync(ctx workflow.Context, input *pinpoint.DeleteUserEndpointsInput) *PinpointDeleteUserEndpointsFuture

	DeleteVoiceChannel(ctx workflow.Context, input *pinpoint.DeleteVoiceChannelInput) (*pinpoint.DeleteVoiceChannelOutput, error)
	DeleteVoiceChannelAsync(ctx workflow.Context, input *pinpoint.DeleteVoiceChannelInput) *PinpointDeleteVoiceChannelFuture

	DeleteVoiceTemplate(ctx workflow.Context, input *pinpoint.DeleteVoiceTemplateInput) (*pinpoint.DeleteVoiceTemplateOutput, error)
	DeleteVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteVoiceTemplateInput) *PinpointDeleteVoiceTemplateFuture

	GetAdmChannel(ctx workflow.Context, input *pinpoint.GetAdmChannelInput) (*pinpoint.GetAdmChannelOutput, error)
	GetAdmChannelAsync(ctx workflow.Context, input *pinpoint.GetAdmChannelInput) *PinpointGetAdmChannelFuture

	GetApnsChannel(ctx workflow.Context, input *pinpoint.GetApnsChannelInput) (*pinpoint.GetApnsChannelOutput, error)
	GetApnsChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsChannelInput) *PinpointGetApnsChannelFuture

	GetApnsSandboxChannel(ctx workflow.Context, input *pinpoint.GetApnsSandboxChannelInput) (*pinpoint.GetApnsSandboxChannelOutput, error)
	GetApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsSandboxChannelInput) *PinpointGetApnsSandboxChannelFuture

	GetApnsVoipChannel(ctx workflow.Context, input *pinpoint.GetApnsVoipChannelInput) (*pinpoint.GetApnsVoipChannelOutput, error)
	GetApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsVoipChannelInput) *PinpointGetApnsVoipChannelFuture

	GetApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.GetApnsVoipSandboxChannelInput) (*pinpoint.GetApnsVoipSandboxChannelOutput, error)
	GetApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsVoipSandboxChannelInput) *PinpointGetApnsVoipSandboxChannelFuture

	GetApp(ctx workflow.Context, input *pinpoint.GetAppInput) (*pinpoint.GetAppOutput, error)
	GetAppAsync(ctx workflow.Context, input *pinpoint.GetAppInput) *PinpointGetAppFuture

	GetApplicationDateRangeKpi(ctx workflow.Context, input *pinpoint.GetApplicationDateRangeKpiInput) (*pinpoint.GetApplicationDateRangeKpiOutput, error)
	GetApplicationDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetApplicationDateRangeKpiInput) *PinpointGetApplicationDateRangeKpiFuture

	GetApplicationSettings(ctx workflow.Context, input *pinpoint.GetApplicationSettingsInput) (*pinpoint.GetApplicationSettingsOutput, error)
	GetApplicationSettingsAsync(ctx workflow.Context, input *pinpoint.GetApplicationSettingsInput) *PinpointGetApplicationSettingsFuture

	GetApps(ctx workflow.Context, input *pinpoint.GetAppsInput) (*pinpoint.GetAppsOutput, error)
	GetAppsAsync(ctx workflow.Context, input *pinpoint.GetAppsInput) *PinpointGetAppsFuture

	GetBaiduChannel(ctx workflow.Context, input *pinpoint.GetBaiduChannelInput) (*pinpoint.GetBaiduChannelOutput, error)
	GetBaiduChannelAsync(ctx workflow.Context, input *pinpoint.GetBaiduChannelInput) *PinpointGetBaiduChannelFuture

	GetCampaign(ctx workflow.Context, input *pinpoint.GetCampaignInput) (*pinpoint.GetCampaignOutput, error)
	GetCampaignAsync(ctx workflow.Context, input *pinpoint.GetCampaignInput) *PinpointGetCampaignFuture

	GetCampaignActivities(ctx workflow.Context, input *pinpoint.GetCampaignActivitiesInput) (*pinpoint.GetCampaignActivitiesOutput, error)
	GetCampaignActivitiesAsync(ctx workflow.Context, input *pinpoint.GetCampaignActivitiesInput) *PinpointGetCampaignActivitiesFuture

	GetCampaignDateRangeKpi(ctx workflow.Context, input *pinpoint.GetCampaignDateRangeKpiInput) (*pinpoint.GetCampaignDateRangeKpiOutput, error)
	GetCampaignDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetCampaignDateRangeKpiInput) *PinpointGetCampaignDateRangeKpiFuture

	GetCampaignVersion(ctx workflow.Context, input *pinpoint.GetCampaignVersionInput) (*pinpoint.GetCampaignVersionOutput, error)
	GetCampaignVersionAsync(ctx workflow.Context, input *pinpoint.GetCampaignVersionInput) *PinpointGetCampaignVersionFuture

	GetCampaignVersions(ctx workflow.Context, input *pinpoint.GetCampaignVersionsInput) (*pinpoint.GetCampaignVersionsOutput, error)
	GetCampaignVersionsAsync(ctx workflow.Context, input *pinpoint.GetCampaignVersionsInput) *PinpointGetCampaignVersionsFuture

	GetCampaigns(ctx workflow.Context, input *pinpoint.GetCampaignsInput) (*pinpoint.GetCampaignsOutput, error)
	GetCampaignsAsync(ctx workflow.Context, input *pinpoint.GetCampaignsInput) *PinpointGetCampaignsFuture

	GetChannels(ctx workflow.Context, input *pinpoint.GetChannelsInput) (*pinpoint.GetChannelsOutput, error)
	GetChannelsAsync(ctx workflow.Context, input *pinpoint.GetChannelsInput) *PinpointGetChannelsFuture

	GetEmailChannel(ctx workflow.Context, input *pinpoint.GetEmailChannelInput) (*pinpoint.GetEmailChannelOutput, error)
	GetEmailChannelAsync(ctx workflow.Context, input *pinpoint.GetEmailChannelInput) *PinpointGetEmailChannelFuture

	GetEmailTemplate(ctx workflow.Context, input *pinpoint.GetEmailTemplateInput) (*pinpoint.GetEmailTemplateOutput, error)
	GetEmailTemplateAsync(ctx workflow.Context, input *pinpoint.GetEmailTemplateInput) *PinpointGetEmailTemplateFuture

	GetEndpoint(ctx workflow.Context, input *pinpoint.GetEndpointInput) (*pinpoint.GetEndpointOutput, error)
	GetEndpointAsync(ctx workflow.Context, input *pinpoint.GetEndpointInput) *PinpointGetEndpointFuture

	GetEventStream(ctx workflow.Context, input *pinpoint.GetEventStreamInput) (*pinpoint.GetEventStreamOutput, error)
	GetEventStreamAsync(ctx workflow.Context, input *pinpoint.GetEventStreamInput) *PinpointGetEventStreamFuture

	GetExportJob(ctx workflow.Context, input *pinpoint.GetExportJobInput) (*pinpoint.GetExportJobOutput, error)
	GetExportJobAsync(ctx workflow.Context, input *pinpoint.GetExportJobInput) *PinpointGetExportJobFuture

	GetExportJobs(ctx workflow.Context, input *pinpoint.GetExportJobsInput) (*pinpoint.GetExportJobsOutput, error)
	GetExportJobsAsync(ctx workflow.Context, input *pinpoint.GetExportJobsInput) *PinpointGetExportJobsFuture

	GetGcmChannel(ctx workflow.Context, input *pinpoint.GetGcmChannelInput) (*pinpoint.GetGcmChannelOutput, error)
	GetGcmChannelAsync(ctx workflow.Context, input *pinpoint.GetGcmChannelInput) *PinpointGetGcmChannelFuture

	GetImportJob(ctx workflow.Context, input *pinpoint.GetImportJobInput) (*pinpoint.GetImportJobOutput, error)
	GetImportJobAsync(ctx workflow.Context, input *pinpoint.GetImportJobInput) *PinpointGetImportJobFuture

	GetImportJobs(ctx workflow.Context, input *pinpoint.GetImportJobsInput) (*pinpoint.GetImportJobsOutput, error)
	GetImportJobsAsync(ctx workflow.Context, input *pinpoint.GetImportJobsInput) *PinpointGetImportJobsFuture

	GetJourney(ctx workflow.Context, input *pinpoint.GetJourneyInput) (*pinpoint.GetJourneyOutput, error)
	GetJourneyAsync(ctx workflow.Context, input *pinpoint.GetJourneyInput) *PinpointGetJourneyFuture

	GetJourneyDateRangeKpi(ctx workflow.Context, input *pinpoint.GetJourneyDateRangeKpiInput) (*pinpoint.GetJourneyDateRangeKpiOutput, error)
	GetJourneyDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetJourneyDateRangeKpiInput) *PinpointGetJourneyDateRangeKpiFuture

	GetJourneyExecutionActivityMetrics(ctx workflow.Context, input *pinpoint.GetJourneyExecutionActivityMetricsInput) (*pinpoint.GetJourneyExecutionActivityMetricsOutput, error)
	GetJourneyExecutionActivityMetricsAsync(ctx workflow.Context, input *pinpoint.GetJourneyExecutionActivityMetricsInput) *PinpointGetJourneyExecutionActivityMetricsFuture

	GetJourneyExecutionMetrics(ctx workflow.Context, input *pinpoint.GetJourneyExecutionMetricsInput) (*pinpoint.GetJourneyExecutionMetricsOutput, error)
	GetJourneyExecutionMetricsAsync(ctx workflow.Context, input *pinpoint.GetJourneyExecutionMetricsInput) *PinpointGetJourneyExecutionMetricsFuture

	GetPushTemplate(ctx workflow.Context, input *pinpoint.GetPushTemplateInput) (*pinpoint.GetPushTemplateOutput, error)
	GetPushTemplateAsync(ctx workflow.Context, input *pinpoint.GetPushTemplateInput) *PinpointGetPushTemplateFuture

	GetRecommenderConfiguration(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationInput) (*pinpoint.GetRecommenderConfigurationOutput, error)
	GetRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationInput) *PinpointGetRecommenderConfigurationFuture

	GetRecommenderConfigurations(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationsInput) (*pinpoint.GetRecommenderConfigurationsOutput, error)
	GetRecommenderConfigurationsAsync(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationsInput) *PinpointGetRecommenderConfigurationsFuture

	GetSegment(ctx workflow.Context, input *pinpoint.GetSegmentInput) (*pinpoint.GetSegmentOutput, error)
	GetSegmentAsync(ctx workflow.Context, input *pinpoint.GetSegmentInput) *PinpointGetSegmentFuture

	GetSegmentExportJobs(ctx workflow.Context, input *pinpoint.GetSegmentExportJobsInput) (*pinpoint.GetSegmentExportJobsOutput, error)
	GetSegmentExportJobsAsync(ctx workflow.Context, input *pinpoint.GetSegmentExportJobsInput) *PinpointGetSegmentExportJobsFuture

	GetSegmentImportJobs(ctx workflow.Context, input *pinpoint.GetSegmentImportJobsInput) (*pinpoint.GetSegmentImportJobsOutput, error)
	GetSegmentImportJobsAsync(ctx workflow.Context, input *pinpoint.GetSegmentImportJobsInput) *PinpointGetSegmentImportJobsFuture

	GetSegmentVersion(ctx workflow.Context, input *pinpoint.GetSegmentVersionInput) (*pinpoint.GetSegmentVersionOutput, error)
	GetSegmentVersionAsync(ctx workflow.Context, input *pinpoint.GetSegmentVersionInput) *PinpointGetSegmentVersionFuture

	GetSegmentVersions(ctx workflow.Context, input *pinpoint.GetSegmentVersionsInput) (*pinpoint.GetSegmentVersionsOutput, error)
	GetSegmentVersionsAsync(ctx workflow.Context, input *pinpoint.GetSegmentVersionsInput) *PinpointGetSegmentVersionsFuture

	GetSegments(ctx workflow.Context, input *pinpoint.GetSegmentsInput) (*pinpoint.GetSegmentsOutput, error)
	GetSegmentsAsync(ctx workflow.Context, input *pinpoint.GetSegmentsInput) *PinpointGetSegmentsFuture

	GetSmsChannel(ctx workflow.Context, input *pinpoint.GetSmsChannelInput) (*pinpoint.GetSmsChannelOutput, error)
	GetSmsChannelAsync(ctx workflow.Context, input *pinpoint.GetSmsChannelInput) *PinpointGetSmsChannelFuture

	GetSmsTemplate(ctx workflow.Context, input *pinpoint.GetSmsTemplateInput) (*pinpoint.GetSmsTemplateOutput, error)
	GetSmsTemplateAsync(ctx workflow.Context, input *pinpoint.GetSmsTemplateInput) *PinpointGetSmsTemplateFuture

	GetUserEndpoints(ctx workflow.Context, input *pinpoint.GetUserEndpointsInput) (*pinpoint.GetUserEndpointsOutput, error)
	GetUserEndpointsAsync(ctx workflow.Context, input *pinpoint.GetUserEndpointsInput) *PinpointGetUserEndpointsFuture

	GetVoiceChannel(ctx workflow.Context, input *pinpoint.GetVoiceChannelInput) (*pinpoint.GetVoiceChannelOutput, error)
	GetVoiceChannelAsync(ctx workflow.Context, input *pinpoint.GetVoiceChannelInput) *PinpointGetVoiceChannelFuture

	GetVoiceTemplate(ctx workflow.Context, input *pinpoint.GetVoiceTemplateInput) (*pinpoint.GetVoiceTemplateOutput, error)
	GetVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.GetVoiceTemplateInput) *PinpointGetVoiceTemplateFuture

	ListJourneys(ctx workflow.Context, input *pinpoint.ListJourneysInput) (*pinpoint.ListJourneysOutput, error)
	ListJourneysAsync(ctx workflow.Context, input *pinpoint.ListJourneysInput) *PinpointListJourneysFuture

	ListTagsForResource(ctx workflow.Context, input *pinpoint.ListTagsForResourceInput) (*pinpoint.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *pinpoint.ListTagsForResourceInput) *PinpointListTagsForResourceFuture

	ListTemplateVersions(ctx workflow.Context, input *pinpoint.ListTemplateVersionsInput) (*pinpoint.ListTemplateVersionsOutput, error)
	ListTemplateVersionsAsync(ctx workflow.Context, input *pinpoint.ListTemplateVersionsInput) *PinpointListTemplateVersionsFuture

	ListTemplates(ctx workflow.Context, input *pinpoint.ListTemplatesInput) (*pinpoint.ListTemplatesOutput, error)
	ListTemplatesAsync(ctx workflow.Context, input *pinpoint.ListTemplatesInput) *PinpointListTemplatesFuture

	PhoneNumberValidate(ctx workflow.Context, input *pinpoint.PhoneNumberValidateInput) (*pinpoint.PhoneNumberValidateOutput, error)
	PhoneNumberValidateAsync(ctx workflow.Context, input *pinpoint.PhoneNumberValidateInput) *PinpointPhoneNumberValidateFuture

	PutEventStream(ctx workflow.Context, input *pinpoint.PutEventStreamInput) (*pinpoint.PutEventStreamOutput, error)
	PutEventStreamAsync(ctx workflow.Context, input *pinpoint.PutEventStreamInput) *PinpointPutEventStreamFuture

	PutEvents(ctx workflow.Context, input *pinpoint.PutEventsInput) (*pinpoint.PutEventsOutput, error)
	PutEventsAsync(ctx workflow.Context, input *pinpoint.PutEventsInput) *PinpointPutEventsFuture

	RemoveAttributes(ctx workflow.Context, input *pinpoint.RemoveAttributesInput) (*pinpoint.RemoveAttributesOutput, error)
	RemoveAttributesAsync(ctx workflow.Context, input *pinpoint.RemoveAttributesInput) *PinpointRemoveAttributesFuture

	SendMessages(ctx workflow.Context, input *pinpoint.SendMessagesInput) (*pinpoint.SendMessagesOutput, error)
	SendMessagesAsync(ctx workflow.Context, input *pinpoint.SendMessagesInput) *PinpointSendMessagesFuture

	SendUsersMessages(ctx workflow.Context, input *pinpoint.SendUsersMessagesInput) (*pinpoint.SendUsersMessagesOutput, error)
	SendUsersMessagesAsync(ctx workflow.Context, input *pinpoint.SendUsersMessagesInput) *PinpointSendUsersMessagesFuture

	TagResource(ctx workflow.Context, input *pinpoint.TagResourceInput) (*pinpoint.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *pinpoint.TagResourceInput) *PinpointTagResourceFuture

	UntagResource(ctx workflow.Context, input *pinpoint.UntagResourceInput) (*pinpoint.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *pinpoint.UntagResourceInput) *PinpointUntagResourceFuture

	UpdateAdmChannel(ctx workflow.Context, input *pinpoint.UpdateAdmChannelInput) (*pinpoint.UpdateAdmChannelOutput, error)
	UpdateAdmChannelAsync(ctx workflow.Context, input *pinpoint.UpdateAdmChannelInput) *PinpointUpdateAdmChannelFuture

	UpdateApnsChannel(ctx workflow.Context, input *pinpoint.UpdateApnsChannelInput) (*pinpoint.UpdateApnsChannelOutput, error)
	UpdateApnsChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsChannelInput) *PinpointUpdateApnsChannelFuture

	UpdateApnsSandboxChannel(ctx workflow.Context, input *pinpoint.UpdateApnsSandboxChannelInput) (*pinpoint.UpdateApnsSandboxChannelOutput, error)
	UpdateApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsSandboxChannelInput) *PinpointUpdateApnsSandboxChannelFuture

	UpdateApnsVoipChannel(ctx workflow.Context, input *pinpoint.UpdateApnsVoipChannelInput) (*pinpoint.UpdateApnsVoipChannelOutput, error)
	UpdateApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsVoipChannelInput) *PinpointUpdateApnsVoipChannelFuture

	UpdateApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.UpdateApnsVoipSandboxChannelInput) (*pinpoint.UpdateApnsVoipSandboxChannelOutput, error)
	UpdateApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsVoipSandboxChannelInput) *PinpointUpdateApnsVoipSandboxChannelFuture

	UpdateApplicationSettings(ctx workflow.Context, input *pinpoint.UpdateApplicationSettingsInput) (*pinpoint.UpdateApplicationSettingsOutput, error)
	UpdateApplicationSettingsAsync(ctx workflow.Context, input *pinpoint.UpdateApplicationSettingsInput) *PinpointUpdateApplicationSettingsFuture

	UpdateBaiduChannel(ctx workflow.Context, input *pinpoint.UpdateBaiduChannelInput) (*pinpoint.UpdateBaiduChannelOutput, error)
	UpdateBaiduChannelAsync(ctx workflow.Context, input *pinpoint.UpdateBaiduChannelInput) *PinpointUpdateBaiduChannelFuture

	UpdateCampaign(ctx workflow.Context, input *pinpoint.UpdateCampaignInput) (*pinpoint.UpdateCampaignOutput, error)
	UpdateCampaignAsync(ctx workflow.Context, input *pinpoint.UpdateCampaignInput) *PinpointUpdateCampaignFuture

	UpdateEmailChannel(ctx workflow.Context, input *pinpoint.UpdateEmailChannelInput) (*pinpoint.UpdateEmailChannelOutput, error)
	UpdateEmailChannelAsync(ctx workflow.Context, input *pinpoint.UpdateEmailChannelInput) *PinpointUpdateEmailChannelFuture

	UpdateEmailTemplate(ctx workflow.Context, input *pinpoint.UpdateEmailTemplateInput) (*pinpoint.UpdateEmailTemplateOutput, error)
	UpdateEmailTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateEmailTemplateInput) *PinpointUpdateEmailTemplateFuture

	UpdateEndpoint(ctx workflow.Context, input *pinpoint.UpdateEndpointInput) (*pinpoint.UpdateEndpointOutput, error)
	UpdateEndpointAsync(ctx workflow.Context, input *pinpoint.UpdateEndpointInput) *PinpointUpdateEndpointFuture

	UpdateEndpointsBatch(ctx workflow.Context, input *pinpoint.UpdateEndpointsBatchInput) (*pinpoint.UpdateEndpointsBatchOutput, error)
	UpdateEndpointsBatchAsync(ctx workflow.Context, input *pinpoint.UpdateEndpointsBatchInput) *PinpointUpdateEndpointsBatchFuture

	UpdateGcmChannel(ctx workflow.Context, input *pinpoint.UpdateGcmChannelInput) (*pinpoint.UpdateGcmChannelOutput, error)
	UpdateGcmChannelAsync(ctx workflow.Context, input *pinpoint.UpdateGcmChannelInput) *PinpointUpdateGcmChannelFuture

	UpdateJourney(ctx workflow.Context, input *pinpoint.UpdateJourneyInput) (*pinpoint.UpdateJourneyOutput, error)
	UpdateJourneyAsync(ctx workflow.Context, input *pinpoint.UpdateJourneyInput) *PinpointUpdateJourneyFuture

	UpdateJourneyState(ctx workflow.Context, input *pinpoint.UpdateJourneyStateInput) (*pinpoint.UpdateJourneyStateOutput, error)
	UpdateJourneyStateAsync(ctx workflow.Context, input *pinpoint.UpdateJourneyStateInput) *PinpointUpdateJourneyStateFuture

	UpdatePushTemplate(ctx workflow.Context, input *pinpoint.UpdatePushTemplateInput) (*pinpoint.UpdatePushTemplateOutput, error)
	UpdatePushTemplateAsync(ctx workflow.Context, input *pinpoint.UpdatePushTemplateInput) *PinpointUpdatePushTemplateFuture

	UpdateRecommenderConfiguration(ctx workflow.Context, input *pinpoint.UpdateRecommenderConfigurationInput) (*pinpoint.UpdateRecommenderConfigurationOutput, error)
	UpdateRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.UpdateRecommenderConfigurationInput) *PinpointUpdateRecommenderConfigurationFuture

	UpdateSegment(ctx workflow.Context, input *pinpoint.UpdateSegmentInput) (*pinpoint.UpdateSegmentOutput, error)
	UpdateSegmentAsync(ctx workflow.Context, input *pinpoint.UpdateSegmentInput) *PinpointUpdateSegmentFuture

	UpdateSmsChannel(ctx workflow.Context, input *pinpoint.UpdateSmsChannelInput) (*pinpoint.UpdateSmsChannelOutput, error)
	UpdateSmsChannelAsync(ctx workflow.Context, input *pinpoint.UpdateSmsChannelInput) *PinpointUpdateSmsChannelFuture

	UpdateSmsTemplate(ctx workflow.Context, input *pinpoint.UpdateSmsTemplateInput) (*pinpoint.UpdateSmsTemplateOutput, error)
	UpdateSmsTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateSmsTemplateInput) *PinpointUpdateSmsTemplateFuture

	UpdateTemplateActiveVersion(ctx workflow.Context, input *pinpoint.UpdateTemplateActiveVersionInput) (*pinpoint.UpdateTemplateActiveVersionOutput, error)
	UpdateTemplateActiveVersionAsync(ctx workflow.Context, input *pinpoint.UpdateTemplateActiveVersionInput) *PinpointUpdateTemplateActiveVersionFuture

	UpdateVoiceChannel(ctx workflow.Context, input *pinpoint.UpdateVoiceChannelInput) (*pinpoint.UpdateVoiceChannelOutput, error)
	UpdateVoiceChannelAsync(ctx workflow.Context, input *pinpoint.UpdateVoiceChannelInput) *PinpointUpdateVoiceChannelFuture

	UpdateVoiceTemplate(ctx workflow.Context, input *pinpoint.UpdateVoiceTemplateInput) (*pinpoint.UpdateVoiceTemplateOutput, error)
	UpdateVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateVoiceTemplateInput) *PinpointUpdateVoiceTemplateFuture
}

type PinpointStub struct{}

func NewPinpointStub() PinpointClient {
	return &PinpointStub{}
}

type PinpointCreateAppFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateAppFuture) Get(ctx workflow.Context) (*pinpoint.CreateAppOutput, error) {
	var output pinpoint.CreateAppOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateCampaignFuture) Get(ctx workflow.Context) (*pinpoint.CreateCampaignOutput, error) {
	var output pinpoint.CreateCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreateEmailTemplateOutput, error) {
	var output pinpoint.CreateEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateExportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateExportJobFuture) Get(ctx workflow.Context) (*pinpoint.CreateExportJobOutput, error) {
	var output pinpoint.CreateExportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateImportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateImportJobFuture) Get(ctx workflow.Context) (*pinpoint.CreateImportJobOutput, error) {
	var output pinpoint.CreateImportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateJourneyFuture) Get(ctx workflow.Context) (*pinpoint.CreateJourneyOutput, error) {
	var output pinpoint.CreateJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreatePushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreatePushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreatePushTemplateOutput, error) {
	var output pinpoint.CreatePushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.CreateRecommenderConfigurationOutput, error) {
	var output pinpoint.CreateRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateSegmentFuture) Get(ctx workflow.Context) (*pinpoint.CreateSegmentOutput, error) {
	var output pinpoint.CreateSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreateSmsTemplateOutput, error) {
	var output pinpoint.CreateSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointCreateVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointCreateVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreateVoiceTemplateOutput, error) {
	var output pinpoint.CreateVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteAdmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteAdmChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteAdmChannelOutput, error) {
	var output pinpoint.DeleteAdmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteApnsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteApnsChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsChannelOutput, error) {
	var output pinpoint.DeleteApnsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteApnsSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteApnsSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteApnsVoipChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteApnsVoipChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsVoipChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteApnsVoipSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteApnsVoipSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteAppFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteAppFuture) Get(ctx workflow.Context) (*pinpoint.DeleteAppOutput, error) {
	var output pinpoint.DeleteAppOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteBaiduChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteBaiduChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteBaiduChannelOutput, error) {
	var output pinpoint.DeleteBaiduChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteCampaignFuture) Get(ctx workflow.Context) (*pinpoint.DeleteCampaignOutput, error) {
	var output pinpoint.DeleteCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteEmailChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteEmailChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEmailChannelOutput, error) {
	var output pinpoint.DeleteEmailChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEmailTemplateOutput, error) {
	var output pinpoint.DeleteEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteEndpointFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteEndpointFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEndpointOutput, error) {
	var output pinpoint.DeleteEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteEventStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteEventStreamFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEventStreamOutput, error) {
	var output pinpoint.DeleteEventStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteGcmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteGcmChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteGcmChannelOutput, error) {
	var output pinpoint.DeleteGcmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteJourneyFuture) Get(ctx workflow.Context) (*pinpoint.DeleteJourneyOutput, error) {
	var output pinpoint.DeleteJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeletePushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeletePushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeletePushTemplateOutput, error) {
	var output pinpoint.DeletePushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.DeleteRecommenderConfigurationOutput, error) {
	var output pinpoint.DeleteRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteSegmentFuture) Get(ctx workflow.Context) (*pinpoint.DeleteSegmentOutput, error) {
	var output pinpoint.DeleteSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteSmsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteSmsChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteSmsChannelOutput, error) {
	var output pinpoint.DeleteSmsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeleteSmsTemplateOutput, error) {
	var output pinpoint.DeleteSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteUserEndpointsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteUserEndpointsFuture) Get(ctx workflow.Context) (*pinpoint.DeleteUserEndpointsOutput, error) {
	var output pinpoint.DeleteUserEndpointsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteVoiceChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteVoiceChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteVoiceChannelOutput, error) {
	var output pinpoint.DeleteVoiceChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointDeleteVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointDeleteVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeleteVoiceTemplateOutput, error) {
	var output pinpoint.DeleteVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetAdmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetAdmChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetAdmChannelOutput, error) {
	var output pinpoint.GetAdmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetApnsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetApnsChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsChannelOutput, error) {
	var output pinpoint.GetApnsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetApnsSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetApnsSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsSandboxChannelOutput, error) {
	var output pinpoint.GetApnsSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetApnsVoipChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetApnsVoipChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsVoipChannelOutput, error) {
	var output pinpoint.GetApnsVoipChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetApnsVoipSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetApnsVoipSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.GetApnsVoipSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetAppFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetAppFuture) Get(ctx workflow.Context) (*pinpoint.GetAppOutput, error) {
	var output pinpoint.GetAppOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetApplicationDateRangeKpiFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetApplicationDateRangeKpiFuture) Get(ctx workflow.Context) (*pinpoint.GetApplicationDateRangeKpiOutput, error) {
	var output pinpoint.GetApplicationDateRangeKpiOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetApplicationSettingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetApplicationSettingsFuture) Get(ctx workflow.Context) (*pinpoint.GetApplicationSettingsOutput, error) {
	var output pinpoint.GetApplicationSettingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetAppsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetAppsFuture) Get(ctx workflow.Context) (*pinpoint.GetAppsOutput, error) {
	var output pinpoint.GetAppsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetBaiduChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetBaiduChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetBaiduChannelOutput, error) {
	var output pinpoint.GetBaiduChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetCampaignFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignOutput, error) {
	var output pinpoint.GetCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetCampaignActivitiesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetCampaignActivitiesFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignActivitiesOutput, error) {
	var output pinpoint.GetCampaignActivitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetCampaignDateRangeKpiFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetCampaignDateRangeKpiFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignDateRangeKpiOutput, error) {
	var output pinpoint.GetCampaignDateRangeKpiOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetCampaignVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetCampaignVersionFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignVersionOutput, error) {
	var output pinpoint.GetCampaignVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetCampaignVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetCampaignVersionsFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignVersionsOutput, error) {
	var output pinpoint.GetCampaignVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetCampaignsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetCampaignsFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignsOutput, error) {
	var output pinpoint.GetCampaignsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetChannelsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetChannelsFuture) Get(ctx workflow.Context) (*pinpoint.GetChannelsOutput, error) {
	var output pinpoint.GetChannelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetEmailChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetEmailChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetEmailChannelOutput, error) {
	var output pinpoint.GetEmailChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetEmailTemplateOutput, error) {
	var output pinpoint.GetEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetEndpointFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetEndpointFuture) Get(ctx workflow.Context) (*pinpoint.GetEndpointOutput, error) {
	var output pinpoint.GetEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetEventStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetEventStreamFuture) Get(ctx workflow.Context) (*pinpoint.GetEventStreamOutput, error) {
	var output pinpoint.GetEventStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetExportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetExportJobFuture) Get(ctx workflow.Context) (*pinpoint.GetExportJobOutput, error) {
	var output pinpoint.GetExportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetExportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetExportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetExportJobsOutput, error) {
	var output pinpoint.GetExportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetGcmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetGcmChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetGcmChannelOutput, error) {
	var output pinpoint.GetGcmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetImportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetImportJobFuture) Get(ctx workflow.Context) (*pinpoint.GetImportJobOutput, error) {
	var output pinpoint.GetImportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetImportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetImportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetImportJobsOutput, error) {
	var output pinpoint.GetImportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetJourneyFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyOutput, error) {
	var output pinpoint.GetJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetJourneyDateRangeKpiFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetJourneyDateRangeKpiFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyDateRangeKpiOutput, error) {
	var output pinpoint.GetJourneyDateRangeKpiOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetJourneyExecutionActivityMetricsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetJourneyExecutionActivityMetricsFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyExecutionActivityMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionActivityMetricsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetJourneyExecutionMetricsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetJourneyExecutionMetricsFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyExecutionMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionMetricsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetPushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetPushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetPushTemplateOutput, error) {
	var output pinpoint.GetPushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.GetRecommenderConfigurationOutput, error) {
	var output pinpoint.GetRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetRecommenderConfigurationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetRecommenderConfigurationsFuture) Get(ctx workflow.Context) (*pinpoint.GetRecommenderConfigurationsOutput, error) {
	var output pinpoint.GetRecommenderConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSegmentFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentOutput, error) {
	var output pinpoint.GetSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSegmentExportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSegmentExportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentExportJobsOutput, error) {
	var output pinpoint.GetSegmentExportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSegmentImportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSegmentImportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentImportJobsOutput, error) {
	var output pinpoint.GetSegmentImportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSegmentVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSegmentVersionFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentVersionOutput, error) {
	var output pinpoint.GetSegmentVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSegmentVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSegmentVersionsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentVersionsOutput, error) {
	var output pinpoint.GetSegmentVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSegmentsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSegmentsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentsOutput, error) {
	var output pinpoint.GetSegmentsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSmsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSmsChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetSmsChannelOutput, error) {
	var output pinpoint.GetSmsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetSmsTemplateOutput, error) {
	var output pinpoint.GetSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetUserEndpointsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetUserEndpointsFuture) Get(ctx workflow.Context) (*pinpoint.GetUserEndpointsOutput, error) {
	var output pinpoint.GetUserEndpointsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetVoiceChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetVoiceChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetVoiceChannelOutput, error) {
	var output pinpoint.GetVoiceChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointGetVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointGetVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetVoiceTemplateOutput, error) {
	var output pinpoint.GetVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointListJourneysFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointListJourneysFuture) Get(ctx workflow.Context) (*pinpoint.ListJourneysOutput, error) {
	var output pinpoint.ListJourneysOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointListTagsForResourceFuture) Get(ctx workflow.Context) (*pinpoint.ListTagsForResourceOutput, error) {
	var output pinpoint.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointListTemplateVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointListTemplateVersionsFuture) Get(ctx workflow.Context) (*pinpoint.ListTemplateVersionsOutput, error) {
	var output pinpoint.ListTemplateVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointListTemplatesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointListTemplatesFuture) Get(ctx workflow.Context) (*pinpoint.ListTemplatesOutput, error) {
	var output pinpoint.ListTemplatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointPhoneNumberValidateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointPhoneNumberValidateFuture) Get(ctx workflow.Context) (*pinpoint.PhoneNumberValidateOutput, error) {
	var output pinpoint.PhoneNumberValidateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointPutEventStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointPutEventStreamFuture) Get(ctx workflow.Context) (*pinpoint.PutEventStreamOutput, error) {
	var output pinpoint.PutEventStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointPutEventsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointPutEventsFuture) Get(ctx workflow.Context) (*pinpoint.PutEventsOutput, error) {
	var output pinpoint.PutEventsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointRemoveAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointRemoveAttributesFuture) Get(ctx workflow.Context) (*pinpoint.RemoveAttributesOutput, error) {
	var output pinpoint.RemoveAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointSendMessagesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointSendMessagesFuture) Get(ctx workflow.Context) (*pinpoint.SendMessagesOutput, error) {
	var output pinpoint.SendMessagesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointSendUsersMessagesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointSendUsersMessagesFuture) Get(ctx workflow.Context) (*pinpoint.SendUsersMessagesOutput, error) {
	var output pinpoint.SendUsersMessagesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointTagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointTagResourceFuture) Get(ctx workflow.Context) (*pinpoint.TagResourceOutput, error) {
	var output pinpoint.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUntagResourceFuture) Get(ctx workflow.Context) (*pinpoint.UntagResourceOutput, error) {
	var output pinpoint.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateAdmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateAdmChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateAdmChannelOutput, error) {
	var output pinpoint.UpdateAdmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateApnsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateApnsChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsChannelOutput, error) {
	var output pinpoint.UpdateApnsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateApnsSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateApnsSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateApnsVoipChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateApnsVoipChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsVoipChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateApnsVoipSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateApnsVoipSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateApplicationSettingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateApplicationSettingsFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApplicationSettingsOutput, error) {
	var output pinpoint.UpdateApplicationSettingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateBaiduChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateBaiduChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateBaiduChannelOutput, error) {
	var output pinpoint.UpdateBaiduChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateCampaignFuture) Get(ctx workflow.Context) (*pinpoint.UpdateCampaignOutput, error) {
	var output pinpoint.UpdateCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateEmailChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateEmailChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEmailChannelOutput, error) {
	var output pinpoint.UpdateEmailChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEmailTemplateOutput, error) {
	var output pinpoint.UpdateEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateEndpointFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateEndpointFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEndpointOutput, error) {
	var output pinpoint.UpdateEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateEndpointsBatchFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateEndpointsBatchFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEndpointsBatchOutput, error) {
	var output pinpoint.UpdateEndpointsBatchOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateGcmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateGcmChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateGcmChannelOutput, error) {
	var output pinpoint.UpdateGcmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateJourneyFuture) Get(ctx workflow.Context) (*pinpoint.UpdateJourneyOutput, error) {
	var output pinpoint.UpdateJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateJourneyStateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateJourneyStateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateJourneyStateOutput, error) {
	var output pinpoint.UpdateJourneyStateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdatePushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdatePushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdatePushTemplateOutput, error) {
	var output pinpoint.UpdatePushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.UpdateRecommenderConfigurationOutput, error) {
	var output pinpoint.UpdateRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateSegmentFuture) Get(ctx workflow.Context) (*pinpoint.UpdateSegmentOutput, error) {
	var output pinpoint.UpdateSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateSmsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateSmsChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateSmsChannelOutput, error) {
	var output pinpoint.UpdateSmsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateSmsTemplateOutput, error) {
	var output pinpoint.UpdateSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateTemplateActiveVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateTemplateActiveVersionFuture) Get(ctx workflow.Context) (*pinpoint.UpdateTemplateActiveVersionOutput, error) {
	var output pinpoint.UpdateTemplateActiveVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateVoiceChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateVoiceChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateVoiceChannelOutput, error) {
	var output pinpoint.UpdateVoiceChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PinpointUpdateVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PinpointUpdateVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateVoiceTemplateOutput, error) {
	var output pinpoint.UpdateVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateApp(ctx workflow.Context, input *pinpoint.CreateAppInput) (*pinpoint.CreateAppOutput, error) {
	var output pinpoint.CreateAppOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateApp", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateAppAsync(ctx workflow.Context, input *pinpoint.CreateAppInput) *PinpointCreateAppFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateApp", input)
	return &PinpointCreateAppFuture{Future: future}
}

func (a *PinpointStub) CreateCampaign(ctx workflow.Context, input *pinpoint.CreateCampaignInput) (*pinpoint.CreateCampaignOutput, error) {
	var output pinpoint.CreateCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateCampaignAsync(ctx workflow.Context, input *pinpoint.CreateCampaignInput) *PinpointCreateCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateCampaign", input)
	return &PinpointCreateCampaignFuture{Future: future}
}

func (a *PinpointStub) CreateEmailTemplate(ctx workflow.Context, input *pinpoint.CreateEmailTemplateInput) (*pinpoint.CreateEmailTemplateOutput, error) {
	var output pinpoint.CreateEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateEmailTemplateAsync(ctx workflow.Context, input *pinpoint.CreateEmailTemplateInput) *PinpointCreateEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateEmailTemplate", input)
	return &PinpointCreateEmailTemplateFuture{Future: future}
}

func (a *PinpointStub) CreateExportJob(ctx workflow.Context, input *pinpoint.CreateExportJobInput) (*pinpoint.CreateExportJobOutput, error) {
	var output pinpoint.CreateExportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateExportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateExportJobAsync(ctx workflow.Context, input *pinpoint.CreateExportJobInput) *PinpointCreateExportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateExportJob", input)
	return &PinpointCreateExportJobFuture{Future: future}
}

func (a *PinpointStub) CreateImportJob(ctx workflow.Context, input *pinpoint.CreateImportJobInput) (*pinpoint.CreateImportJobOutput, error) {
	var output pinpoint.CreateImportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateImportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateImportJobAsync(ctx workflow.Context, input *pinpoint.CreateImportJobInput) *PinpointCreateImportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateImportJob", input)
	return &PinpointCreateImportJobFuture{Future: future}
}

func (a *PinpointStub) CreateJourney(ctx workflow.Context, input *pinpoint.CreateJourneyInput) (*pinpoint.CreateJourneyOutput, error) {
	var output pinpoint.CreateJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateJourneyAsync(ctx workflow.Context, input *pinpoint.CreateJourneyInput) *PinpointCreateJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateJourney", input)
	return &PinpointCreateJourneyFuture{Future: future}
}

func (a *PinpointStub) CreatePushTemplate(ctx workflow.Context, input *pinpoint.CreatePushTemplateInput) (*pinpoint.CreatePushTemplateOutput, error) {
	var output pinpoint.CreatePushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreatePushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreatePushTemplateAsync(ctx workflow.Context, input *pinpoint.CreatePushTemplateInput) *PinpointCreatePushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreatePushTemplate", input)
	return &PinpointCreatePushTemplateFuture{Future: future}
}

func (a *PinpointStub) CreateRecommenderConfiguration(ctx workflow.Context, input *pinpoint.CreateRecommenderConfigurationInput) (*pinpoint.CreateRecommenderConfigurationOutput, error) {
	var output pinpoint.CreateRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.CreateRecommenderConfigurationInput) *PinpointCreateRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateRecommenderConfiguration", input)
	return &PinpointCreateRecommenderConfigurationFuture{Future: future}
}

func (a *PinpointStub) CreateSegment(ctx workflow.Context, input *pinpoint.CreateSegmentInput) (*pinpoint.CreateSegmentOutput, error) {
	var output pinpoint.CreateSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateSegmentAsync(ctx workflow.Context, input *pinpoint.CreateSegmentInput) *PinpointCreateSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateSegment", input)
	return &PinpointCreateSegmentFuture{Future: future}
}

func (a *PinpointStub) CreateSmsTemplate(ctx workflow.Context, input *pinpoint.CreateSmsTemplateInput) (*pinpoint.CreateSmsTemplateOutput, error) {
	var output pinpoint.CreateSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateSmsTemplateAsync(ctx workflow.Context, input *pinpoint.CreateSmsTemplateInput) *PinpointCreateSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateSmsTemplate", input)
	return &PinpointCreateSmsTemplateFuture{Future: future}
}

func (a *PinpointStub) CreateVoiceTemplate(ctx workflow.Context, input *pinpoint.CreateVoiceTemplateInput) (*pinpoint.CreateVoiceTemplateOutput, error) {
	var output pinpoint.CreateVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) CreateVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.CreateVoiceTemplateInput) *PinpointCreateVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.CreateVoiceTemplate", input)
	return &PinpointCreateVoiceTemplateFuture{Future: future}
}

func (a *PinpointStub) DeleteAdmChannel(ctx workflow.Context, input *pinpoint.DeleteAdmChannelInput) (*pinpoint.DeleteAdmChannelOutput, error) {
	var output pinpoint.DeleteAdmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteAdmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteAdmChannelAsync(ctx workflow.Context, input *pinpoint.DeleteAdmChannelInput) *PinpointDeleteAdmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteAdmChannel", input)
	return &PinpointDeleteAdmChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteApnsChannel(ctx workflow.Context, input *pinpoint.DeleteApnsChannelInput) (*pinpoint.DeleteApnsChannelOutput, error) {
	var output pinpoint.DeleteApnsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteApnsChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsChannelInput) *PinpointDeleteApnsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsChannel", input)
	return &PinpointDeleteApnsChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteApnsSandboxChannel(ctx workflow.Context, input *pinpoint.DeleteApnsSandboxChannelInput) (*pinpoint.DeleteApnsSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsSandboxChannelInput) *PinpointDeleteApnsSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsSandboxChannel", input)
	return &PinpointDeleteApnsSandboxChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteApnsVoipChannel(ctx workflow.Context, input *pinpoint.DeleteApnsVoipChannelInput) (*pinpoint.DeleteApnsVoipChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsVoipChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsVoipChannelInput) *PinpointDeleteApnsVoipChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsVoipChannel", input)
	return &PinpointDeleteApnsVoipChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.DeleteApnsVoipSandboxChannelInput) (*pinpoint.DeleteApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsVoipSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsVoipSandboxChannelInput) *PinpointDeleteApnsVoipSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApnsVoipSandboxChannel", input)
	return &PinpointDeleteApnsVoipSandboxChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteApp(ctx workflow.Context, input *pinpoint.DeleteAppInput) (*pinpoint.DeleteAppOutput, error) {
	var output pinpoint.DeleteAppOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApp", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteAppAsync(ctx workflow.Context, input *pinpoint.DeleteAppInput) *PinpointDeleteAppFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteApp", input)
	return &PinpointDeleteAppFuture{Future: future}
}

func (a *PinpointStub) DeleteBaiduChannel(ctx workflow.Context, input *pinpoint.DeleteBaiduChannelInput) (*pinpoint.DeleteBaiduChannelOutput, error) {
	var output pinpoint.DeleteBaiduChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteBaiduChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteBaiduChannelAsync(ctx workflow.Context, input *pinpoint.DeleteBaiduChannelInput) *PinpointDeleteBaiduChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteBaiduChannel", input)
	return &PinpointDeleteBaiduChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteCampaign(ctx workflow.Context, input *pinpoint.DeleteCampaignInput) (*pinpoint.DeleteCampaignOutput, error) {
	var output pinpoint.DeleteCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteCampaignAsync(ctx workflow.Context, input *pinpoint.DeleteCampaignInput) *PinpointDeleteCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteCampaign", input)
	return &PinpointDeleteCampaignFuture{Future: future}
}

func (a *PinpointStub) DeleteEmailChannel(ctx workflow.Context, input *pinpoint.DeleteEmailChannelInput) (*pinpoint.DeleteEmailChannelOutput, error) {
	var output pinpoint.DeleteEmailChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEmailChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteEmailChannelAsync(ctx workflow.Context, input *pinpoint.DeleteEmailChannelInput) *PinpointDeleteEmailChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEmailChannel", input)
	return &PinpointDeleteEmailChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteEmailTemplate(ctx workflow.Context, input *pinpoint.DeleteEmailTemplateInput) (*pinpoint.DeleteEmailTemplateOutput, error) {
	var output pinpoint.DeleteEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteEmailTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteEmailTemplateInput) *PinpointDeleteEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEmailTemplate", input)
	return &PinpointDeleteEmailTemplateFuture{Future: future}
}

func (a *PinpointStub) DeleteEndpoint(ctx workflow.Context, input *pinpoint.DeleteEndpointInput) (*pinpoint.DeleteEndpointOutput, error) {
	var output pinpoint.DeleteEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteEndpointAsync(ctx workflow.Context, input *pinpoint.DeleteEndpointInput) *PinpointDeleteEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEndpoint", input)
	return &PinpointDeleteEndpointFuture{Future: future}
}

func (a *PinpointStub) DeleteEventStream(ctx workflow.Context, input *pinpoint.DeleteEventStreamInput) (*pinpoint.DeleteEventStreamOutput, error) {
	var output pinpoint.DeleteEventStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEventStream", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteEventStreamAsync(ctx workflow.Context, input *pinpoint.DeleteEventStreamInput) *PinpointDeleteEventStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteEventStream", input)
	return &PinpointDeleteEventStreamFuture{Future: future}
}

func (a *PinpointStub) DeleteGcmChannel(ctx workflow.Context, input *pinpoint.DeleteGcmChannelInput) (*pinpoint.DeleteGcmChannelOutput, error) {
	var output pinpoint.DeleteGcmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteGcmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteGcmChannelAsync(ctx workflow.Context, input *pinpoint.DeleteGcmChannelInput) *PinpointDeleteGcmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteGcmChannel", input)
	return &PinpointDeleteGcmChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteJourney(ctx workflow.Context, input *pinpoint.DeleteJourneyInput) (*pinpoint.DeleteJourneyOutput, error) {
	var output pinpoint.DeleteJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteJourneyAsync(ctx workflow.Context, input *pinpoint.DeleteJourneyInput) *PinpointDeleteJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteJourney", input)
	return &PinpointDeleteJourneyFuture{Future: future}
}

func (a *PinpointStub) DeletePushTemplate(ctx workflow.Context, input *pinpoint.DeletePushTemplateInput) (*pinpoint.DeletePushTemplateOutput, error) {
	var output pinpoint.DeletePushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeletePushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeletePushTemplateAsync(ctx workflow.Context, input *pinpoint.DeletePushTemplateInput) *PinpointDeletePushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeletePushTemplate", input)
	return &PinpointDeletePushTemplateFuture{Future: future}
}

func (a *PinpointStub) DeleteRecommenderConfiguration(ctx workflow.Context, input *pinpoint.DeleteRecommenderConfigurationInput) (*pinpoint.DeleteRecommenderConfigurationOutput, error) {
	var output pinpoint.DeleteRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.DeleteRecommenderConfigurationInput) *PinpointDeleteRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteRecommenderConfiguration", input)
	return &PinpointDeleteRecommenderConfigurationFuture{Future: future}
}

func (a *PinpointStub) DeleteSegment(ctx workflow.Context, input *pinpoint.DeleteSegmentInput) (*pinpoint.DeleteSegmentOutput, error) {
	var output pinpoint.DeleteSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteSegmentAsync(ctx workflow.Context, input *pinpoint.DeleteSegmentInput) *PinpointDeleteSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteSegment", input)
	return &PinpointDeleteSegmentFuture{Future: future}
}

func (a *PinpointStub) DeleteSmsChannel(ctx workflow.Context, input *pinpoint.DeleteSmsChannelInput) (*pinpoint.DeleteSmsChannelOutput, error) {
	var output pinpoint.DeleteSmsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteSmsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteSmsChannelAsync(ctx workflow.Context, input *pinpoint.DeleteSmsChannelInput) *PinpointDeleteSmsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteSmsChannel", input)
	return &PinpointDeleteSmsChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteSmsTemplate(ctx workflow.Context, input *pinpoint.DeleteSmsTemplateInput) (*pinpoint.DeleteSmsTemplateOutput, error) {
	var output pinpoint.DeleteSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteSmsTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteSmsTemplateInput) *PinpointDeleteSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteSmsTemplate", input)
	return &PinpointDeleteSmsTemplateFuture{Future: future}
}

func (a *PinpointStub) DeleteUserEndpoints(ctx workflow.Context, input *pinpoint.DeleteUserEndpointsInput) (*pinpoint.DeleteUserEndpointsOutput, error) {
	var output pinpoint.DeleteUserEndpointsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteUserEndpoints", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteUserEndpointsAsync(ctx workflow.Context, input *pinpoint.DeleteUserEndpointsInput) *PinpointDeleteUserEndpointsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteUserEndpoints", input)
	return &PinpointDeleteUserEndpointsFuture{Future: future}
}

func (a *PinpointStub) DeleteVoiceChannel(ctx workflow.Context, input *pinpoint.DeleteVoiceChannelInput) (*pinpoint.DeleteVoiceChannelOutput, error) {
	var output pinpoint.DeleteVoiceChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteVoiceChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteVoiceChannelAsync(ctx workflow.Context, input *pinpoint.DeleteVoiceChannelInput) *PinpointDeleteVoiceChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteVoiceChannel", input)
	return &PinpointDeleteVoiceChannelFuture{Future: future}
}

func (a *PinpointStub) DeleteVoiceTemplate(ctx workflow.Context, input *pinpoint.DeleteVoiceTemplateInput) (*pinpoint.DeleteVoiceTemplateOutput, error) {
	var output pinpoint.DeleteVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) DeleteVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteVoiceTemplateInput) *PinpointDeleteVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.DeleteVoiceTemplate", input)
	return &PinpointDeleteVoiceTemplateFuture{Future: future}
}

func (a *PinpointStub) GetAdmChannel(ctx workflow.Context, input *pinpoint.GetAdmChannelInput) (*pinpoint.GetAdmChannelOutput, error) {
	var output pinpoint.GetAdmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetAdmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetAdmChannelAsync(ctx workflow.Context, input *pinpoint.GetAdmChannelInput) *PinpointGetAdmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetAdmChannel", input)
	return &PinpointGetAdmChannelFuture{Future: future}
}

func (a *PinpointStub) GetApnsChannel(ctx workflow.Context, input *pinpoint.GetApnsChannelInput) (*pinpoint.GetApnsChannelOutput, error) {
	var output pinpoint.GetApnsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetApnsChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsChannelInput) *PinpointGetApnsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsChannel", input)
	return &PinpointGetApnsChannelFuture{Future: future}
}

func (a *PinpointStub) GetApnsSandboxChannel(ctx workflow.Context, input *pinpoint.GetApnsSandboxChannelInput) (*pinpoint.GetApnsSandboxChannelOutput, error) {
	var output pinpoint.GetApnsSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsSandboxChannelInput) *PinpointGetApnsSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsSandboxChannel", input)
	return &PinpointGetApnsSandboxChannelFuture{Future: future}
}

func (a *PinpointStub) GetApnsVoipChannel(ctx workflow.Context, input *pinpoint.GetApnsVoipChannelInput) (*pinpoint.GetApnsVoipChannelOutput, error) {
	var output pinpoint.GetApnsVoipChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsVoipChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsVoipChannelInput) *PinpointGetApnsVoipChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsVoipChannel", input)
	return &PinpointGetApnsVoipChannelFuture{Future: future}
}

func (a *PinpointStub) GetApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.GetApnsVoipSandboxChannelInput) (*pinpoint.GetApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.GetApnsVoipSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsVoipSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsVoipSandboxChannelInput) *PinpointGetApnsVoipSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApnsVoipSandboxChannel", input)
	return &PinpointGetApnsVoipSandboxChannelFuture{Future: future}
}

func (a *PinpointStub) GetApp(ctx workflow.Context, input *pinpoint.GetAppInput) (*pinpoint.GetAppOutput, error) {
	var output pinpoint.GetAppOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApp", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetAppAsync(ctx workflow.Context, input *pinpoint.GetAppInput) *PinpointGetAppFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApp", input)
	return &PinpointGetAppFuture{Future: future}
}

func (a *PinpointStub) GetApplicationDateRangeKpi(ctx workflow.Context, input *pinpoint.GetApplicationDateRangeKpiInput) (*pinpoint.GetApplicationDateRangeKpiOutput, error) {
	var output pinpoint.GetApplicationDateRangeKpiOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApplicationDateRangeKpi", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetApplicationDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetApplicationDateRangeKpiInput) *PinpointGetApplicationDateRangeKpiFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApplicationDateRangeKpi", input)
	return &PinpointGetApplicationDateRangeKpiFuture{Future: future}
}

func (a *PinpointStub) GetApplicationSettings(ctx workflow.Context, input *pinpoint.GetApplicationSettingsInput) (*pinpoint.GetApplicationSettingsOutput, error) {
	var output pinpoint.GetApplicationSettingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApplicationSettings", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetApplicationSettingsAsync(ctx workflow.Context, input *pinpoint.GetApplicationSettingsInput) *PinpointGetApplicationSettingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApplicationSettings", input)
	return &PinpointGetApplicationSettingsFuture{Future: future}
}

func (a *PinpointStub) GetApps(ctx workflow.Context, input *pinpoint.GetAppsInput) (*pinpoint.GetAppsOutput, error) {
	var output pinpoint.GetAppsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApps", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetAppsAsync(ctx workflow.Context, input *pinpoint.GetAppsInput) *PinpointGetAppsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetApps", input)
	return &PinpointGetAppsFuture{Future: future}
}

func (a *PinpointStub) GetBaiduChannel(ctx workflow.Context, input *pinpoint.GetBaiduChannelInput) (*pinpoint.GetBaiduChannelOutput, error) {
	var output pinpoint.GetBaiduChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetBaiduChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetBaiduChannelAsync(ctx workflow.Context, input *pinpoint.GetBaiduChannelInput) *PinpointGetBaiduChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetBaiduChannel", input)
	return &PinpointGetBaiduChannelFuture{Future: future}
}

func (a *PinpointStub) GetCampaign(ctx workflow.Context, input *pinpoint.GetCampaignInput) (*pinpoint.GetCampaignOutput, error) {
	var output pinpoint.GetCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetCampaignAsync(ctx workflow.Context, input *pinpoint.GetCampaignInput) *PinpointGetCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaign", input)
	return &PinpointGetCampaignFuture{Future: future}
}

func (a *PinpointStub) GetCampaignActivities(ctx workflow.Context, input *pinpoint.GetCampaignActivitiesInput) (*pinpoint.GetCampaignActivitiesOutput, error) {
	var output pinpoint.GetCampaignActivitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignActivities", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetCampaignActivitiesAsync(ctx workflow.Context, input *pinpoint.GetCampaignActivitiesInput) *PinpointGetCampaignActivitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignActivities", input)
	return &PinpointGetCampaignActivitiesFuture{Future: future}
}

func (a *PinpointStub) GetCampaignDateRangeKpi(ctx workflow.Context, input *pinpoint.GetCampaignDateRangeKpiInput) (*pinpoint.GetCampaignDateRangeKpiOutput, error) {
	var output pinpoint.GetCampaignDateRangeKpiOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignDateRangeKpi", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetCampaignDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetCampaignDateRangeKpiInput) *PinpointGetCampaignDateRangeKpiFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignDateRangeKpi", input)
	return &PinpointGetCampaignDateRangeKpiFuture{Future: future}
}

func (a *PinpointStub) GetCampaignVersion(ctx workflow.Context, input *pinpoint.GetCampaignVersionInput) (*pinpoint.GetCampaignVersionOutput, error) {
	var output pinpoint.GetCampaignVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetCampaignVersionAsync(ctx workflow.Context, input *pinpoint.GetCampaignVersionInput) *PinpointGetCampaignVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignVersion", input)
	return &PinpointGetCampaignVersionFuture{Future: future}
}

func (a *PinpointStub) GetCampaignVersions(ctx workflow.Context, input *pinpoint.GetCampaignVersionsInput) (*pinpoint.GetCampaignVersionsOutput, error) {
	var output pinpoint.GetCampaignVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetCampaignVersionsAsync(ctx workflow.Context, input *pinpoint.GetCampaignVersionsInput) *PinpointGetCampaignVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaignVersions", input)
	return &PinpointGetCampaignVersionsFuture{Future: future}
}

func (a *PinpointStub) GetCampaigns(ctx workflow.Context, input *pinpoint.GetCampaignsInput) (*pinpoint.GetCampaignsOutput, error) {
	var output pinpoint.GetCampaignsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaigns", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetCampaignsAsync(ctx workflow.Context, input *pinpoint.GetCampaignsInput) *PinpointGetCampaignsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetCampaigns", input)
	return &PinpointGetCampaignsFuture{Future: future}
}

func (a *PinpointStub) GetChannels(ctx workflow.Context, input *pinpoint.GetChannelsInput) (*pinpoint.GetChannelsOutput, error) {
	var output pinpoint.GetChannelsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetChannels", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetChannelsAsync(ctx workflow.Context, input *pinpoint.GetChannelsInput) *PinpointGetChannelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetChannels", input)
	return &PinpointGetChannelsFuture{Future: future}
}

func (a *PinpointStub) GetEmailChannel(ctx workflow.Context, input *pinpoint.GetEmailChannelInput) (*pinpoint.GetEmailChannelOutput, error) {
	var output pinpoint.GetEmailChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEmailChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetEmailChannelAsync(ctx workflow.Context, input *pinpoint.GetEmailChannelInput) *PinpointGetEmailChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEmailChannel", input)
	return &PinpointGetEmailChannelFuture{Future: future}
}

func (a *PinpointStub) GetEmailTemplate(ctx workflow.Context, input *pinpoint.GetEmailTemplateInput) (*pinpoint.GetEmailTemplateOutput, error) {
	var output pinpoint.GetEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetEmailTemplateAsync(ctx workflow.Context, input *pinpoint.GetEmailTemplateInput) *PinpointGetEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEmailTemplate", input)
	return &PinpointGetEmailTemplateFuture{Future: future}
}

func (a *PinpointStub) GetEndpoint(ctx workflow.Context, input *pinpoint.GetEndpointInput) (*pinpoint.GetEndpointOutput, error) {
	var output pinpoint.GetEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetEndpointAsync(ctx workflow.Context, input *pinpoint.GetEndpointInput) *PinpointGetEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEndpoint", input)
	return &PinpointGetEndpointFuture{Future: future}
}

func (a *PinpointStub) GetEventStream(ctx workflow.Context, input *pinpoint.GetEventStreamInput) (*pinpoint.GetEventStreamOutput, error) {
	var output pinpoint.GetEventStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEventStream", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetEventStreamAsync(ctx workflow.Context, input *pinpoint.GetEventStreamInput) *PinpointGetEventStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetEventStream", input)
	return &PinpointGetEventStreamFuture{Future: future}
}

func (a *PinpointStub) GetExportJob(ctx workflow.Context, input *pinpoint.GetExportJobInput) (*pinpoint.GetExportJobOutput, error) {
	var output pinpoint.GetExportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetExportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetExportJobAsync(ctx workflow.Context, input *pinpoint.GetExportJobInput) *PinpointGetExportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetExportJob", input)
	return &PinpointGetExportJobFuture{Future: future}
}

func (a *PinpointStub) GetExportJobs(ctx workflow.Context, input *pinpoint.GetExportJobsInput) (*pinpoint.GetExportJobsOutput, error) {
	var output pinpoint.GetExportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetExportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetExportJobsAsync(ctx workflow.Context, input *pinpoint.GetExportJobsInput) *PinpointGetExportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetExportJobs", input)
	return &PinpointGetExportJobsFuture{Future: future}
}

func (a *PinpointStub) GetGcmChannel(ctx workflow.Context, input *pinpoint.GetGcmChannelInput) (*pinpoint.GetGcmChannelOutput, error) {
	var output pinpoint.GetGcmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetGcmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetGcmChannelAsync(ctx workflow.Context, input *pinpoint.GetGcmChannelInput) *PinpointGetGcmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetGcmChannel", input)
	return &PinpointGetGcmChannelFuture{Future: future}
}

func (a *PinpointStub) GetImportJob(ctx workflow.Context, input *pinpoint.GetImportJobInput) (*pinpoint.GetImportJobOutput, error) {
	var output pinpoint.GetImportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetImportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetImportJobAsync(ctx workflow.Context, input *pinpoint.GetImportJobInput) *PinpointGetImportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetImportJob", input)
	return &PinpointGetImportJobFuture{Future: future}
}

func (a *PinpointStub) GetImportJobs(ctx workflow.Context, input *pinpoint.GetImportJobsInput) (*pinpoint.GetImportJobsOutput, error) {
	var output pinpoint.GetImportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetImportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetImportJobsAsync(ctx workflow.Context, input *pinpoint.GetImportJobsInput) *PinpointGetImportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetImportJobs", input)
	return &PinpointGetImportJobsFuture{Future: future}
}

func (a *PinpointStub) GetJourney(ctx workflow.Context, input *pinpoint.GetJourneyInput) (*pinpoint.GetJourneyOutput, error) {
	var output pinpoint.GetJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetJourneyAsync(ctx workflow.Context, input *pinpoint.GetJourneyInput) *PinpointGetJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourney", input)
	return &PinpointGetJourneyFuture{Future: future}
}

func (a *PinpointStub) GetJourneyDateRangeKpi(ctx workflow.Context, input *pinpoint.GetJourneyDateRangeKpiInput) (*pinpoint.GetJourneyDateRangeKpiOutput, error) {
	var output pinpoint.GetJourneyDateRangeKpiOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourneyDateRangeKpi", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetJourneyDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetJourneyDateRangeKpiInput) *PinpointGetJourneyDateRangeKpiFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourneyDateRangeKpi", input)
	return &PinpointGetJourneyDateRangeKpiFuture{Future: future}
}

func (a *PinpointStub) GetJourneyExecutionActivityMetrics(ctx workflow.Context, input *pinpoint.GetJourneyExecutionActivityMetricsInput) (*pinpoint.GetJourneyExecutionActivityMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionActivityMetricsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourneyExecutionActivityMetrics", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetJourneyExecutionActivityMetricsAsync(ctx workflow.Context, input *pinpoint.GetJourneyExecutionActivityMetricsInput) *PinpointGetJourneyExecutionActivityMetricsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourneyExecutionActivityMetrics", input)
	return &PinpointGetJourneyExecutionActivityMetricsFuture{Future: future}
}

func (a *PinpointStub) GetJourneyExecutionMetrics(ctx workflow.Context, input *pinpoint.GetJourneyExecutionMetricsInput) (*pinpoint.GetJourneyExecutionMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionMetricsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourneyExecutionMetrics", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetJourneyExecutionMetricsAsync(ctx workflow.Context, input *pinpoint.GetJourneyExecutionMetricsInput) *PinpointGetJourneyExecutionMetricsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetJourneyExecutionMetrics", input)
	return &PinpointGetJourneyExecutionMetricsFuture{Future: future}
}

func (a *PinpointStub) GetPushTemplate(ctx workflow.Context, input *pinpoint.GetPushTemplateInput) (*pinpoint.GetPushTemplateOutput, error) {
	var output pinpoint.GetPushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetPushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetPushTemplateAsync(ctx workflow.Context, input *pinpoint.GetPushTemplateInput) *PinpointGetPushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetPushTemplate", input)
	return &PinpointGetPushTemplateFuture{Future: future}
}

func (a *PinpointStub) GetRecommenderConfiguration(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationInput) (*pinpoint.GetRecommenderConfigurationOutput, error) {
	var output pinpoint.GetRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationInput) *PinpointGetRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetRecommenderConfiguration", input)
	return &PinpointGetRecommenderConfigurationFuture{Future: future}
}

func (a *PinpointStub) GetRecommenderConfigurations(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationsInput) (*pinpoint.GetRecommenderConfigurationsOutput, error) {
	var output pinpoint.GetRecommenderConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetRecommenderConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetRecommenderConfigurationsAsync(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationsInput) *PinpointGetRecommenderConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetRecommenderConfigurations", input)
	return &PinpointGetRecommenderConfigurationsFuture{Future: future}
}

func (a *PinpointStub) GetSegment(ctx workflow.Context, input *pinpoint.GetSegmentInput) (*pinpoint.GetSegmentOutput, error) {
	var output pinpoint.GetSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSegmentAsync(ctx workflow.Context, input *pinpoint.GetSegmentInput) *PinpointGetSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegment", input)
	return &PinpointGetSegmentFuture{Future: future}
}

func (a *PinpointStub) GetSegmentExportJobs(ctx workflow.Context, input *pinpoint.GetSegmentExportJobsInput) (*pinpoint.GetSegmentExportJobsOutput, error) {
	var output pinpoint.GetSegmentExportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentExportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSegmentExportJobsAsync(ctx workflow.Context, input *pinpoint.GetSegmentExportJobsInput) *PinpointGetSegmentExportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentExportJobs", input)
	return &PinpointGetSegmentExportJobsFuture{Future: future}
}

func (a *PinpointStub) GetSegmentImportJobs(ctx workflow.Context, input *pinpoint.GetSegmentImportJobsInput) (*pinpoint.GetSegmentImportJobsOutput, error) {
	var output pinpoint.GetSegmentImportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentImportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSegmentImportJobsAsync(ctx workflow.Context, input *pinpoint.GetSegmentImportJobsInput) *PinpointGetSegmentImportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentImportJobs", input)
	return &PinpointGetSegmentImportJobsFuture{Future: future}
}

func (a *PinpointStub) GetSegmentVersion(ctx workflow.Context, input *pinpoint.GetSegmentVersionInput) (*pinpoint.GetSegmentVersionOutput, error) {
	var output pinpoint.GetSegmentVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSegmentVersionAsync(ctx workflow.Context, input *pinpoint.GetSegmentVersionInput) *PinpointGetSegmentVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentVersion", input)
	return &PinpointGetSegmentVersionFuture{Future: future}
}

func (a *PinpointStub) GetSegmentVersions(ctx workflow.Context, input *pinpoint.GetSegmentVersionsInput) (*pinpoint.GetSegmentVersionsOutput, error) {
	var output pinpoint.GetSegmentVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSegmentVersionsAsync(ctx workflow.Context, input *pinpoint.GetSegmentVersionsInput) *PinpointGetSegmentVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegmentVersions", input)
	return &PinpointGetSegmentVersionsFuture{Future: future}
}

func (a *PinpointStub) GetSegments(ctx workflow.Context, input *pinpoint.GetSegmentsInput) (*pinpoint.GetSegmentsOutput, error) {
	var output pinpoint.GetSegmentsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegments", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSegmentsAsync(ctx workflow.Context, input *pinpoint.GetSegmentsInput) *PinpointGetSegmentsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSegments", input)
	return &PinpointGetSegmentsFuture{Future: future}
}

func (a *PinpointStub) GetSmsChannel(ctx workflow.Context, input *pinpoint.GetSmsChannelInput) (*pinpoint.GetSmsChannelOutput, error) {
	var output pinpoint.GetSmsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSmsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSmsChannelAsync(ctx workflow.Context, input *pinpoint.GetSmsChannelInput) *PinpointGetSmsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSmsChannel", input)
	return &PinpointGetSmsChannelFuture{Future: future}
}

func (a *PinpointStub) GetSmsTemplate(ctx workflow.Context, input *pinpoint.GetSmsTemplateInput) (*pinpoint.GetSmsTemplateOutput, error) {
	var output pinpoint.GetSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetSmsTemplateAsync(ctx workflow.Context, input *pinpoint.GetSmsTemplateInput) *PinpointGetSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetSmsTemplate", input)
	return &PinpointGetSmsTemplateFuture{Future: future}
}

func (a *PinpointStub) GetUserEndpoints(ctx workflow.Context, input *pinpoint.GetUserEndpointsInput) (*pinpoint.GetUserEndpointsOutput, error) {
	var output pinpoint.GetUserEndpointsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetUserEndpoints", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetUserEndpointsAsync(ctx workflow.Context, input *pinpoint.GetUserEndpointsInput) *PinpointGetUserEndpointsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetUserEndpoints", input)
	return &PinpointGetUserEndpointsFuture{Future: future}
}

func (a *PinpointStub) GetVoiceChannel(ctx workflow.Context, input *pinpoint.GetVoiceChannelInput) (*pinpoint.GetVoiceChannelOutput, error) {
	var output pinpoint.GetVoiceChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetVoiceChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetVoiceChannelAsync(ctx workflow.Context, input *pinpoint.GetVoiceChannelInput) *PinpointGetVoiceChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetVoiceChannel", input)
	return &PinpointGetVoiceChannelFuture{Future: future}
}

func (a *PinpointStub) GetVoiceTemplate(ctx workflow.Context, input *pinpoint.GetVoiceTemplateInput) (*pinpoint.GetVoiceTemplateOutput, error) {
	var output pinpoint.GetVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) GetVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.GetVoiceTemplateInput) *PinpointGetVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.GetVoiceTemplate", input)
	return &PinpointGetVoiceTemplateFuture{Future: future}
}

func (a *PinpointStub) ListJourneys(ctx workflow.Context, input *pinpoint.ListJourneysInput) (*pinpoint.ListJourneysOutput, error) {
	var output pinpoint.ListJourneysOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListJourneys", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) ListJourneysAsync(ctx workflow.Context, input *pinpoint.ListJourneysInput) *PinpointListJourneysFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListJourneys", input)
	return &PinpointListJourneysFuture{Future: future}
}

func (a *PinpointStub) ListTagsForResource(ctx workflow.Context, input *pinpoint.ListTagsForResourceInput) (*pinpoint.ListTagsForResourceOutput, error) {
	var output pinpoint.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) ListTagsForResourceAsync(ctx workflow.Context, input *pinpoint.ListTagsForResourceInput) *PinpointListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListTagsForResource", input)
	return &PinpointListTagsForResourceFuture{Future: future}
}

func (a *PinpointStub) ListTemplateVersions(ctx workflow.Context, input *pinpoint.ListTemplateVersionsInput) (*pinpoint.ListTemplateVersionsOutput, error) {
	var output pinpoint.ListTemplateVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListTemplateVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) ListTemplateVersionsAsync(ctx workflow.Context, input *pinpoint.ListTemplateVersionsInput) *PinpointListTemplateVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListTemplateVersions", input)
	return &PinpointListTemplateVersionsFuture{Future: future}
}

func (a *PinpointStub) ListTemplates(ctx workflow.Context, input *pinpoint.ListTemplatesInput) (*pinpoint.ListTemplatesOutput, error) {
	var output pinpoint.ListTemplatesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListTemplates", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) ListTemplatesAsync(ctx workflow.Context, input *pinpoint.ListTemplatesInput) *PinpointListTemplatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.ListTemplates", input)
	return &PinpointListTemplatesFuture{Future: future}
}

func (a *PinpointStub) PhoneNumberValidate(ctx workflow.Context, input *pinpoint.PhoneNumberValidateInput) (*pinpoint.PhoneNumberValidateOutput, error) {
	var output pinpoint.PhoneNumberValidateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.PhoneNumberValidate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) PhoneNumberValidateAsync(ctx workflow.Context, input *pinpoint.PhoneNumberValidateInput) *PinpointPhoneNumberValidateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.PhoneNumberValidate", input)
	return &PinpointPhoneNumberValidateFuture{Future: future}
}

func (a *PinpointStub) PutEventStream(ctx workflow.Context, input *pinpoint.PutEventStreamInput) (*pinpoint.PutEventStreamOutput, error) {
	var output pinpoint.PutEventStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.PutEventStream", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) PutEventStreamAsync(ctx workflow.Context, input *pinpoint.PutEventStreamInput) *PinpointPutEventStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.PutEventStream", input)
	return &PinpointPutEventStreamFuture{Future: future}
}

func (a *PinpointStub) PutEvents(ctx workflow.Context, input *pinpoint.PutEventsInput) (*pinpoint.PutEventsOutput, error) {
	var output pinpoint.PutEventsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.PutEvents", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) PutEventsAsync(ctx workflow.Context, input *pinpoint.PutEventsInput) *PinpointPutEventsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.PutEvents", input)
	return &PinpointPutEventsFuture{Future: future}
}

func (a *PinpointStub) RemoveAttributes(ctx workflow.Context, input *pinpoint.RemoveAttributesInput) (*pinpoint.RemoveAttributesOutput, error) {
	var output pinpoint.RemoveAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.RemoveAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) RemoveAttributesAsync(ctx workflow.Context, input *pinpoint.RemoveAttributesInput) *PinpointRemoveAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.RemoveAttributes", input)
	return &PinpointRemoveAttributesFuture{Future: future}
}

func (a *PinpointStub) SendMessages(ctx workflow.Context, input *pinpoint.SendMessagesInput) (*pinpoint.SendMessagesOutput, error) {
	var output pinpoint.SendMessagesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.SendMessages", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) SendMessagesAsync(ctx workflow.Context, input *pinpoint.SendMessagesInput) *PinpointSendMessagesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.SendMessages", input)
	return &PinpointSendMessagesFuture{Future: future}
}

func (a *PinpointStub) SendUsersMessages(ctx workflow.Context, input *pinpoint.SendUsersMessagesInput) (*pinpoint.SendUsersMessagesOutput, error) {
	var output pinpoint.SendUsersMessagesOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.SendUsersMessages", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) SendUsersMessagesAsync(ctx workflow.Context, input *pinpoint.SendUsersMessagesInput) *PinpointSendUsersMessagesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.SendUsersMessages", input)
	return &PinpointSendUsersMessagesFuture{Future: future}
}

func (a *PinpointStub) TagResource(ctx workflow.Context, input *pinpoint.TagResourceInput) (*pinpoint.TagResourceOutput, error) {
	var output pinpoint.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) TagResourceAsync(ctx workflow.Context, input *pinpoint.TagResourceInput) *PinpointTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.TagResource", input)
	return &PinpointTagResourceFuture{Future: future}
}

func (a *PinpointStub) UntagResource(ctx workflow.Context, input *pinpoint.UntagResourceInput) (*pinpoint.UntagResourceOutput, error) {
	var output pinpoint.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UntagResourceAsync(ctx workflow.Context, input *pinpoint.UntagResourceInput) *PinpointUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UntagResource", input)
	return &PinpointUntagResourceFuture{Future: future}
}

func (a *PinpointStub) UpdateAdmChannel(ctx workflow.Context, input *pinpoint.UpdateAdmChannelInput) (*pinpoint.UpdateAdmChannelOutput, error) {
	var output pinpoint.UpdateAdmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateAdmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateAdmChannelAsync(ctx workflow.Context, input *pinpoint.UpdateAdmChannelInput) *PinpointUpdateAdmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateAdmChannel", input)
	return &PinpointUpdateAdmChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateApnsChannel(ctx workflow.Context, input *pinpoint.UpdateApnsChannelInput) (*pinpoint.UpdateApnsChannelOutput, error) {
	var output pinpoint.UpdateApnsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateApnsChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsChannelInput) *PinpointUpdateApnsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsChannel", input)
	return &PinpointUpdateApnsChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateApnsSandboxChannel(ctx workflow.Context, input *pinpoint.UpdateApnsSandboxChannelInput) (*pinpoint.UpdateApnsSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsSandboxChannelInput) *PinpointUpdateApnsSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsSandboxChannel", input)
	return &PinpointUpdateApnsSandboxChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateApnsVoipChannel(ctx workflow.Context, input *pinpoint.UpdateApnsVoipChannelInput) (*pinpoint.UpdateApnsVoipChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsVoipChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsVoipChannelInput) *PinpointUpdateApnsVoipChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsVoipChannel", input)
	return &PinpointUpdateApnsVoipChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.UpdateApnsVoipSandboxChannelInput) (*pinpoint.UpdateApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsVoipSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsVoipSandboxChannelInput) *PinpointUpdateApnsVoipSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApnsVoipSandboxChannel", input)
	return &PinpointUpdateApnsVoipSandboxChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateApplicationSettings(ctx workflow.Context, input *pinpoint.UpdateApplicationSettingsInput) (*pinpoint.UpdateApplicationSettingsOutput, error) {
	var output pinpoint.UpdateApplicationSettingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApplicationSettings", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateApplicationSettingsAsync(ctx workflow.Context, input *pinpoint.UpdateApplicationSettingsInput) *PinpointUpdateApplicationSettingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateApplicationSettings", input)
	return &PinpointUpdateApplicationSettingsFuture{Future: future}
}

func (a *PinpointStub) UpdateBaiduChannel(ctx workflow.Context, input *pinpoint.UpdateBaiduChannelInput) (*pinpoint.UpdateBaiduChannelOutput, error) {
	var output pinpoint.UpdateBaiduChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateBaiduChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateBaiduChannelAsync(ctx workflow.Context, input *pinpoint.UpdateBaiduChannelInput) *PinpointUpdateBaiduChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateBaiduChannel", input)
	return &PinpointUpdateBaiduChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateCampaign(ctx workflow.Context, input *pinpoint.UpdateCampaignInput) (*pinpoint.UpdateCampaignOutput, error) {
	var output pinpoint.UpdateCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateCampaignAsync(ctx workflow.Context, input *pinpoint.UpdateCampaignInput) *PinpointUpdateCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateCampaign", input)
	return &PinpointUpdateCampaignFuture{Future: future}
}

func (a *PinpointStub) UpdateEmailChannel(ctx workflow.Context, input *pinpoint.UpdateEmailChannelInput) (*pinpoint.UpdateEmailChannelOutput, error) {
	var output pinpoint.UpdateEmailChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEmailChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateEmailChannelAsync(ctx workflow.Context, input *pinpoint.UpdateEmailChannelInput) *PinpointUpdateEmailChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEmailChannel", input)
	return &PinpointUpdateEmailChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateEmailTemplate(ctx workflow.Context, input *pinpoint.UpdateEmailTemplateInput) (*pinpoint.UpdateEmailTemplateOutput, error) {
	var output pinpoint.UpdateEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateEmailTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateEmailTemplateInput) *PinpointUpdateEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEmailTemplate", input)
	return &PinpointUpdateEmailTemplateFuture{Future: future}
}

func (a *PinpointStub) UpdateEndpoint(ctx workflow.Context, input *pinpoint.UpdateEndpointInput) (*pinpoint.UpdateEndpointOutput, error) {
	var output pinpoint.UpdateEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateEndpointAsync(ctx workflow.Context, input *pinpoint.UpdateEndpointInput) *PinpointUpdateEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEndpoint", input)
	return &PinpointUpdateEndpointFuture{Future: future}
}

func (a *PinpointStub) UpdateEndpointsBatch(ctx workflow.Context, input *pinpoint.UpdateEndpointsBatchInput) (*pinpoint.UpdateEndpointsBatchOutput, error) {
	var output pinpoint.UpdateEndpointsBatchOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEndpointsBatch", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateEndpointsBatchAsync(ctx workflow.Context, input *pinpoint.UpdateEndpointsBatchInput) *PinpointUpdateEndpointsBatchFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateEndpointsBatch", input)
	return &PinpointUpdateEndpointsBatchFuture{Future: future}
}

func (a *PinpointStub) UpdateGcmChannel(ctx workflow.Context, input *pinpoint.UpdateGcmChannelInput) (*pinpoint.UpdateGcmChannelOutput, error) {
	var output pinpoint.UpdateGcmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateGcmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateGcmChannelAsync(ctx workflow.Context, input *pinpoint.UpdateGcmChannelInput) *PinpointUpdateGcmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateGcmChannel", input)
	return &PinpointUpdateGcmChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateJourney(ctx workflow.Context, input *pinpoint.UpdateJourneyInput) (*pinpoint.UpdateJourneyOutput, error) {
	var output pinpoint.UpdateJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateJourneyAsync(ctx workflow.Context, input *pinpoint.UpdateJourneyInput) *PinpointUpdateJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateJourney", input)
	return &PinpointUpdateJourneyFuture{Future: future}
}

func (a *PinpointStub) UpdateJourneyState(ctx workflow.Context, input *pinpoint.UpdateJourneyStateInput) (*pinpoint.UpdateJourneyStateOutput, error) {
	var output pinpoint.UpdateJourneyStateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateJourneyState", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateJourneyStateAsync(ctx workflow.Context, input *pinpoint.UpdateJourneyStateInput) *PinpointUpdateJourneyStateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateJourneyState", input)
	return &PinpointUpdateJourneyStateFuture{Future: future}
}

func (a *PinpointStub) UpdatePushTemplate(ctx workflow.Context, input *pinpoint.UpdatePushTemplateInput) (*pinpoint.UpdatePushTemplateOutput, error) {
	var output pinpoint.UpdatePushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdatePushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdatePushTemplateAsync(ctx workflow.Context, input *pinpoint.UpdatePushTemplateInput) *PinpointUpdatePushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdatePushTemplate", input)
	return &PinpointUpdatePushTemplateFuture{Future: future}
}

func (a *PinpointStub) UpdateRecommenderConfiguration(ctx workflow.Context, input *pinpoint.UpdateRecommenderConfigurationInput) (*pinpoint.UpdateRecommenderConfigurationOutput, error) {
	var output pinpoint.UpdateRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.UpdateRecommenderConfigurationInput) *PinpointUpdateRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateRecommenderConfiguration", input)
	return &PinpointUpdateRecommenderConfigurationFuture{Future: future}
}

func (a *PinpointStub) UpdateSegment(ctx workflow.Context, input *pinpoint.UpdateSegmentInput) (*pinpoint.UpdateSegmentOutput, error) {
	var output pinpoint.UpdateSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateSegmentAsync(ctx workflow.Context, input *pinpoint.UpdateSegmentInput) *PinpointUpdateSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateSegment", input)
	return &PinpointUpdateSegmentFuture{Future: future}
}

func (a *PinpointStub) UpdateSmsChannel(ctx workflow.Context, input *pinpoint.UpdateSmsChannelInput) (*pinpoint.UpdateSmsChannelOutput, error) {
	var output pinpoint.UpdateSmsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateSmsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateSmsChannelAsync(ctx workflow.Context, input *pinpoint.UpdateSmsChannelInput) *PinpointUpdateSmsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateSmsChannel", input)
	return &PinpointUpdateSmsChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateSmsTemplate(ctx workflow.Context, input *pinpoint.UpdateSmsTemplateInput) (*pinpoint.UpdateSmsTemplateOutput, error) {
	var output pinpoint.UpdateSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateSmsTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateSmsTemplateInput) *PinpointUpdateSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateSmsTemplate", input)
	return &PinpointUpdateSmsTemplateFuture{Future: future}
}

func (a *PinpointStub) UpdateTemplateActiveVersion(ctx workflow.Context, input *pinpoint.UpdateTemplateActiveVersionInput) (*pinpoint.UpdateTemplateActiveVersionOutput, error) {
	var output pinpoint.UpdateTemplateActiveVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateTemplateActiveVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateTemplateActiveVersionAsync(ctx workflow.Context, input *pinpoint.UpdateTemplateActiveVersionInput) *PinpointUpdateTemplateActiveVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateTemplateActiveVersion", input)
	return &PinpointUpdateTemplateActiveVersionFuture{Future: future}
}

func (a *PinpointStub) UpdateVoiceChannel(ctx workflow.Context, input *pinpoint.UpdateVoiceChannelInput) (*pinpoint.UpdateVoiceChannelOutput, error) {
	var output pinpoint.UpdateVoiceChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateVoiceChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateVoiceChannelAsync(ctx workflow.Context, input *pinpoint.UpdateVoiceChannelInput) *PinpointUpdateVoiceChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateVoiceChannel", input)
	return &PinpointUpdateVoiceChannelFuture{Future: future}
}

func (a *PinpointStub) UpdateVoiceTemplate(ctx workflow.Context, input *pinpoint.UpdateVoiceTemplateInput) (*pinpoint.UpdateVoiceTemplateOutput, error) {
	var output pinpoint.UpdateVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *PinpointStub) UpdateVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateVoiceTemplateInput) *PinpointUpdateVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.pinpoint.UpdateVoiceTemplate", input)
	return &PinpointUpdateVoiceTemplateFuture{Future: future}
}
