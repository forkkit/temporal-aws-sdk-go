// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/sesv2"
	"go.temporal.io/sdk/workflow"
)

type SESV2Client interface {
	CreateConfigurationSet(ctx workflow.Context, input *sesv2.CreateConfigurationSetInput) (*sesv2.CreateConfigurationSetOutput, error)
	CreateConfigurationSetAsync(ctx workflow.Context, input *sesv2.CreateConfigurationSetInput) *SESV2CreateConfigurationSetFuture

	CreateConfigurationSetEventDestination(ctx workflow.Context, input *sesv2.CreateConfigurationSetEventDestinationInput) (*sesv2.CreateConfigurationSetEventDestinationOutput, error)
	CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *sesv2.CreateConfigurationSetEventDestinationInput) *SESV2CreateConfigurationSetEventDestinationFuture

	CreateCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.CreateCustomVerificationEmailTemplateInput) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error)
	CreateCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.CreateCustomVerificationEmailTemplateInput) *SESV2CreateCustomVerificationEmailTemplateFuture

	CreateDedicatedIpPool(ctx workflow.Context, input *sesv2.CreateDedicatedIpPoolInput) (*sesv2.CreateDedicatedIpPoolOutput, error)
	CreateDedicatedIpPoolAsync(ctx workflow.Context, input *sesv2.CreateDedicatedIpPoolInput) *SESV2CreateDedicatedIpPoolFuture

	CreateDeliverabilityTestReport(ctx workflow.Context, input *sesv2.CreateDeliverabilityTestReportInput) (*sesv2.CreateDeliverabilityTestReportOutput, error)
	CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *sesv2.CreateDeliverabilityTestReportInput) *SESV2CreateDeliverabilityTestReportFuture

	CreateEmailIdentity(ctx workflow.Context, input *sesv2.CreateEmailIdentityInput) (*sesv2.CreateEmailIdentityOutput, error)
	CreateEmailIdentityAsync(ctx workflow.Context, input *sesv2.CreateEmailIdentityInput) *SESV2CreateEmailIdentityFuture

	CreateEmailIdentityPolicy(ctx workflow.Context, input *sesv2.CreateEmailIdentityPolicyInput) (*sesv2.CreateEmailIdentityPolicyOutput, error)
	CreateEmailIdentityPolicyAsync(ctx workflow.Context, input *sesv2.CreateEmailIdentityPolicyInput) *SESV2CreateEmailIdentityPolicyFuture

	CreateEmailTemplate(ctx workflow.Context, input *sesv2.CreateEmailTemplateInput) (*sesv2.CreateEmailTemplateOutput, error)
	CreateEmailTemplateAsync(ctx workflow.Context, input *sesv2.CreateEmailTemplateInput) *SESV2CreateEmailTemplateFuture

	CreateImportJob(ctx workflow.Context, input *sesv2.CreateImportJobInput) (*sesv2.CreateImportJobOutput, error)
	CreateImportJobAsync(ctx workflow.Context, input *sesv2.CreateImportJobInput) *SESV2CreateImportJobFuture

	DeleteConfigurationSet(ctx workflow.Context, input *sesv2.DeleteConfigurationSetInput) (*sesv2.DeleteConfigurationSetOutput, error)
	DeleteConfigurationSetAsync(ctx workflow.Context, input *sesv2.DeleteConfigurationSetInput) *SESV2DeleteConfigurationSetFuture

	DeleteConfigurationSetEventDestination(ctx workflow.Context, input *sesv2.DeleteConfigurationSetEventDestinationInput) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error)
	DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *sesv2.DeleteConfigurationSetEventDestinationInput) *SESV2DeleteConfigurationSetEventDestinationFuture

	DeleteCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.DeleteCustomVerificationEmailTemplateInput) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error)
	DeleteCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.DeleteCustomVerificationEmailTemplateInput) *SESV2DeleteCustomVerificationEmailTemplateFuture

	DeleteDedicatedIpPool(ctx workflow.Context, input *sesv2.DeleteDedicatedIpPoolInput) (*sesv2.DeleteDedicatedIpPoolOutput, error)
	DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *sesv2.DeleteDedicatedIpPoolInput) *SESV2DeleteDedicatedIpPoolFuture

	DeleteEmailIdentity(ctx workflow.Context, input *sesv2.DeleteEmailIdentityInput) (*sesv2.DeleteEmailIdentityOutput, error)
	DeleteEmailIdentityAsync(ctx workflow.Context, input *sesv2.DeleteEmailIdentityInput) *SESV2DeleteEmailIdentityFuture

	DeleteEmailIdentityPolicy(ctx workflow.Context, input *sesv2.DeleteEmailIdentityPolicyInput) (*sesv2.DeleteEmailIdentityPolicyOutput, error)
	DeleteEmailIdentityPolicyAsync(ctx workflow.Context, input *sesv2.DeleteEmailIdentityPolicyInput) *SESV2DeleteEmailIdentityPolicyFuture

	DeleteEmailTemplate(ctx workflow.Context, input *sesv2.DeleteEmailTemplateInput) (*sesv2.DeleteEmailTemplateOutput, error)
	DeleteEmailTemplateAsync(ctx workflow.Context, input *sesv2.DeleteEmailTemplateInput) *SESV2DeleteEmailTemplateFuture

	DeleteSuppressedDestination(ctx workflow.Context, input *sesv2.DeleteSuppressedDestinationInput) (*sesv2.DeleteSuppressedDestinationOutput, error)
	DeleteSuppressedDestinationAsync(ctx workflow.Context, input *sesv2.DeleteSuppressedDestinationInput) *SESV2DeleteSuppressedDestinationFuture

	GetAccount(ctx workflow.Context, input *sesv2.GetAccountInput) (*sesv2.GetAccountOutput, error)
	GetAccountAsync(ctx workflow.Context, input *sesv2.GetAccountInput) *SESV2GetAccountFuture

	GetBlacklistReports(ctx workflow.Context, input *sesv2.GetBlacklistReportsInput) (*sesv2.GetBlacklistReportsOutput, error)
	GetBlacklistReportsAsync(ctx workflow.Context, input *sesv2.GetBlacklistReportsInput) *SESV2GetBlacklistReportsFuture

	GetConfigurationSet(ctx workflow.Context, input *sesv2.GetConfigurationSetInput) (*sesv2.GetConfigurationSetOutput, error)
	GetConfigurationSetAsync(ctx workflow.Context, input *sesv2.GetConfigurationSetInput) *SESV2GetConfigurationSetFuture

	GetConfigurationSetEventDestinations(ctx workflow.Context, input *sesv2.GetConfigurationSetEventDestinationsInput) (*sesv2.GetConfigurationSetEventDestinationsOutput, error)
	GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *sesv2.GetConfigurationSetEventDestinationsInput) *SESV2GetConfigurationSetEventDestinationsFuture

	GetCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.GetCustomVerificationEmailTemplateInput) (*sesv2.GetCustomVerificationEmailTemplateOutput, error)
	GetCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.GetCustomVerificationEmailTemplateInput) *SESV2GetCustomVerificationEmailTemplateFuture

	GetDedicatedIp(ctx workflow.Context, input *sesv2.GetDedicatedIpInput) (*sesv2.GetDedicatedIpOutput, error)
	GetDedicatedIpAsync(ctx workflow.Context, input *sesv2.GetDedicatedIpInput) *SESV2GetDedicatedIpFuture

	GetDedicatedIps(ctx workflow.Context, input *sesv2.GetDedicatedIpsInput) (*sesv2.GetDedicatedIpsOutput, error)
	GetDedicatedIpsAsync(ctx workflow.Context, input *sesv2.GetDedicatedIpsInput) *SESV2GetDedicatedIpsFuture

	GetDeliverabilityDashboardOptions(ctx workflow.Context, input *sesv2.GetDeliverabilityDashboardOptionsInput) (*sesv2.GetDeliverabilityDashboardOptionsOutput, error)
	GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *sesv2.GetDeliverabilityDashboardOptionsInput) *SESV2GetDeliverabilityDashboardOptionsFuture

	GetDeliverabilityTestReport(ctx workflow.Context, input *sesv2.GetDeliverabilityTestReportInput) (*sesv2.GetDeliverabilityTestReportOutput, error)
	GetDeliverabilityTestReportAsync(ctx workflow.Context, input *sesv2.GetDeliverabilityTestReportInput) *SESV2GetDeliverabilityTestReportFuture

	GetDomainDeliverabilityCampaign(ctx workflow.Context, input *sesv2.GetDomainDeliverabilityCampaignInput) (*sesv2.GetDomainDeliverabilityCampaignOutput, error)
	GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *sesv2.GetDomainDeliverabilityCampaignInput) *SESV2GetDomainDeliverabilityCampaignFuture

	GetDomainStatisticsReport(ctx workflow.Context, input *sesv2.GetDomainStatisticsReportInput) (*sesv2.GetDomainStatisticsReportOutput, error)
	GetDomainStatisticsReportAsync(ctx workflow.Context, input *sesv2.GetDomainStatisticsReportInput) *SESV2GetDomainStatisticsReportFuture

	GetEmailIdentity(ctx workflow.Context, input *sesv2.GetEmailIdentityInput) (*sesv2.GetEmailIdentityOutput, error)
	GetEmailIdentityAsync(ctx workflow.Context, input *sesv2.GetEmailIdentityInput) *SESV2GetEmailIdentityFuture

	GetEmailIdentityPolicies(ctx workflow.Context, input *sesv2.GetEmailIdentityPoliciesInput) (*sesv2.GetEmailIdentityPoliciesOutput, error)
	GetEmailIdentityPoliciesAsync(ctx workflow.Context, input *sesv2.GetEmailIdentityPoliciesInput) *SESV2GetEmailIdentityPoliciesFuture

	GetEmailTemplate(ctx workflow.Context, input *sesv2.GetEmailTemplateInput) (*sesv2.GetEmailTemplateOutput, error)
	GetEmailTemplateAsync(ctx workflow.Context, input *sesv2.GetEmailTemplateInput) *SESV2GetEmailTemplateFuture

	GetImportJob(ctx workflow.Context, input *sesv2.GetImportJobInput) (*sesv2.GetImportJobOutput, error)
	GetImportJobAsync(ctx workflow.Context, input *sesv2.GetImportJobInput) *SESV2GetImportJobFuture

	GetSuppressedDestination(ctx workflow.Context, input *sesv2.GetSuppressedDestinationInput) (*sesv2.GetSuppressedDestinationOutput, error)
	GetSuppressedDestinationAsync(ctx workflow.Context, input *sesv2.GetSuppressedDestinationInput) *SESV2GetSuppressedDestinationFuture

	ListConfigurationSets(ctx workflow.Context, input *sesv2.ListConfigurationSetsInput) (*sesv2.ListConfigurationSetsOutput, error)
	ListConfigurationSetsAsync(ctx workflow.Context, input *sesv2.ListConfigurationSetsInput) *SESV2ListConfigurationSetsFuture

	ListCustomVerificationEmailTemplates(ctx workflow.Context, input *sesv2.ListCustomVerificationEmailTemplatesInput) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error)
	ListCustomVerificationEmailTemplatesAsync(ctx workflow.Context, input *sesv2.ListCustomVerificationEmailTemplatesInput) *SESV2ListCustomVerificationEmailTemplatesFuture

	ListDedicatedIpPools(ctx workflow.Context, input *sesv2.ListDedicatedIpPoolsInput) (*sesv2.ListDedicatedIpPoolsOutput, error)
	ListDedicatedIpPoolsAsync(ctx workflow.Context, input *sesv2.ListDedicatedIpPoolsInput) *SESV2ListDedicatedIpPoolsFuture

	ListDeliverabilityTestReports(ctx workflow.Context, input *sesv2.ListDeliverabilityTestReportsInput) (*sesv2.ListDeliverabilityTestReportsOutput, error)
	ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *sesv2.ListDeliverabilityTestReportsInput) *SESV2ListDeliverabilityTestReportsFuture

	ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *sesv2.ListDomainDeliverabilityCampaignsInput) (*sesv2.ListDomainDeliverabilityCampaignsOutput, error)
	ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *sesv2.ListDomainDeliverabilityCampaignsInput) *SESV2ListDomainDeliverabilityCampaignsFuture

	ListEmailIdentities(ctx workflow.Context, input *sesv2.ListEmailIdentitiesInput) (*sesv2.ListEmailIdentitiesOutput, error)
	ListEmailIdentitiesAsync(ctx workflow.Context, input *sesv2.ListEmailIdentitiesInput) *SESV2ListEmailIdentitiesFuture

	ListEmailTemplates(ctx workflow.Context, input *sesv2.ListEmailTemplatesInput) (*sesv2.ListEmailTemplatesOutput, error)
	ListEmailTemplatesAsync(ctx workflow.Context, input *sesv2.ListEmailTemplatesInput) *SESV2ListEmailTemplatesFuture

	ListImportJobs(ctx workflow.Context, input *sesv2.ListImportJobsInput) (*sesv2.ListImportJobsOutput, error)
	ListImportJobsAsync(ctx workflow.Context, input *sesv2.ListImportJobsInput) *SESV2ListImportJobsFuture

	ListSuppressedDestinations(ctx workflow.Context, input *sesv2.ListSuppressedDestinationsInput) (*sesv2.ListSuppressedDestinationsOutput, error)
	ListSuppressedDestinationsAsync(ctx workflow.Context, input *sesv2.ListSuppressedDestinationsInput) *SESV2ListSuppressedDestinationsFuture

	ListTagsForResource(ctx workflow.Context, input *sesv2.ListTagsForResourceInput) (*sesv2.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *sesv2.ListTagsForResourceInput) *SESV2ListTagsForResourceFuture

	PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *sesv2.PutAccountDedicatedIpWarmupAttributesInput) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error)
	PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *sesv2.PutAccountDedicatedIpWarmupAttributesInput) *SESV2PutAccountDedicatedIpWarmupAttributesFuture

	PutAccountDetails(ctx workflow.Context, input *sesv2.PutAccountDetailsInput) (*sesv2.PutAccountDetailsOutput, error)
	PutAccountDetailsAsync(ctx workflow.Context, input *sesv2.PutAccountDetailsInput) *SESV2PutAccountDetailsFuture

	PutAccountSendingAttributes(ctx workflow.Context, input *sesv2.PutAccountSendingAttributesInput) (*sesv2.PutAccountSendingAttributesOutput, error)
	PutAccountSendingAttributesAsync(ctx workflow.Context, input *sesv2.PutAccountSendingAttributesInput) *SESV2PutAccountSendingAttributesFuture

	PutAccountSuppressionAttributes(ctx workflow.Context, input *sesv2.PutAccountSuppressionAttributesInput) (*sesv2.PutAccountSuppressionAttributesOutput, error)
	PutAccountSuppressionAttributesAsync(ctx workflow.Context, input *sesv2.PutAccountSuppressionAttributesInput) *SESV2PutAccountSuppressionAttributesFuture

	PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetDeliveryOptionsInput) (*sesv2.PutConfigurationSetDeliveryOptionsOutput, error)
	PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetDeliveryOptionsInput) *SESV2PutConfigurationSetDeliveryOptionsFuture

	PutConfigurationSetReputationOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetReputationOptionsInput) (*sesv2.PutConfigurationSetReputationOptionsOutput, error)
	PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetReputationOptionsInput) *SESV2PutConfigurationSetReputationOptionsFuture

	PutConfigurationSetSendingOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetSendingOptionsInput) (*sesv2.PutConfigurationSetSendingOptionsOutput, error)
	PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetSendingOptionsInput) *SESV2PutConfigurationSetSendingOptionsFuture

	PutConfigurationSetSuppressionOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetSuppressionOptionsInput) (*sesv2.PutConfigurationSetSuppressionOptionsOutput, error)
	PutConfigurationSetSuppressionOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetSuppressionOptionsInput) *SESV2PutConfigurationSetSuppressionOptionsFuture

	PutConfigurationSetTrackingOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetTrackingOptionsInput) (*sesv2.PutConfigurationSetTrackingOptionsOutput, error)
	PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetTrackingOptionsInput) *SESV2PutConfigurationSetTrackingOptionsFuture

	PutDedicatedIpInPool(ctx workflow.Context, input *sesv2.PutDedicatedIpInPoolInput) (*sesv2.PutDedicatedIpInPoolOutput, error)
	PutDedicatedIpInPoolAsync(ctx workflow.Context, input *sesv2.PutDedicatedIpInPoolInput) *SESV2PutDedicatedIpInPoolFuture

	PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *sesv2.PutDedicatedIpWarmupAttributesInput) (*sesv2.PutDedicatedIpWarmupAttributesOutput, error)
	PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *sesv2.PutDedicatedIpWarmupAttributesInput) *SESV2PutDedicatedIpWarmupAttributesFuture

	PutDeliverabilityDashboardOption(ctx workflow.Context, input *sesv2.PutDeliverabilityDashboardOptionInput) (*sesv2.PutDeliverabilityDashboardOptionOutput, error)
	PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *sesv2.PutDeliverabilityDashboardOptionInput) *SESV2PutDeliverabilityDashboardOptionFuture

	PutEmailIdentityDkimAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimAttributesInput) (*sesv2.PutEmailIdentityDkimAttributesOutput, error)
	PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimAttributesInput) *SESV2PutEmailIdentityDkimAttributesFuture

	PutEmailIdentityDkimSigningAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimSigningAttributesInput) (*sesv2.PutEmailIdentityDkimSigningAttributesOutput, error)
	PutEmailIdentityDkimSigningAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimSigningAttributesInput) *SESV2PutEmailIdentityDkimSigningAttributesFuture

	PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityFeedbackAttributesInput) (*sesv2.PutEmailIdentityFeedbackAttributesOutput, error)
	PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityFeedbackAttributesInput) *SESV2PutEmailIdentityFeedbackAttributesFuture

	PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityMailFromAttributesInput) (*sesv2.PutEmailIdentityMailFromAttributesOutput, error)
	PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityMailFromAttributesInput) *SESV2PutEmailIdentityMailFromAttributesFuture

	PutSuppressedDestination(ctx workflow.Context, input *sesv2.PutSuppressedDestinationInput) (*sesv2.PutSuppressedDestinationOutput, error)
	PutSuppressedDestinationAsync(ctx workflow.Context, input *sesv2.PutSuppressedDestinationInput) *SESV2PutSuppressedDestinationFuture

	SendBulkEmail(ctx workflow.Context, input *sesv2.SendBulkEmailInput) (*sesv2.SendBulkEmailOutput, error)
	SendBulkEmailAsync(ctx workflow.Context, input *sesv2.SendBulkEmailInput) *SESV2SendBulkEmailFuture

	SendCustomVerificationEmail(ctx workflow.Context, input *sesv2.SendCustomVerificationEmailInput) (*sesv2.SendCustomVerificationEmailOutput, error)
	SendCustomVerificationEmailAsync(ctx workflow.Context, input *sesv2.SendCustomVerificationEmailInput) *SESV2SendCustomVerificationEmailFuture

	SendEmail(ctx workflow.Context, input *sesv2.SendEmailInput) (*sesv2.SendEmailOutput, error)
	SendEmailAsync(ctx workflow.Context, input *sesv2.SendEmailInput) *SESV2SendEmailFuture

	TagResource(ctx workflow.Context, input *sesv2.TagResourceInput) (*sesv2.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *sesv2.TagResourceInput) *SESV2TagResourceFuture

	TestRenderEmailTemplate(ctx workflow.Context, input *sesv2.TestRenderEmailTemplateInput) (*sesv2.TestRenderEmailTemplateOutput, error)
	TestRenderEmailTemplateAsync(ctx workflow.Context, input *sesv2.TestRenderEmailTemplateInput) *SESV2TestRenderEmailTemplateFuture

	UntagResource(ctx workflow.Context, input *sesv2.UntagResourceInput) (*sesv2.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *sesv2.UntagResourceInput) *SESV2UntagResourceFuture

	UpdateConfigurationSetEventDestination(ctx workflow.Context, input *sesv2.UpdateConfigurationSetEventDestinationInput) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error)
	UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *sesv2.UpdateConfigurationSetEventDestinationInput) *SESV2UpdateConfigurationSetEventDestinationFuture

	UpdateCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.UpdateCustomVerificationEmailTemplateInput) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error)
	UpdateCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.UpdateCustomVerificationEmailTemplateInput) *SESV2UpdateCustomVerificationEmailTemplateFuture

	UpdateEmailIdentityPolicy(ctx workflow.Context, input *sesv2.UpdateEmailIdentityPolicyInput) (*sesv2.UpdateEmailIdentityPolicyOutput, error)
	UpdateEmailIdentityPolicyAsync(ctx workflow.Context, input *sesv2.UpdateEmailIdentityPolicyInput) *SESV2UpdateEmailIdentityPolicyFuture

	UpdateEmailTemplate(ctx workflow.Context, input *sesv2.UpdateEmailTemplateInput) (*sesv2.UpdateEmailTemplateOutput, error)
	UpdateEmailTemplateAsync(ctx workflow.Context, input *sesv2.UpdateEmailTemplateInput) *SESV2UpdateEmailTemplateFuture
}

type SESV2Stub struct{}

func NewSESV2Stub() SESV2Client {
	return &SESV2Stub{}
}

type SESV2CreateConfigurationSetFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateConfigurationSetFuture) Get(ctx workflow.Context) (*sesv2.CreateConfigurationSetOutput, error) {
	var output sesv2.CreateConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateConfigurationSetEventDestinationFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*sesv2.CreateConfigurationSetEventDestinationOutput, error) {
	var output sesv2.CreateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateCustomVerificationEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateCustomVerificationEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.CreateCustomVerificationEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateDedicatedIpPoolFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateDedicatedIpPoolFuture) Get(ctx workflow.Context) (*sesv2.CreateDedicatedIpPoolOutput, error) {
	var output sesv2.CreateDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateDeliverabilityTestReportFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*sesv2.CreateDeliverabilityTestReportOutput, error) {
	var output sesv2.CreateDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateEmailIdentityFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateEmailIdentityFuture) Get(ctx workflow.Context) (*sesv2.CreateEmailIdentityOutput, error) {
	var output sesv2.CreateEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateEmailIdentityPolicyFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateEmailIdentityPolicyFuture) Get(ctx workflow.Context) (*sesv2.CreateEmailIdentityPolicyOutput, error) {
	var output sesv2.CreateEmailIdentityPolicyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.CreateEmailTemplateOutput, error) {
	var output sesv2.CreateEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2CreateImportJobFuture struct {
	Future workflow.Future
}

func (r *SESV2CreateImportJobFuture) Get(ctx workflow.Context) (*sesv2.CreateImportJobOutput, error) {
	var output sesv2.CreateImportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteConfigurationSetFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteConfigurationSetFuture) Get(ctx workflow.Context) (*sesv2.DeleteConfigurationSetOutput, error) {
	var output sesv2.DeleteConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteConfigurationSetEventDestinationFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error) {
	var output sesv2.DeleteConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteCustomVerificationEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteCustomVerificationEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.DeleteCustomVerificationEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteDedicatedIpPoolFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteDedicatedIpPoolFuture) Get(ctx workflow.Context) (*sesv2.DeleteDedicatedIpPoolOutput, error) {
	var output sesv2.DeleteDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteEmailIdentityFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteEmailIdentityFuture) Get(ctx workflow.Context) (*sesv2.DeleteEmailIdentityOutput, error) {
	var output sesv2.DeleteEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteEmailIdentityPolicyFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteEmailIdentityPolicyFuture) Get(ctx workflow.Context) (*sesv2.DeleteEmailIdentityPolicyOutput, error) {
	var output sesv2.DeleteEmailIdentityPolicyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.DeleteEmailTemplateOutput, error) {
	var output sesv2.DeleteEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2DeleteSuppressedDestinationFuture struct {
	Future workflow.Future
}

func (r *SESV2DeleteSuppressedDestinationFuture) Get(ctx workflow.Context) (*sesv2.DeleteSuppressedDestinationOutput, error) {
	var output sesv2.DeleteSuppressedDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetAccountFuture struct {
	Future workflow.Future
}

func (r *SESV2GetAccountFuture) Get(ctx workflow.Context) (*sesv2.GetAccountOutput, error) {
	var output sesv2.GetAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetBlacklistReportsFuture struct {
	Future workflow.Future
}

func (r *SESV2GetBlacklistReportsFuture) Get(ctx workflow.Context) (*sesv2.GetBlacklistReportsOutput, error) {
	var output sesv2.GetBlacklistReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetConfigurationSetFuture struct {
	Future workflow.Future
}

func (r *SESV2GetConfigurationSetFuture) Get(ctx workflow.Context) (*sesv2.GetConfigurationSetOutput, error) {
	var output sesv2.GetConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetConfigurationSetEventDestinationsFuture struct {
	Future workflow.Future
}

func (r *SESV2GetConfigurationSetEventDestinationsFuture) Get(ctx workflow.Context) (*sesv2.GetConfigurationSetEventDestinationsOutput, error) {
	var output sesv2.GetConfigurationSetEventDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetCustomVerificationEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2GetCustomVerificationEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.GetCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.GetCustomVerificationEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetDedicatedIpFuture struct {
	Future workflow.Future
}

func (r *SESV2GetDedicatedIpFuture) Get(ctx workflow.Context) (*sesv2.GetDedicatedIpOutput, error) {
	var output sesv2.GetDedicatedIpOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetDedicatedIpsFuture struct {
	Future workflow.Future
}

func (r *SESV2GetDedicatedIpsFuture) Get(ctx workflow.Context) (*sesv2.GetDedicatedIpsOutput, error) {
	var output sesv2.GetDedicatedIpsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetDeliverabilityDashboardOptionsFuture struct {
	Future workflow.Future
}

func (r *SESV2GetDeliverabilityDashboardOptionsFuture) Get(ctx workflow.Context) (*sesv2.GetDeliverabilityDashboardOptionsOutput, error) {
	var output sesv2.GetDeliverabilityDashboardOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetDeliverabilityTestReportFuture struct {
	Future workflow.Future
}

func (r *SESV2GetDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*sesv2.GetDeliverabilityTestReportOutput, error) {
	var output sesv2.GetDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetDomainDeliverabilityCampaignFuture struct {
	Future workflow.Future
}

func (r *SESV2GetDomainDeliverabilityCampaignFuture) Get(ctx workflow.Context) (*sesv2.GetDomainDeliverabilityCampaignOutput, error) {
	var output sesv2.GetDomainDeliverabilityCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetDomainStatisticsReportFuture struct {
	Future workflow.Future
}

func (r *SESV2GetDomainStatisticsReportFuture) Get(ctx workflow.Context) (*sesv2.GetDomainStatisticsReportOutput, error) {
	var output sesv2.GetDomainStatisticsReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetEmailIdentityFuture struct {
	Future workflow.Future
}

func (r *SESV2GetEmailIdentityFuture) Get(ctx workflow.Context) (*sesv2.GetEmailIdentityOutput, error) {
	var output sesv2.GetEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetEmailIdentityPoliciesFuture struct {
	Future workflow.Future
}

func (r *SESV2GetEmailIdentityPoliciesFuture) Get(ctx workflow.Context) (*sesv2.GetEmailIdentityPoliciesOutput, error) {
	var output sesv2.GetEmailIdentityPoliciesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2GetEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.GetEmailTemplateOutput, error) {
	var output sesv2.GetEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetImportJobFuture struct {
	Future workflow.Future
}

func (r *SESV2GetImportJobFuture) Get(ctx workflow.Context) (*sesv2.GetImportJobOutput, error) {
	var output sesv2.GetImportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2GetSuppressedDestinationFuture struct {
	Future workflow.Future
}

func (r *SESV2GetSuppressedDestinationFuture) Get(ctx workflow.Context) (*sesv2.GetSuppressedDestinationOutput, error) {
	var output sesv2.GetSuppressedDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListConfigurationSetsFuture struct {
	Future workflow.Future
}

func (r *SESV2ListConfigurationSetsFuture) Get(ctx workflow.Context) (*sesv2.ListConfigurationSetsOutput, error) {
	var output sesv2.ListConfigurationSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListCustomVerificationEmailTemplatesFuture struct {
	Future workflow.Future
}

func (r *SESV2ListCustomVerificationEmailTemplatesFuture) Get(ctx workflow.Context) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error) {
	var output sesv2.ListCustomVerificationEmailTemplatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListDedicatedIpPoolsFuture struct {
	Future workflow.Future
}

func (r *SESV2ListDedicatedIpPoolsFuture) Get(ctx workflow.Context) (*sesv2.ListDedicatedIpPoolsOutput, error) {
	var output sesv2.ListDedicatedIpPoolsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListDeliverabilityTestReportsFuture struct {
	Future workflow.Future
}

func (r *SESV2ListDeliverabilityTestReportsFuture) Get(ctx workflow.Context) (*sesv2.ListDeliverabilityTestReportsOutput, error) {
	var output sesv2.ListDeliverabilityTestReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListDomainDeliverabilityCampaignsFuture struct {
	Future workflow.Future
}

func (r *SESV2ListDomainDeliverabilityCampaignsFuture) Get(ctx workflow.Context) (*sesv2.ListDomainDeliverabilityCampaignsOutput, error) {
	var output sesv2.ListDomainDeliverabilityCampaignsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListEmailIdentitiesFuture struct {
	Future workflow.Future
}

func (r *SESV2ListEmailIdentitiesFuture) Get(ctx workflow.Context) (*sesv2.ListEmailIdentitiesOutput, error) {
	var output sesv2.ListEmailIdentitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListEmailTemplatesFuture struct {
	Future workflow.Future
}

func (r *SESV2ListEmailTemplatesFuture) Get(ctx workflow.Context) (*sesv2.ListEmailTemplatesOutput, error) {
	var output sesv2.ListEmailTemplatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListImportJobsFuture struct {
	Future workflow.Future
}

func (r *SESV2ListImportJobsFuture) Get(ctx workflow.Context) (*sesv2.ListImportJobsOutput, error) {
	var output sesv2.ListImportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListSuppressedDestinationsFuture struct {
	Future workflow.Future
}

func (r *SESV2ListSuppressedDestinationsFuture) Get(ctx workflow.Context) (*sesv2.ListSuppressedDestinationsOutput, error) {
	var output sesv2.ListSuppressedDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2ListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *SESV2ListTagsForResourceFuture) Get(ctx workflow.Context) (*sesv2.ListTagsForResourceOutput, error) {
	var output sesv2.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutAccountDedicatedIpWarmupAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutAccountDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output sesv2.PutAccountDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutAccountDetailsFuture struct {
	Future workflow.Future
}

func (r *SESV2PutAccountDetailsFuture) Get(ctx workflow.Context) (*sesv2.PutAccountDetailsOutput, error) {
	var output sesv2.PutAccountDetailsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutAccountSendingAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutAccountSendingAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutAccountSendingAttributesOutput, error) {
	var output sesv2.PutAccountSendingAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutAccountSuppressionAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutAccountSuppressionAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutAccountSuppressionAttributesOutput, error) {
	var output sesv2.PutAccountSuppressionAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutConfigurationSetDeliveryOptionsFuture struct {
	Future workflow.Future
}

func (r *SESV2PutConfigurationSetDeliveryOptionsFuture) Get(ctx workflow.Context) (*sesv2.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output sesv2.PutConfigurationSetDeliveryOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutConfigurationSetReputationOptionsFuture struct {
	Future workflow.Future
}

func (r *SESV2PutConfigurationSetReputationOptionsFuture) Get(ctx workflow.Context) (*sesv2.PutConfigurationSetReputationOptionsOutput, error) {
	var output sesv2.PutConfigurationSetReputationOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutConfigurationSetSendingOptionsFuture struct {
	Future workflow.Future
}

func (r *SESV2PutConfigurationSetSendingOptionsFuture) Get(ctx workflow.Context) (*sesv2.PutConfigurationSetSendingOptionsOutput, error) {
	var output sesv2.PutConfigurationSetSendingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutConfigurationSetSuppressionOptionsFuture struct {
	Future workflow.Future
}

func (r *SESV2PutConfigurationSetSuppressionOptionsFuture) Get(ctx workflow.Context) (*sesv2.PutConfigurationSetSuppressionOptionsOutput, error) {
	var output sesv2.PutConfigurationSetSuppressionOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutConfigurationSetTrackingOptionsFuture struct {
	Future workflow.Future
}

func (r *SESV2PutConfigurationSetTrackingOptionsFuture) Get(ctx workflow.Context) (*sesv2.PutConfigurationSetTrackingOptionsOutput, error) {
	var output sesv2.PutConfigurationSetTrackingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutDedicatedIpInPoolFuture struct {
	Future workflow.Future
}

func (r *SESV2PutDedicatedIpInPoolFuture) Get(ctx workflow.Context) (*sesv2.PutDedicatedIpInPoolOutput, error) {
	var output sesv2.PutDedicatedIpInPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutDedicatedIpWarmupAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutDedicatedIpWarmupAttributesOutput, error) {
	var output sesv2.PutDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutDeliverabilityDashboardOptionFuture struct {
	Future workflow.Future
}

func (r *SESV2PutDeliverabilityDashboardOptionFuture) Get(ctx workflow.Context) (*sesv2.PutDeliverabilityDashboardOptionOutput, error) {
	var output sesv2.PutDeliverabilityDashboardOptionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutEmailIdentityDkimAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutEmailIdentityDkimAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutEmailIdentityDkimAttributesOutput, error) {
	var output sesv2.PutEmailIdentityDkimAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutEmailIdentityDkimSigningAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutEmailIdentityDkimSigningAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutEmailIdentityDkimSigningAttributesOutput, error) {
	var output sesv2.PutEmailIdentityDkimSigningAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutEmailIdentityFeedbackAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutEmailIdentityFeedbackAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output sesv2.PutEmailIdentityFeedbackAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutEmailIdentityMailFromAttributesFuture struct {
	Future workflow.Future
}

func (r *SESV2PutEmailIdentityMailFromAttributesFuture) Get(ctx workflow.Context) (*sesv2.PutEmailIdentityMailFromAttributesOutput, error) {
	var output sesv2.PutEmailIdentityMailFromAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2PutSuppressedDestinationFuture struct {
	Future workflow.Future
}

func (r *SESV2PutSuppressedDestinationFuture) Get(ctx workflow.Context) (*sesv2.PutSuppressedDestinationOutput, error) {
	var output sesv2.PutSuppressedDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2SendBulkEmailFuture struct {
	Future workflow.Future
}

func (r *SESV2SendBulkEmailFuture) Get(ctx workflow.Context) (*sesv2.SendBulkEmailOutput, error) {
	var output sesv2.SendBulkEmailOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2SendCustomVerificationEmailFuture struct {
	Future workflow.Future
}

func (r *SESV2SendCustomVerificationEmailFuture) Get(ctx workflow.Context) (*sesv2.SendCustomVerificationEmailOutput, error) {
	var output sesv2.SendCustomVerificationEmailOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2SendEmailFuture struct {
	Future workflow.Future
}

func (r *SESV2SendEmailFuture) Get(ctx workflow.Context) (*sesv2.SendEmailOutput, error) {
	var output sesv2.SendEmailOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2TagResourceFuture struct {
	Future workflow.Future
}

func (r *SESV2TagResourceFuture) Get(ctx workflow.Context) (*sesv2.TagResourceOutput, error) {
	var output sesv2.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2TestRenderEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2TestRenderEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.TestRenderEmailTemplateOutput, error) {
	var output sesv2.TestRenderEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2UntagResourceFuture struct {
	Future workflow.Future
}

func (r *SESV2UntagResourceFuture) Get(ctx workflow.Context) (*sesv2.UntagResourceOutput, error) {
	var output sesv2.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2UpdateConfigurationSetEventDestinationFuture struct {
	Future workflow.Future
}

func (r *SESV2UpdateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error) {
	var output sesv2.UpdateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2UpdateCustomVerificationEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2UpdateCustomVerificationEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.UpdateCustomVerificationEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2UpdateEmailIdentityPolicyFuture struct {
	Future workflow.Future
}

func (r *SESV2UpdateEmailIdentityPolicyFuture) Get(ctx workflow.Context) (*sesv2.UpdateEmailIdentityPolicyOutput, error) {
	var output sesv2.UpdateEmailIdentityPolicyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SESV2UpdateEmailTemplateFuture struct {
	Future workflow.Future
}

func (r *SESV2UpdateEmailTemplateFuture) Get(ctx workflow.Context) (*sesv2.UpdateEmailTemplateOutput, error) {
	var output sesv2.UpdateEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateConfigurationSet(ctx workflow.Context, input *sesv2.CreateConfigurationSetInput) (*sesv2.CreateConfigurationSetOutput, error) {
	var output sesv2.CreateConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateConfigurationSetAsync(ctx workflow.Context, input *sesv2.CreateConfigurationSetInput) *SESV2CreateConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateConfigurationSet", input)
	return &SESV2CreateConfigurationSetFuture{Future: future}
}

func (a *SESV2Stub) CreateConfigurationSetEventDestination(ctx workflow.Context, input *sesv2.CreateConfigurationSetEventDestinationInput) (*sesv2.CreateConfigurationSetEventDestinationOutput, error) {
	var output sesv2.CreateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *sesv2.CreateConfigurationSetEventDestinationInput) *SESV2CreateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateConfigurationSetEventDestination", input)
	return &SESV2CreateConfigurationSetEventDestinationFuture{Future: future}
}

func (a *SESV2Stub) CreateCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.CreateCustomVerificationEmailTemplateInput) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.CreateCustomVerificationEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateCustomVerificationEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.CreateCustomVerificationEmailTemplateInput) *SESV2CreateCustomVerificationEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateCustomVerificationEmailTemplate", input)
	return &SESV2CreateCustomVerificationEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) CreateDedicatedIpPool(ctx workflow.Context, input *sesv2.CreateDedicatedIpPoolInput) (*sesv2.CreateDedicatedIpPoolOutput, error) {
	var output sesv2.CreateDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateDedicatedIpPoolAsync(ctx workflow.Context, input *sesv2.CreateDedicatedIpPoolInput) *SESV2CreateDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateDedicatedIpPool", input)
	return &SESV2CreateDedicatedIpPoolFuture{Future: future}
}

func (a *SESV2Stub) CreateDeliverabilityTestReport(ctx workflow.Context, input *sesv2.CreateDeliverabilityTestReportInput) (*sesv2.CreateDeliverabilityTestReportOutput, error) {
	var output sesv2.CreateDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *sesv2.CreateDeliverabilityTestReportInput) *SESV2CreateDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateDeliverabilityTestReport", input)
	return &SESV2CreateDeliverabilityTestReportFuture{Future: future}
}

func (a *SESV2Stub) CreateEmailIdentity(ctx workflow.Context, input *sesv2.CreateEmailIdentityInput) (*sesv2.CreateEmailIdentityOutput, error) {
	var output sesv2.CreateEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateEmailIdentityAsync(ctx workflow.Context, input *sesv2.CreateEmailIdentityInput) *SESV2CreateEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateEmailIdentity", input)
	return &SESV2CreateEmailIdentityFuture{Future: future}
}

func (a *SESV2Stub) CreateEmailIdentityPolicy(ctx workflow.Context, input *sesv2.CreateEmailIdentityPolicyInput) (*sesv2.CreateEmailIdentityPolicyOutput, error) {
	var output sesv2.CreateEmailIdentityPolicyOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateEmailIdentityPolicy", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateEmailIdentityPolicyAsync(ctx workflow.Context, input *sesv2.CreateEmailIdentityPolicyInput) *SESV2CreateEmailIdentityPolicyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateEmailIdentityPolicy", input)
	return &SESV2CreateEmailIdentityPolicyFuture{Future: future}
}

func (a *SESV2Stub) CreateEmailTemplate(ctx workflow.Context, input *sesv2.CreateEmailTemplateInput) (*sesv2.CreateEmailTemplateOutput, error) {
	var output sesv2.CreateEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateEmailTemplateAsync(ctx workflow.Context, input *sesv2.CreateEmailTemplateInput) *SESV2CreateEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateEmailTemplate", input)
	return &SESV2CreateEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) CreateImportJob(ctx workflow.Context, input *sesv2.CreateImportJobInput) (*sesv2.CreateImportJobOutput, error) {
	var output sesv2.CreateImportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateImportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) CreateImportJobAsync(ctx workflow.Context, input *sesv2.CreateImportJobInput) *SESV2CreateImportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.CreateImportJob", input)
	return &SESV2CreateImportJobFuture{Future: future}
}

func (a *SESV2Stub) DeleteConfigurationSet(ctx workflow.Context, input *sesv2.DeleteConfigurationSetInput) (*sesv2.DeleteConfigurationSetOutput, error) {
	var output sesv2.DeleteConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteConfigurationSetAsync(ctx workflow.Context, input *sesv2.DeleteConfigurationSetInput) *SESV2DeleteConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteConfigurationSet", input)
	return &SESV2DeleteConfigurationSetFuture{Future: future}
}

func (a *SESV2Stub) DeleteConfigurationSetEventDestination(ctx workflow.Context, input *sesv2.DeleteConfigurationSetEventDestinationInput) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error) {
	var output sesv2.DeleteConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *sesv2.DeleteConfigurationSetEventDestinationInput) *SESV2DeleteConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteConfigurationSetEventDestination", input)
	return &SESV2DeleteConfigurationSetEventDestinationFuture{Future: future}
}

func (a *SESV2Stub) DeleteCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.DeleteCustomVerificationEmailTemplateInput) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.DeleteCustomVerificationEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteCustomVerificationEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.DeleteCustomVerificationEmailTemplateInput) *SESV2DeleteCustomVerificationEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteCustomVerificationEmailTemplate", input)
	return &SESV2DeleteCustomVerificationEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) DeleteDedicatedIpPool(ctx workflow.Context, input *sesv2.DeleteDedicatedIpPoolInput) (*sesv2.DeleteDedicatedIpPoolOutput, error) {
	var output sesv2.DeleteDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *sesv2.DeleteDedicatedIpPoolInput) *SESV2DeleteDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteDedicatedIpPool", input)
	return &SESV2DeleteDedicatedIpPoolFuture{Future: future}
}

func (a *SESV2Stub) DeleteEmailIdentity(ctx workflow.Context, input *sesv2.DeleteEmailIdentityInput) (*sesv2.DeleteEmailIdentityOutput, error) {
	var output sesv2.DeleteEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteEmailIdentityAsync(ctx workflow.Context, input *sesv2.DeleteEmailIdentityInput) *SESV2DeleteEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteEmailIdentity", input)
	return &SESV2DeleteEmailIdentityFuture{Future: future}
}

func (a *SESV2Stub) DeleteEmailIdentityPolicy(ctx workflow.Context, input *sesv2.DeleteEmailIdentityPolicyInput) (*sesv2.DeleteEmailIdentityPolicyOutput, error) {
	var output sesv2.DeleteEmailIdentityPolicyOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteEmailIdentityPolicy", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteEmailIdentityPolicyAsync(ctx workflow.Context, input *sesv2.DeleteEmailIdentityPolicyInput) *SESV2DeleteEmailIdentityPolicyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteEmailIdentityPolicy", input)
	return &SESV2DeleteEmailIdentityPolicyFuture{Future: future}
}

func (a *SESV2Stub) DeleteEmailTemplate(ctx workflow.Context, input *sesv2.DeleteEmailTemplateInput) (*sesv2.DeleteEmailTemplateOutput, error) {
	var output sesv2.DeleteEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteEmailTemplateAsync(ctx workflow.Context, input *sesv2.DeleteEmailTemplateInput) *SESV2DeleteEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteEmailTemplate", input)
	return &SESV2DeleteEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) DeleteSuppressedDestination(ctx workflow.Context, input *sesv2.DeleteSuppressedDestinationInput) (*sesv2.DeleteSuppressedDestinationOutput, error) {
	var output sesv2.DeleteSuppressedDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteSuppressedDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) DeleteSuppressedDestinationAsync(ctx workflow.Context, input *sesv2.DeleteSuppressedDestinationInput) *SESV2DeleteSuppressedDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.DeleteSuppressedDestination", input)
	return &SESV2DeleteSuppressedDestinationFuture{Future: future}
}

func (a *SESV2Stub) GetAccount(ctx workflow.Context, input *sesv2.GetAccountInput) (*sesv2.GetAccountOutput, error) {
	var output sesv2.GetAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetAccountAsync(ctx workflow.Context, input *sesv2.GetAccountInput) *SESV2GetAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetAccount", input)
	return &SESV2GetAccountFuture{Future: future}
}

func (a *SESV2Stub) GetBlacklistReports(ctx workflow.Context, input *sesv2.GetBlacklistReportsInput) (*sesv2.GetBlacklistReportsOutput, error) {
	var output sesv2.GetBlacklistReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetBlacklistReports", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetBlacklistReportsAsync(ctx workflow.Context, input *sesv2.GetBlacklistReportsInput) *SESV2GetBlacklistReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetBlacklistReports", input)
	return &SESV2GetBlacklistReportsFuture{Future: future}
}

func (a *SESV2Stub) GetConfigurationSet(ctx workflow.Context, input *sesv2.GetConfigurationSetInput) (*sesv2.GetConfigurationSetOutput, error) {
	var output sesv2.GetConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetConfigurationSetAsync(ctx workflow.Context, input *sesv2.GetConfigurationSetInput) *SESV2GetConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetConfigurationSet", input)
	return &SESV2GetConfigurationSetFuture{Future: future}
}

func (a *SESV2Stub) GetConfigurationSetEventDestinations(ctx workflow.Context, input *sesv2.GetConfigurationSetEventDestinationsInput) (*sesv2.GetConfigurationSetEventDestinationsOutput, error) {
	var output sesv2.GetConfigurationSetEventDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetConfigurationSetEventDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *sesv2.GetConfigurationSetEventDestinationsInput) *SESV2GetConfigurationSetEventDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetConfigurationSetEventDestinations", input)
	return &SESV2GetConfigurationSetEventDestinationsFuture{Future: future}
}

func (a *SESV2Stub) GetCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.GetCustomVerificationEmailTemplateInput) (*sesv2.GetCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.GetCustomVerificationEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetCustomVerificationEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.GetCustomVerificationEmailTemplateInput) *SESV2GetCustomVerificationEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetCustomVerificationEmailTemplate", input)
	return &SESV2GetCustomVerificationEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) GetDedicatedIp(ctx workflow.Context, input *sesv2.GetDedicatedIpInput) (*sesv2.GetDedicatedIpOutput, error) {
	var output sesv2.GetDedicatedIpOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDedicatedIp", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetDedicatedIpAsync(ctx workflow.Context, input *sesv2.GetDedicatedIpInput) *SESV2GetDedicatedIpFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDedicatedIp", input)
	return &SESV2GetDedicatedIpFuture{Future: future}
}

func (a *SESV2Stub) GetDedicatedIps(ctx workflow.Context, input *sesv2.GetDedicatedIpsInput) (*sesv2.GetDedicatedIpsOutput, error) {
	var output sesv2.GetDedicatedIpsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDedicatedIps", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetDedicatedIpsAsync(ctx workflow.Context, input *sesv2.GetDedicatedIpsInput) *SESV2GetDedicatedIpsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDedicatedIps", input)
	return &SESV2GetDedicatedIpsFuture{Future: future}
}

func (a *SESV2Stub) GetDeliverabilityDashboardOptions(ctx workflow.Context, input *sesv2.GetDeliverabilityDashboardOptionsInput) (*sesv2.GetDeliverabilityDashboardOptionsOutput, error) {
	var output sesv2.GetDeliverabilityDashboardOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDeliverabilityDashboardOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *sesv2.GetDeliverabilityDashboardOptionsInput) *SESV2GetDeliverabilityDashboardOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDeliverabilityDashboardOptions", input)
	return &SESV2GetDeliverabilityDashboardOptionsFuture{Future: future}
}

func (a *SESV2Stub) GetDeliverabilityTestReport(ctx workflow.Context, input *sesv2.GetDeliverabilityTestReportInput) (*sesv2.GetDeliverabilityTestReportOutput, error) {
	var output sesv2.GetDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetDeliverabilityTestReportAsync(ctx workflow.Context, input *sesv2.GetDeliverabilityTestReportInput) *SESV2GetDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDeliverabilityTestReport", input)
	return &SESV2GetDeliverabilityTestReportFuture{Future: future}
}

func (a *SESV2Stub) GetDomainDeliverabilityCampaign(ctx workflow.Context, input *sesv2.GetDomainDeliverabilityCampaignInput) (*sesv2.GetDomainDeliverabilityCampaignOutput, error) {
	var output sesv2.GetDomainDeliverabilityCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDomainDeliverabilityCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *sesv2.GetDomainDeliverabilityCampaignInput) *SESV2GetDomainDeliverabilityCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDomainDeliverabilityCampaign", input)
	return &SESV2GetDomainDeliverabilityCampaignFuture{Future: future}
}

func (a *SESV2Stub) GetDomainStatisticsReport(ctx workflow.Context, input *sesv2.GetDomainStatisticsReportInput) (*sesv2.GetDomainStatisticsReportOutput, error) {
	var output sesv2.GetDomainStatisticsReportOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDomainStatisticsReport", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetDomainStatisticsReportAsync(ctx workflow.Context, input *sesv2.GetDomainStatisticsReportInput) *SESV2GetDomainStatisticsReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetDomainStatisticsReport", input)
	return &SESV2GetDomainStatisticsReportFuture{Future: future}
}

func (a *SESV2Stub) GetEmailIdentity(ctx workflow.Context, input *sesv2.GetEmailIdentityInput) (*sesv2.GetEmailIdentityOutput, error) {
	var output sesv2.GetEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetEmailIdentityAsync(ctx workflow.Context, input *sesv2.GetEmailIdentityInput) *SESV2GetEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetEmailIdentity", input)
	return &SESV2GetEmailIdentityFuture{Future: future}
}

func (a *SESV2Stub) GetEmailIdentityPolicies(ctx workflow.Context, input *sesv2.GetEmailIdentityPoliciesInput) (*sesv2.GetEmailIdentityPoliciesOutput, error) {
	var output sesv2.GetEmailIdentityPoliciesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetEmailIdentityPolicies", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetEmailIdentityPoliciesAsync(ctx workflow.Context, input *sesv2.GetEmailIdentityPoliciesInput) *SESV2GetEmailIdentityPoliciesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetEmailIdentityPolicies", input)
	return &SESV2GetEmailIdentityPoliciesFuture{Future: future}
}

func (a *SESV2Stub) GetEmailTemplate(ctx workflow.Context, input *sesv2.GetEmailTemplateInput) (*sesv2.GetEmailTemplateOutput, error) {
	var output sesv2.GetEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetEmailTemplateAsync(ctx workflow.Context, input *sesv2.GetEmailTemplateInput) *SESV2GetEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetEmailTemplate", input)
	return &SESV2GetEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) GetImportJob(ctx workflow.Context, input *sesv2.GetImportJobInput) (*sesv2.GetImportJobOutput, error) {
	var output sesv2.GetImportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetImportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetImportJobAsync(ctx workflow.Context, input *sesv2.GetImportJobInput) *SESV2GetImportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetImportJob", input)
	return &SESV2GetImportJobFuture{Future: future}
}

func (a *SESV2Stub) GetSuppressedDestination(ctx workflow.Context, input *sesv2.GetSuppressedDestinationInput) (*sesv2.GetSuppressedDestinationOutput, error) {
	var output sesv2.GetSuppressedDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.GetSuppressedDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) GetSuppressedDestinationAsync(ctx workflow.Context, input *sesv2.GetSuppressedDestinationInput) *SESV2GetSuppressedDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.GetSuppressedDestination", input)
	return &SESV2GetSuppressedDestinationFuture{Future: future}
}

func (a *SESV2Stub) ListConfigurationSets(ctx workflow.Context, input *sesv2.ListConfigurationSetsInput) (*sesv2.ListConfigurationSetsOutput, error) {
	var output sesv2.ListConfigurationSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListConfigurationSets", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListConfigurationSetsAsync(ctx workflow.Context, input *sesv2.ListConfigurationSetsInput) *SESV2ListConfigurationSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListConfigurationSets", input)
	return &SESV2ListConfigurationSetsFuture{Future: future}
}

func (a *SESV2Stub) ListCustomVerificationEmailTemplates(ctx workflow.Context, input *sesv2.ListCustomVerificationEmailTemplatesInput) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error) {
	var output sesv2.ListCustomVerificationEmailTemplatesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListCustomVerificationEmailTemplates", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListCustomVerificationEmailTemplatesAsync(ctx workflow.Context, input *sesv2.ListCustomVerificationEmailTemplatesInput) *SESV2ListCustomVerificationEmailTemplatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListCustomVerificationEmailTemplates", input)
	return &SESV2ListCustomVerificationEmailTemplatesFuture{Future: future}
}

func (a *SESV2Stub) ListDedicatedIpPools(ctx workflow.Context, input *sesv2.ListDedicatedIpPoolsInput) (*sesv2.ListDedicatedIpPoolsOutput, error) {
	var output sesv2.ListDedicatedIpPoolsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListDedicatedIpPools", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListDedicatedIpPoolsAsync(ctx workflow.Context, input *sesv2.ListDedicatedIpPoolsInput) *SESV2ListDedicatedIpPoolsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListDedicatedIpPools", input)
	return &SESV2ListDedicatedIpPoolsFuture{Future: future}
}

func (a *SESV2Stub) ListDeliverabilityTestReports(ctx workflow.Context, input *sesv2.ListDeliverabilityTestReportsInput) (*sesv2.ListDeliverabilityTestReportsOutput, error) {
	var output sesv2.ListDeliverabilityTestReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListDeliverabilityTestReports", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *sesv2.ListDeliverabilityTestReportsInput) *SESV2ListDeliverabilityTestReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListDeliverabilityTestReports", input)
	return &SESV2ListDeliverabilityTestReportsFuture{Future: future}
}

func (a *SESV2Stub) ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *sesv2.ListDomainDeliverabilityCampaignsInput) (*sesv2.ListDomainDeliverabilityCampaignsOutput, error) {
	var output sesv2.ListDomainDeliverabilityCampaignsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListDomainDeliverabilityCampaigns", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *sesv2.ListDomainDeliverabilityCampaignsInput) *SESV2ListDomainDeliverabilityCampaignsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListDomainDeliverabilityCampaigns", input)
	return &SESV2ListDomainDeliverabilityCampaignsFuture{Future: future}
}

func (a *SESV2Stub) ListEmailIdentities(ctx workflow.Context, input *sesv2.ListEmailIdentitiesInput) (*sesv2.ListEmailIdentitiesOutput, error) {
	var output sesv2.ListEmailIdentitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListEmailIdentities", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListEmailIdentitiesAsync(ctx workflow.Context, input *sesv2.ListEmailIdentitiesInput) *SESV2ListEmailIdentitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListEmailIdentities", input)
	return &SESV2ListEmailIdentitiesFuture{Future: future}
}

func (a *SESV2Stub) ListEmailTemplates(ctx workflow.Context, input *sesv2.ListEmailTemplatesInput) (*sesv2.ListEmailTemplatesOutput, error) {
	var output sesv2.ListEmailTemplatesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListEmailTemplates", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListEmailTemplatesAsync(ctx workflow.Context, input *sesv2.ListEmailTemplatesInput) *SESV2ListEmailTemplatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListEmailTemplates", input)
	return &SESV2ListEmailTemplatesFuture{Future: future}
}

func (a *SESV2Stub) ListImportJobs(ctx workflow.Context, input *sesv2.ListImportJobsInput) (*sesv2.ListImportJobsOutput, error) {
	var output sesv2.ListImportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListImportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListImportJobsAsync(ctx workflow.Context, input *sesv2.ListImportJobsInput) *SESV2ListImportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListImportJobs", input)
	return &SESV2ListImportJobsFuture{Future: future}
}

func (a *SESV2Stub) ListSuppressedDestinations(ctx workflow.Context, input *sesv2.ListSuppressedDestinationsInput) (*sesv2.ListSuppressedDestinationsOutput, error) {
	var output sesv2.ListSuppressedDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListSuppressedDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListSuppressedDestinationsAsync(ctx workflow.Context, input *sesv2.ListSuppressedDestinationsInput) *SESV2ListSuppressedDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListSuppressedDestinations", input)
	return &SESV2ListSuppressedDestinationsFuture{Future: future}
}

func (a *SESV2Stub) ListTagsForResource(ctx workflow.Context, input *sesv2.ListTagsForResourceInput) (*sesv2.ListTagsForResourceOutput, error) {
	var output sesv2.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) ListTagsForResourceAsync(ctx workflow.Context, input *sesv2.ListTagsForResourceInput) *SESV2ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.ListTagsForResource", input)
	return &SESV2ListTagsForResourceFuture{Future: future}
}

func (a *SESV2Stub) PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *sesv2.PutAccountDedicatedIpWarmupAttributesInput) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output sesv2.PutAccountDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *sesv2.PutAccountDedicatedIpWarmupAttributesInput) *SESV2PutAccountDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountDedicatedIpWarmupAttributes", input)
	return &SESV2PutAccountDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutAccountDetails(ctx workflow.Context, input *sesv2.PutAccountDetailsInput) (*sesv2.PutAccountDetailsOutput, error) {
	var output sesv2.PutAccountDetailsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountDetails", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutAccountDetailsAsync(ctx workflow.Context, input *sesv2.PutAccountDetailsInput) *SESV2PutAccountDetailsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountDetails", input)
	return &SESV2PutAccountDetailsFuture{Future: future}
}

func (a *SESV2Stub) PutAccountSendingAttributes(ctx workflow.Context, input *sesv2.PutAccountSendingAttributesInput) (*sesv2.PutAccountSendingAttributesOutput, error) {
	var output sesv2.PutAccountSendingAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountSendingAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutAccountSendingAttributesAsync(ctx workflow.Context, input *sesv2.PutAccountSendingAttributesInput) *SESV2PutAccountSendingAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountSendingAttributes", input)
	return &SESV2PutAccountSendingAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutAccountSuppressionAttributes(ctx workflow.Context, input *sesv2.PutAccountSuppressionAttributesInput) (*sesv2.PutAccountSuppressionAttributesOutput, error) {
	var output sesv2.PutAccountSuppressionAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountSuppressionAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutAccountSuppressionAttributesAsync(ctx workflow.Context, input *sesv2.PutAccountSuppressionAttributesInput) *SESV2PutAccountSuppressionAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutAccountSuppressionAttributes", input)
	return &SESV2PutAccountSuppressionAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetDeliveryOptionsInput) (*sesv2.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output sesv2.PutConfigurationSetDeliveryOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetDeliveryOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetDeliveryOptionsInput) *SESV2PutConfigurationSetDeliveryOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetDeliveryOptions", input)
	return &SESV2PutConfigurationSetDeliveryOptionsFuture{Future: future}
}

func (a *SESV2Stub) PutConfigurationSetReputationOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetReputationOptionsInput) (*sesv2.PutConfigurationSetReputationOptionsOutput, error) {
	var output sesv2.PutConfigurationSetReputationOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetReputationOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetReputationOptionsInput) *SESV2PutConfigurationSetReputationOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetReputationOptions", input)
	return &SESV2PutConfigurationSetReputationOptionsFuture{Future: future}
}

func (a *SESV2Stub) PutConfigurationSetSendingOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetSendingOptionsInput) (*sesv2.PutConfigurationSetSendingOptionsOutput, error) {
	var output sesv2.PutConfigurationSetSendingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetSendingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetSendingOptionsInput) *SESV2PutConfigurationSetSendingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetSendingOptions", input)
	return &SESV2PutConfigurationSetSendingOptionsFuture{Future: future}
}

func (a *SESV2Stub) PutConfigurationSetSuppressionOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetSuppressionOptionsInput) (*sesv2.PutConfigurationSetSuppressionOptionsOutput, error) {
	var output sesv2.PutConfigurationSetSuppressionOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetSuppressionOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutConfigurationSetSuppressionOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetSuppressionOptionsInput) *SESV2PutConfigurationSetSuppressionOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetSuppressionOptions", input)
	return &SESV2PutConfigurationSetSuppressionOptionsFuture{Future: future}
}

func (a *SESV2Stub) PutConfigurationSetTrackingOptions(ctx workflow.Context, input *sesv2.PutConfigurationSetTrackingOptionsInput) (*sesv2.PutConfigurationSetTrackingOptionsOutput, error) {
	var output sesv2.PutConfigurationSetTrackingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetTrackingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *sesv2.PutConfigurationSetTrackingOptionsInput) *SESV2PutConfigurationSetTrackingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutConfigurationSetTrackingOptions", input)
	return &SESV2PutConfigurationSetTrackingOptionsFuture{Future: future}
}

func (a *SESV2Stub) PutDedicatedIpInPool(ctx workflow.Context, input *sesv2.PutDedicatedIpInPoolInput) (*sesv2.PutDedicatedIpInPoolOutput, error) {
	var output sesv2.PutDedicatedIpInPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutDedicatedIpInPool", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutDedicatedIpInPoolAsync(ctx workflow.Context, input *sesv2.PutDedicatedIpInPoolInput) *SESV2PutDedicatedIpInPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutDedicatedIpInPool", input)
	return &SESV2PutDedicatedIpInPoolFuture{Future: future}
}

func (a *SESV2Stub) PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *sesv2.PutDedicatedIpWarmupAttributesInput) (*sesv2.PutDedicatedIpWarmupAttributesOutput, error) {
	var output sesv2.PutDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *sesv2.PutDedicatedIpWarmupAttributesInput) *SESV2PutDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutDedicatedIpWarmupAttributes", input)
	return &SESV2PutDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutDeliverabilityDashboardOption(ctx workflow.Context, input *sesv2.PutDeliverabilityDashboardOptionInput) (*sesv2.PutDeliverabilityDashboardOptionOutput, error) {
	var output sesv2.PutDeliverabilityDashboardOptionOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutDeliverabilityDashboardOption", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *sesv2.PutDeliverabilityDashboardOptionInput) *SESV2PutDeliverabilityDashboardOptionFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutDeliverabilityDashboardOption", input)
	return &SESV2PutDeliverabilityDashboardOptionFuture{Future: future}
}

func (a *SESV2Stub) PutEmailIdentityDkimAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimAttributesInput) (*sesv2.PutEmailIdentityDkimAttributesOutput, error) {
	var output sesv2.PutEmailIdentityDkimAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityDkimAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimAttributesInput) *SESV2PutEmailIdentityDkimAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityDkimAttributes", input)
	return &SESV2PutEmailIdentityDkimAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutEmailIdentityDkimSigningAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimSigningAttributesInput) (*sesv2.PutEmailIdentityDkimSigningAttributesOutput, error) {
	var output sesv2.PutEmailIdentityDkimSigningAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityDkimSigningAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutEmailIdentityDkimSigningAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityDkimSigningAttributesInput) *SESV2PutEmailIdentityDkimSigningAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityDkimSigningAttributes", input)
	return &SESV2PutEmailIdentityDkimSigningAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityFeedbackAttributesInput) (*sesv2.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output sesv2.PutEmailIdentityFeedbackAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityFeedbackAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityFeedbackAttributesInput) *SESV2PutEmailIdentityFeedbackAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityFeedbackAttributes", input)
	return &SESV2PutEmailIdentityFeedbackAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *sesv2.PutEmailIdentityMailFromAttributesInput) (*sesv2.PutEmailIdentityMailFromAttributesOutput, error) {
	var output sesv2.PutEmailIdentityMailFromAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityMailFromAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *sesv2.PutEmailIdentityMailFromAttributesInput) *SESV2PutEmailIdentityMailFromAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutEmailIdentityMailFromAttributes", input)
	return &SESV2PutEmailIdentityMailFromAttributesFuture{Future: future}
}

func (a *SESV2Stub) PutSuppressedDestination(ctx workflow.Context, input *sesv2.PutSuppressedDestinationInput) (*sesv2.PutSuppressedDestinationOutput, error) {
	var output sesv2.PutSuppressedDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.PutSuppressedDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) PutSuppressedDestinationAsync(ctx workflow.Context, input *sesv2.PutSuppressedDestinationInput) *SESV2PutSuppressedDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.PutSuppressedDestination", input)
	return &SESV2PutSuppressedDestinationFuture{Future: future}
}

func (a *SESV2Stub) SendBulkEmail(ctx workflow.Context, input *sesv2.SendBulkEmailInput) (*sesv2.SendBulkEmailOutput, error) {
	var output sesv2.SendBulkEmailOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.SendBulkEmail", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) SendBulkEmailAsync(ctx workflow.Context, input *sesv2.SendBulkEmailInput) *SESV2SendBulkEmailFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.SendBulkEmail", input)
	return &SESV2SendBulkEmailFuture{Future: future}
}

func (a *SESV2Stub) SendCustomVerificationEmail(ctx workflow.Context, input *sesv2.SendCustomVerificationEmailInput) (*sesv2.SendCustomVerificationEmailOutput, error) {
	var output sesv2.SendCustomVerificationEmailOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.SendCustomVerificationEmail", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) SendCustomVerificationEmailAsync(ctx workflow.Context, input *sesv2.SendCustomVerificationEmailInput) *SESV2SendCustomVerificationEmailFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.SendCustomVerificationEmail", input)
	return &SESV2SendCustomVerificationEmailFuture{Future: future}
}

func (a *SESV2Stub) SendEmail(ctx workflow.Context, input *sesv2.SendEmailInput) (*sesv2.SendEmailOutput, error) {
	var output sesv2.SendEmailOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.SendEmail", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) SendEmailAsync(ctx workflow.Context, input *sesv2.SendEmailInput) *SESV2SendEmailFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.SendEmail", input)
	return &SESV2SendEmailFuture{Future: future}
}

func (a *SESV2Stub) TagResource(ctx workflow.Context, input *sesv2.TagResourceInput) (*sesv2.TagResourceOutput, error) {
	var output sesv2.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) TagResourceAsync(ctx workflow.Context, input *sesv2.TagResourceInput) *SESV2TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.TagResource", input)
	return &SESV2TagResourceFuture{Future: future}
}

func (a *SESV2Stub) TestRenderEmailTemplate(ctx workflow.Context, input *sesv2.TestRenderEmailTemplateInput) (*sesv2.TestRenderEmailTemplateOutput, error) {
	var output sesv2.TestRenderEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.TestRenderEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) TestRenderEmailTemplateAsync(ctx workflow.Context, input *sesv2.TestRenderEmailTemplateInput) *SESV2TestRenderEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.TestRenderEmailTemplate", input)
	return &SESV2TestRenderEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) UntagResource(ctx workflow.Context, input *sesv2.UntagResourceInput) (*sesv2.UntagResourceOutput, error) {
	var output sesv2.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) UntagResourceAsync(ctx workflow.Context, input *sesv2.UntagResourceInput) *SESV2UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.UntagResource", input)
	return &SESV2UntagResourceFuture{Future: future}
}

func (a *SESV2Stub) UpdateConfigurationSetEventDestination(ctx workflow.Context, input *sesv2.UpdateConfigurationSetEventDestinationInput) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error) {
	var output sesv2.UpdateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *sesv2.UpdateConfigurationSetEventDestinationInput) *SESV2UpdateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateConfigurationSetEventDestination", input)
	return &SESV2UpdateConfigurationSetEventDestinationFuture{Future: future}
}

func (a *SESV2Stub) UpdateCustomVerificationEmailTemplate(ctx workflow.Context, input *sesv2.UpdateCustomVerificationEmailTemplateInput) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error) {
	var output sesv2.UpdateCustomVerificationEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateCustomVerificationEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) UpdateCustomVerificationEmailTemplateAsync(ctx workflow.Context, input *sesv2.UpdateCustomVerificationEmailTemplateInput) *SESV2UpdateCustomVerificationEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateCustomVerificationEmailTemplate", input)
	return &SESV2UpdateCustomVerificationEmailTemplateFuture{Future: future}
}

func (a *SESV2Stub) UpdateEmailIdentityPolicy(ctx workflow.Context, input *sesv2.UpdateEmailIdentityPolicyInput) (*sesv2.UpdateEmailIdentityPolicyOutput, error) {
	var output sesv2.UpdateEmailIdentityPolicyOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateEmailIdentityPolicy", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) UpdateEmailIdentityPolicyAsync(ctx workflow.Context, input *sesv2.UpdateEmailIdentityPolicyInput) *SESV2UpdateEmailIdentityPolicyFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateEmailIdentityPolicy", input)
	return &SESV2UpdateEmailIdentityPolicyFuture{Future: future}
}

func (a *SESV2Stub) UpdateEmailTemplate(ctx workflow.Context, input *sesv2.UpdateEmailTemplateInput) (*sesv2.UpdateEmailTemplateOutput, error) {
	var output sesv2.UpdateEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *SESV2Stub) UpdateEmailTemplateAsync(ctx workflow.Context, input *sesv2.UpdateEmailTemplateInput) *SESV2UpdateEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.sesv2.UpdateEmailTemplate", input)
	return &SESV2UpdateEmailTemplateFuture{Future: future}
}
