// Generated by https://github.com/temporalio/temporal-aws-sdk/cmd/temporal-aws-sdk-gen/main.go
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/applicationdiscoveryservice"
	"go.temporal.io/sdk/workflow"
)

type ApplicationDiscoveryServiceClient interface {
	AssociateConfigurationItemsToApplication(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error)
	AssociateConfigurationItemsToApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) *ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationResult

	BatchDeleteImportData(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error)
	BatchDeleteImportDataAsync(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) *ApplicationdiscoveryserviceBatchDeleteImportDataResult

	CreateApplication(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) (*applicationdiscoveryservice.CreateApplicationOutput, error)
	CreateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) *ApplicationdiscoveryserviceCreateApplicationResult

	CreateTags(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) (*applicationdiscoveryservice.CreateTagsOutput, error)
	CreateTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) *ApplicationdiscoveryserviceCreateTagsResult

	DeleteApplications(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) (*applicationdiscoveryservice.DeleteApplicationsOutput, error)
	DeleteApplicationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) *ApplicationdiscoveryserviceDeleteApplicationsResult

	DeleteTags(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) (*applicationdiscoveryservice.DeleteTagsOutput, error)
	DeleteTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) *ApplicationdiscoveryserviceDeleteTagsResult

	DescribeAgents(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) (*applicationdiscoveryservice.DescribeAgentsOutput, error)
	DescribeAgentsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) *ApplicationdiscoveryserviceDescribeAgentsResult

	DescribeConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error)
	DescribeConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) *ApplicationdiscoveryserviceDescribeConfigurationsResult

	DescribeContinuousExports(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error)
	DescribeContinuousExportsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) *ApplicationdiscoveryserviceDescribeContinuousExportsResult

	DescribeExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error)
	DescribeExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) *ApplicationdiscoveryserviceDescribeExportConfigurationsResult

	DescribeExportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) (*applicationdiscoveryservice.DescribeExportTasksOutput, error)
	DescribeExportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) *ApplicationdiscoveryserviceDescribeExportTasksResult

	DescribeImportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) (*applicationdiscoveryservice.DescribeImportTasksOutput, error)
	DescribeImportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) *ApplicationdiscoveryserviceDescribeImportTasksResult

	DescribeTags(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) (*applicationdiscoveryservice.DescribeTagsOutput, error)
	DescribeTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) *ApplicationdiscoveryserviceDescribeTagsResult

	DisassociateConfigurationItemsFromApplication(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error)
	DisassociateConfigurationItemsFromApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) *ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationResult

	ExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) (*applicationdiscoveryservice.ExportConfigurationsOutput, error)
	ExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) *ApplicationdiscoveryserviceExportConfigurationsResult

	GetDiscoverySummary(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error)
	GetDiscoverySummaryAsync(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) *ApplicationdiscoveryserviceGetDiscoverySummaryResult

	ListConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) (*applicationdiscoveryservice.ListConfigurationsOutput, error)
	ListConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) *ApplicationdiscoveryserviceListConfigurationsResult

	ListServerNeighbors(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) (*applicationdiscoveryservice.ListServerNeighborsOutput, error)
	ListServerNeighborsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) *ApplicationdiscoveryserviceListServerNeighborsResult

	StartContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) (*applicationdiscoveryservice.StartContinuousExportOutput, error)
	StartContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) *ApplicationdiscoveryserviceStartContinuousExportResult

	StartDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error)
	StartDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStartDataCollectionByAgentIdsResult

	StartExportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) (*applicationdiscoveryservice.StartExportTaskOutput, error)
	StartExportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) *ApplicationdiscoveryserviceStartExportTaskResult

	StartImportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) (*applicationdiscoveryservice.StartImportTaskOutput, error)
	StartImportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) *ApplicationdiscoveryserviceStartImportTaskResult

	StopContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) (*applicationdiscoveryservice.StopContinuousExportOutput, error)
	StopContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) *ApplicationdiscoveryserviceStopContinuousExportResult

	StopDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error)
	StopDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStopDataCollectionByAgentIdsResult

	UpdateApplication(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) (*applicationdiscoveryservice.UpdateApplicationOutput, error)
	UpdateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) *ApplicationdiscoveryserviceUpdateApplicationResult
}

type ApplicationDiscoveryServiceStub struct{}

func NewApplicationDiscoveryServiceStub() ApplicationDiscoveryServiceClient {
	return &ApplicationDiscoveryServiceStub{}
}

type ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	var output applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceBatchDeleteImportDataResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceBatchDeleteImportDataResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	var output applicationdiscoveryservice.BatchDeleteImportDataOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceCreateApplicationResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceCreateApplicationResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	var output applicationdiscoveryservice.CreateApplicationOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceCreateTagsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceCreateTagsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	var output applicationdiscoveryservice.CreateTagsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDeleteApplicationsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDeleteApplicationsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	var output applicationdiscoveryservice.DeleteApplicationsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDeleteTagsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDeleteTagsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	var output applicationdiscoveryservice.DeleteTagsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeAgentsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeAgentsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	var output applicationdiscoveryservice.DescribeAgentsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeConfigurationsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeConfigurationsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeConfigurationsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeContinuousExportsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeContinuousExportsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	var output applicationdiscoveryservice.DescribeContinuousExportsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeExportConfigurationsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeExportConfigurationsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeExportConfigurationsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeExportTasksResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeExportTasksResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeExportTasksOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeImportTasksResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeImportTasksResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeImportTasksOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeTagsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeTagsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	var output applicationdiscoveryservice.DescribeTagsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	var output applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceExportConfigurationsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceExportConfigurationsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ExportConfigurationsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceGetDiscoverySummaryResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceGetDiscoverySummaryResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	var output applicationdiscoveryservice.GetDiscoverySummaryOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceListConfigurationsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceListConfigurationsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ListConfigurationsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceListServerNeighborsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceListServerNeighborsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	var output applicationdiscoveryservice.ListServerNeighborsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartContinuousExportResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceStartContinuousExportResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StartContinuousExportOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartDataCollectionByAgentIdsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceStartDataCollectionByAgentIdsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartExportTaskResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceStartExportTaskResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	var output applicationdiscoveryservice.StartExportTaskOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartImportTaskResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceStartImportTaskResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	var output applicationdiscoveryservice.StartImportTaskOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStopContinuousExportResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceStopContinuousExportResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StopContinuousExportOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStopDataCollectionByAgentIdsResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceStopDataCollectionByAgentIdsResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceUpdateApplicationResult struct {
	Result workflow.Future
}

func (r *ApplicationdiscoveryserviceUpdateApplicationResult) Get(ctx workflow.Context) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	var output applicationdiscoveryservice.UpdateApplicationOutput
	err := r.Result.Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) AssociateConfigurationItemsToApplication(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	var output applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.AssociateConfigurationItemsToApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) AssociateConfigurationItemsToApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) *ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.AssociateConfigurationItemsToApplication", input)
	return &ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) BatchDeleteImportData(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	var output applicationdiscoveryservice.BatchDeleteImportDataOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.BatchDeleteImportData", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) BatchDeleteImportDataAsync(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) *ApplicationdiscoveryserviceBatchDeleteImportDataResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.BatchDeleteImportData", input)
	return &ApplicationdiscoveryserviceBatchDeleteImportDataResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) CreateApplication(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	var output applicationdiscoveryservice.CreateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.CreateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) CreateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) *ApplicationdiscoveryserviceCreateApplicationResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.CreateApplication", input)
	return &ApplicationdiscoveryserviceCreateApplicationResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) CreateTags(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	var output applicationdiscoveryservice.CreateTagsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.CreateTags", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) CreateTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) *ApplicationdiscoveryserviceCreateTagsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.CreateTags", input)
	return &ApplicationdiscoveryserviceCreateTagsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DeleteApplications(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	var output applicationdiscoveryservice.DeleteApplicationsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DeleteApplications", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DeleteApplicationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) *ApplicationdiscoveryserviceDeleteApplicationsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DeleteApplications", input)
	return &ApplicationdiscoveryserviceDeleteApplicationsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DeleteTags(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	var output applicationdiscoveryservice.DeleteTagsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DeleteTags", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DeleteTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) *ApplicationdiscoveryserviceDeleteTagsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DeleteTags", input)
	return &ApplicationdiscoveryserviceDeleteTagsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeAgents(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	var output applicationdiscoveryservice.DescribeAgentsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeAgents", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeAgentsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) *ApplicationdiscoveryserviceDescribeAgentsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeAgents", input)
	return &ApplicationdiscoveryserviceDescribeAgentsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) *ApplicationdiscoveryserviceDescribeConfigurationsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeConfigurations", input)
	return &ApplicationdiscoveryserviceDescribeConfigurationsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeContinuousExports(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	var output applicationdiscoveryservice.DescribeContinuousExportsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeContinuousExports", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeContinuousExportsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) *ApplicationdiscoveryserviceDescribeContinuousExportsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeContinuousExports", input)
	return &ApplicationdiscoveryserviceDescribeContinuousExportsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeExportConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeExportConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) *ApplicationdiscoveryserviceDescribeExportConfigurationsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeExportConfigurations", input)
	return &ApplicationdiscoveryserviceDescribeExportConfigurationsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeExportTasksOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeExportTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) *ApplicationdiscoveryserviceDescribeExportTasksResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeExportTasks", input)
	return &ApplicationdiscoveryserviceDescribeExportTasksResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeImportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeImportTasksOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeImportTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeImportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) *ApplicationdiscoveryserviceDescribeImportTasksResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeImportTasks", input)
	return &ApplicationdiscoveryserviceDescribeImportTasksResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeTags(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	var output applicationdiscoveryservice.DescribeTagsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeTags", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) *ApplicationdiscoveryserviceDescribeTagsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DescribeTags", input)
	return &ApplicationdiscoveryserviceDescribeTagsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) DisassociateConfigurationItemsFromApplication(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	var output applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DisassociateConfigurationItemsFromApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DisassociateConfigurationItemsFromApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) *ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.DisassociateConfigurationItemsFromApplication", input)
	return &ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) ExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ExportConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.ExportConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) ExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) *ApplicationdiscoveryserviceExportConfigurationsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.ExportConfigurations", input)
	return &ApplicationdiscoveryserviceExportConfigurationsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) GetDiscoverySummary(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	var output applicationdiscoveryservice.GetDiscoverySummaryOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.GetDiscoverySummary", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) GetDiscoverySummaryAsync(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) *ApplicationdiscoveryserviceGetDiscoverySummaryResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.GetDiscoverySummary", input)
	return &ApplicationdiscoveryserviceGetDiscoverySummaryResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) ListConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ListConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.ListConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) ListConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) *ApplicationdiscoveryserviceListConfigurationsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.ListConfigurations", input)
	return &ApplicationdiscoveryserviceListConfigurationsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) ListServerNeighbors(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	var output applicationdiscoveryservice.ListServerNeighborsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.ListServerNeighbors", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) ListServerNeighborsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) *ApplicationdiscoveryserviceListServerNeighborsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.ListServerNeighbors", input)
	return &ApplicationdiscoveryserviceListServerNeighborsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) StartContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StartContinuousExportOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartContinuousExport", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) *ApplicationdiscoveryserviceStartContinuousExportResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartContinuousExport", input)
	return &ApplicationdiscoveryserviceStartContinuousExportResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) StartDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartDataCollectionByAgentIds", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStartDataCollectionByAgentIdsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartDataCollectionByAgentIds", input)
	return &ApplicationdiscoveryserviceStartDataCollectionByAgentIdsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) StartExportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	var output applicationdiscoveryservice.StartExportTaskOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartExportTask", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartExportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) *ApplicationdiscoveryserviceStartExportTaskResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartExportTask", input)
	return &ApplicationdiscoveryserviceStartExportTaskResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) StartImportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	var output applicationdiscoveryservice.StartImportTaskOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartImportTask", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartImportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) *ApplicationdiscoveryserviceStartImportTaskResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StartImportTask", input)
	return &ApplicationdiscoveryserviceStartImportTaskResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) StopContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StopContinuousExportOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StopContinuousExport", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StopContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) *ApplicationdiscoveryserviceStopContinuousExportResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StopContinuousExport", input)
	return &ApplicationdiscoveryserviceStopContinuousExportResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) StopDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StopDataCollectionByAgentIds", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StopDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStopDataCollectionByAgentIdsResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.StopDataCollectionByAgentIds", input)
	return &ApplicationdiscoveryserviceStopDataCollectionByAgentIdsResult{Result: future}
}

func (a *ApplicationDiscoveryServiceStub) UpdateApplication(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	var output applicationdiscoveryservice.UpdateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.UpdateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) UpdateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) *ApplicationdiscoveryserviceUpdateApplicationResult {
	future := workflow.ExecuteActivity(ctx, "ApplicationDiscoveryService.UpdateApplication", input)
	return &ApplicationdiscoveryserviceUpdateApplicationResult{Result: future}
}
