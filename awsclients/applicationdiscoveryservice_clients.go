// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/applicationdiscoveryservice"
	"go.temporal.io/sdk/workflow"
)

type ApplicationDiscoveryServiceClient interface {
	AssociateConfigurationItemsToApplication(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error)
	AssociateConfigurationItemsToApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) *ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationFuture

	BatchDeleteImportData(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error)
	BatchDeleteImportDataAsync(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) *ApplicationdiscoveryserviceBatchDeleteImportDataFuture

	CreateApplication(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) (*applicationdiscoveryservice.CreateApplicationOutput, error)
	CreateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) *ApplicationdiscoveryserviceCreateApplicationFuture

	CreateTags(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) (*applicationdiscoveryservice.CreateTagsOutput, error)
	CreateTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) *ApplicationdiscoveryserviceCreateTagsFuture

	DeleteApplications(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) (*applicationdiscoveryservice.DeleteApplicationsOutput, error)
	DeleteApplicationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) *ApplicationdiscoveryserviceDeleteApplicationsFuture

	DeleteTags(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) (*applicationdiscoveryservice.DeleteTagsOutput, error)
	DeleteTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) *ApplicationdiscoveryserviceDeleteTagsFuture

	DescribeAgents(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) (*applicationdiscoveryservice.DescribeAgentsOutput, error)
	DescribeAgentsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) *ApplicationdiscoveryserviceDescribeAgentsFuture

	DescribeConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error)
	DescribeConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) *ApplicationdiscoveryserviceDescribeConfigurationsFuture

	DescribeContinuousExports(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error)
	DescribeContinuousExportsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) *ApplicationdiscoveryserviceDescribeContinuousExportsFuture

	DescribeExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error)
	DescribeExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) *ApplicationdiscoveryserviceDescribeExportConfigurationsFuture

	DescribeExportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) (*applicationdiscoveryservice.DescribeExportTasksOutput, error)
	DescribeExportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) *ApplicationdiscoveryserviceDescribeExportTasksFuture

	DescribeImportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) (*applicationdiscoveryservice.DescribeImportTasksOutput, error)
	DescribeImportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) *ApplicationdiscoveryserviceDescribeImportTasksFuture

	DescribeTags(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) (*applicationdiscoveryservice.DescribeTagsOutput, error)
	DescribeTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) *ApplicationdiscoveryserviceDescribeTagsFuture

	DisassociateConfigurationItemsFromApplication(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error)
	DisassociateConfigurationItemsFromApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) *ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationFuture

	ExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) (*applicationdiscoveryservice.ExportConfigurationsOutput, error)
	ExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) *ApplicationdiscoveryserviceExportConfigurationsFuture

	GetDiscoverySummary(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error)
	GetDiscoverySummaryAsync(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) *ApplicationdiscoveryserviceGetDiscoverySummaryFuture

	ListConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) (*applicationdiscoveryservice.ListConfigurationsOutput, error)
	ListConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) *ApplicationdiscoveryserviceListConfigurationsFuture

	ListServerNeighbors(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) (*applicationdiscoveryservice.ListServerNeighborsOutput, error)
	ListServerNeighborsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) *ApplicationdiscoveryserviceListServerNeighborsFuture

	StartContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) (*applicationdiscoveryservice.StartContinuousExportOutput, error)
	StartContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) *ApplicationdiscoveryserviceStartContinuousExportFuture

	StartDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error)
	StartDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStartDataCollectionByAgentIdsFuture

	StartExportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) (*applicationdiscoveryservice.StartExportTaskOutput, error)
	StartExportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) *ApplicationdiscoveryserviceStartExportTaskFuture

	StartImportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) (*applicationdiscoveryservice.StartImportTaskOutput, error)
	StartImportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) *ApplicationdiscoveryserviceStartImportTaskFuture

	StopContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) (*applicationdiscoveryservice.StopContinuousExportOutput, error)
	StopContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) *ApplicationdiscoveryserviceStopContinuousExportFuture

	StopDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error)
	StopDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStopDataCollectionByAgentIdsFuture

	UpdateApplication(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) (*applicationdiscoveryservice.UpdateApplicationOutput, error)
	UpdateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) *ApplicationdiscoveryserviceUpdateApplicationFuture
}

type ApplicationDiscoveryServiceStub struct{}

func NewApplicationDiscoveryServiceStub() ApplicationDiscoveryServiceClient {
	return &ApplicationDiscoveryServiceStub{}
}

type ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	var output applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceBatchDeleteImportDataFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceBatchDeleteImportDataFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	var output applicationdiscoveryservice.BatchDeleteImportDataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceCreateApplicationFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceCreateApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	var output applicationdiscoveryservice.CreateApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceCreateTagsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceCreateTagsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	var output applicationdiscoveryservice.CreateTagsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDeleteApplicationsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDeleteApplicationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	var output applicationdiscoveryservice.DeleteApplicationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDeleteTagsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDeleteTagsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	var output applicationdiscoveryservice.DeleteTagsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeAgentsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeAgentsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	var output applicationdiscoveryservice.DescribeAgentsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeConfigurationsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeContinuousExportsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeContinuousExportsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	var output applicationdiscoveryservice.DescribeContinuousExportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeExportConfigurationsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeExportConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeExportConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeExportTasksFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeExportTasksFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeExportTasksOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeImportTasksFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeImportTasksFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeImportTasksOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDescribeTagsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDescribeTagsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	var output applicationdiscoveryservice.DescribeTagsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	var output applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceExportConfigurationsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceExportConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ExportConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceGetDiscoverySummaryFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceGetDiscoverySummaryFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	var output applicationdiscoveryservice.GetDiscoverySummaryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceListConfigurationsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceListConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ListConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceListServerNeighborsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceListServerNeighborsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	var output applicationdiscoveryservice.ListServerNeighborsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartContinuousExportFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceStartContinuousExportFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StartContinuousExportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartDataCollectionByAgentIdsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceStartDataCollectionByAgentIdsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartExportTaskFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceStartExportTaskFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	var output applicationdiscoveryservice.StartExportTaskOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStartImportTaskFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceStartImportTaskFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	var output applicationdiscoveryservice.StartImportTaskOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStopContinuousExportFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceStopContinuousExportFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StopContinuousExportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceStopDataCollectionByAgentIdsFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceStopDataCollectionByAgentIdsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ApplicationdiscoveryserviceUpdateApplicationFuture struct {
	Future workflow.Future
}

func (r *ApplicationdiscoveryserviceUpdateApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	var output applicationdiscoveryservice.UpdateApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) AssociateConfigurationItemsToApplication(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	var output applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.AssociateConfigurationItemsToApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) AssociateConfigurationItemsToApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) *ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.AssociateConfigurationItemsToApplication", input)
	return &ApplicationdiscoveryserviceAssociateConfigurationItemsToApplicationFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) BatchDeleteImportData(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	var output applicationdiscoveryservice.BatchDeleteImportDataOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.BatchDeleteImportData", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) BatchDeleteImportDataAsync(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) *ApplicationdiscoveryserviceBatchDeleteImportDataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.BatchDeleteImportData", input)
	return &ApplicationdiscoveryserviceBatchDeleteImportDataFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) CreateApplication(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	var output applicationdiscoveryservice.CreateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.CreateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) CreateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) *ApplicationdiscoveryserviceCreateApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.CreateApplication", input)
	return &ApplicationdiscoveryserviceCreateApplicationFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) CreateTags(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	var output applicationdiscoveryservice.CreateTagsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.CreateTags", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) CreateTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) *ApplicationdiscoveryserviceCreateTagsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.CreateTags", input)
	return &ApplicationdiscoveryserviceCreateTagsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DeleteApplications(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	var output applicationdiscoveryservice.DeleteApplicationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DeleteApplications", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DeleteApplicationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) *ApplicationdiscoveryserviceDeleteApplicationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DeleteApplications", input)
	return &ApplicationdiscoveryserviceDeleteApplicationsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DeleteTags(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	var output applicationdiscoveryservice.DeleteTagsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DeleteTags", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DeleteTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) *ApplicationdiscoveryserviceDeleteTagsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DeleteTags", input)
	return &ApplicationdiscoveryserviceDeleteTagsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeAgents(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	var output applicationdiscoveryservice.DescribeAgentsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeAgents", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeAgentsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) *ApplicationdiscoveryserviceDescribeAgentsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeAgents", input)
	return &ApplicationdiscoveryserviceDescribeAgentsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) *ApplicationdiscoveryserviceDescribeConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeConfigurations", input)
	return &ApplicationdiscoveryserviceDescribeConfigurationsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeContinuousExports(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	var output applicationdiscoveryservice.DescribeContinuousExportsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeContinuousExports", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeContinuousExportsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) *ApplicationdiscoveryserviceDescribeContinuousExportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeContinuousExports", input)
	return &ApplicationdiscoveryserviceDescribeContinuousExportsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeExportConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeExportConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) *ApplicationdiscoveryserviceDescribeExportConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeExportConfigurations", input)
	return &ApplicationdiscoveryserviceDescribeExportConfigurationsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeExportTasksOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeExportTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeExportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) *ApplicationdiscoveryserviceDescribeExportTasksFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeExportTasks", input)
	return &ApplicationdiscoveryserviceDescribeExportTasksFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeImportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeImportTasksOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeImportTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeImportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) *ApplicationdiscoveryserviceDescribeImportTasksFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeImportTasks", input)
	return &ApplicationdiscoveryserviceDescribeImportTasksFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DescribeTags(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	var output applicationdiscoveryservice.DescribeTagsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeTags", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DescribeTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) *ApplicationdiscoveryserviceDescribeTagsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DescribeTags", input)
	return &ApplicationdiscoveryserviceDescribeTagsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) DisassociateConfigurationItemsFromApplication(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	var output applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DisassociateConfigurationItemsFromApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) DisassociateConfigurationItemsFromApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) *ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.DisassociateConfigurationItemsFromApplication", input)
	return &ApplicationdiscoveryserviceDisassociateConfigurationItemsFromApplicationFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) ExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ExportConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.ExportConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) ExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) *ApplicationdiscoveryserviceExportConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.ExportConfigurations", input)
	return &ApplicationdiscoveryserviceExportConfigurationsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) GetDiscoverySummary(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	var output applicationdiscoveryservice.GetDiscoverySummaryOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.GetDiscoverySummary", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) GetDiscoverySummaryAsync(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) *ApplicationdiscoveryserviceGetDiscoverySummaryFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.GetDiscoverySummary", input)
	return &ApplicationdiscoveryserviceGetDiscoverySummaryFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) ListConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ListConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.ListConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) ListConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) *ApplicationdiscoveryserviceListConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.ListConfigurations", input)
	return &ApplicationdiscoveryserviceListConfigurationsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) ListServerNeighbors(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	var output applicationdiscoveryservice.ListServerNeighborsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.ListServerNeighbors", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) ListServerNeighborsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) *ApplicationdiscoveryserviceListServerNeighborsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.ListServerNeighbors", input)
	return &ApplicationdiscoveryserviceListServerNeighborsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) StartContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StartContinuousExportOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartContinuousExport", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) *ApplicationdiscoveryserviceStartContinuousExportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartContinuousExport", input)
	return &ApplicationdiscoveryserviceStartContinuousExportFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) StartDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartDataCollectionByAgentIds", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStartDataCollectionByAgentIdsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartDataCollectionByAgentIds", input)
	return &ApplicationdiscoveryserviceStartDataCollectionByAgentIdsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) StartExportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	var output applicationdiscoveryservice.StartExportTaskOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartExportTask", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartExportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) *ApplicationdiscoveryserviceStartExportTaskFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartExportTask", input)
	return &ApplicationdiscoveryserviceStartExportTaskFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) StartImportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	var output applicationdiscoveryservice.StartImportTaskOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartImportTask", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StartImportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) *ApplicationdiscoveryserviceStartImportTaskFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StartImportTask", input)
	return &ApplicationdiscoveryserviceStartImportTaskFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) StopContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StopContinuousExportOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StopContinuousExport", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StopContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) *ApplicationdiscoveryserviceStopContinuousExportFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StopContinuousExport", input)
	return &ApplicationdiscoveryserviceStopContinuousExportFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) StopDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StopDataCollectionByAgentIds", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) StopDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) *ApplicationdiscoveryserviceStopDataCollectionByAgentIdsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.StopDataCollectionByAgentIds", input)
	return &ApplicationdiscoveryserviceStopDataCollectionByAgentIdsFuture{Future: future}
}

func (a *ApplicationDiscoveryServiceStub) UpdateApplication(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	var output applicationdiscoveryservice.UpdateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.UpdateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *ApplicationDiscoveryServiceStub) UpdateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) *ApplicationdiscoveryserviceUpdateApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws.applicationdiscoveryservice.UpdateApplication", input)
	return &ApplicationdiscoveryserviceUpdateApplicationFuture{Future: future}
}
