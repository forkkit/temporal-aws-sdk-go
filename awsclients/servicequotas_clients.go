// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/servicequotas"
	"go.temporal.io/sdk/workflow"
)

type ServiceQuotasClient interface {
	AssociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) (*servicequotas.AssociateServiceQuotaTemplateOutput, error)
	AssociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) *ServicequotasAssociateServiceQuotaTemplateFuture

	DeleteServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error)
	DeleteServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) *ServicequotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture

	DisassociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error)
	DisassociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) *ServicequotasDisassociateServiceQuotaTemplateFuture

	GetAWSDefaultServiceQuota(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error)
	GetAWSDefaultServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) *ServicequotasGetAWSDefaultServiceQuotaFuture

	GetAssociationForServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error)
	GetAssociationForServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) *ServicequotasGetAssociationForServiceQuotaTemplateFuture

	GetRequestedServiceQuotaChange(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error)
	GetRequestedServiceQuotaChangeAsync(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) *ServicequotasGetRequestedServiceQuotaChangeFuture

	GetServiceQuota(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) (*servicequotas.GetServiceQuotaOutput, error)
	GetServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) *ServicequotasGetServiceQuotaFuture

	GetServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error)
	GetServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) *ServicequotasGetServiceQuotaIncreaseRequestFromTemplateFuture

	ListAWSDefaultServiceQuotas(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error)
	ListAWSDefaultServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) *ServicequotasListAWSDefaultServiceQuotasFuture

	ListRequestedServiceQuotaChangeHistory(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error)
	ListRequestedServiceQuotaChangeHistoryAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) *ServicequotasListRequestedServiceQuotaChangeHistoryFuture

	ListRequestedServiceQuotaChangeHistoryByQuota(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error)
	ListRequestedServiceQuotaChangeHistoryByQuotaAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) *ServicequotasListRequestedServiceQuotaChangeHistoryByQuotaFuture

	ListServiceQuotaIncreaseRequestsInTemplate(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error)
	ListServiceQuotaIncreaseRequestsInTemplateAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) *ServicequotasListServiceQuotaIncreaseRequestsInTemplateFuture

	ListServiceQuotas(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) (*servicequotas.ListServiceQuotasOutput, error)
	ListServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) *ServicequotasListServiceQuotasFuture

	ListServices(ctx workflow.Context, input *servicequotas.ListServicesInput) (*servicequotas.ListServicesOutput, error)
	ListServicesAsync(ctx workflow.Context, input *servicequotas.ListServicesInput) *ServicequotasListServicesFuture

	PutServiceQuotaIncreaseRequestIntoTemplate(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error)
	PutServiceQuotaIncreaseRequestIntoTemplateAsync(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) *ServicequotasPutServiceQuotaIncreaseRequestIntoTemplateFuture

	RequestServiceQuotaIncrease(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) (*servicequotas.RequestServiceQuotaIncreaseOutput, error)
	RequestServiceQuotaIncreaseAsync(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) *ServicequotasRequestServiceQuotaIncreaseFuture
}

type ServiceQuotasStub struct{}

func NewServiceQuotasStub() ServiceQuotasClient {
	return &ServiceQuotasStub{}
}

type ServicequotasAssociateServiceQuotaTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasAssociateServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.AssociateServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture) Get(ctx workflow.Context) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasDisassociateServiceQuotaTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasDisassociateServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.DisassociateServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasGetAWSDefaultServiceQuotaFuture struct {
	Future workflow.Future
}

func (r *ServicequotasGetAWSDefaultServiceQuotaFuture) Get(ctx workflow.Context) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	var output servicequotas.GetAWSDefaultServiceQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasGetAssociationForServiceQuotaTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasGetAssociationForServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	var output servicequotas.GetAssociationForServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasGetRequestedServiceQuotaChangeFuture struct {
	Future workflow.Future
}

func (r *ServicequotasGetRequestedServiceQuotaChangeFuture) Get(ctx workflow.Context) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	var output servicequotas.GetRequestedServiceQuotaChangeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasGetServiceQuotaFuture struct {
	Future workflow.Future
}

func (r *ServicequotasGetServiceQuotaFuture) Get(ctx workflow.Context) (*servicequotas.GetServiceQuotaOutput, error) {
	var output servicequotas.GetServiceQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasGetServiceQuotaIncreaseRequestFromTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasGetServiceQuotaIncreaseRequestFromTemplateFuture) Get(ctx workflow.Context) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasListAWSDefaultServiceQuotasFuture struct {
	Future workflow.Future
}

func (r *ServicequotasListAWSDefaultServiceQuotasFuture) Get(ctx workflow.Context) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	var output servicequotas.ListAWSDefaultServiceQuotasOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasListRequestedServiceQuotaChangeHistoryFuture struct {
	Future workflow.Future
}

func (r *ServicequotasListRequestedServiceQuotaChangeHistoryFuture) Get(ctx workflow.Context) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasListRequestedServiceQuotaChangeHistoryByQuotaFuture struct {
	Future workflow.Future
}

func (r *ServicequotasListRequestedServiceQuotaChangeHistoryByQuotaFuture) Get(ctx workflow.Context) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasListServiceQuotaIncreaseRequestsInTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasListServiceQuotaIncreaseRequestsInTemplateFuture) Get(ctx workflow.Context) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	var output servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasListServiceQuotasFuture struct {
	Future workflow.Future
}

func (r *ServicequotasListServiceQuotasFuture) Get(ctx workflow.Context) (*servicequotas.ListServiceQuotasOutput, error) {
	var output servicequotas.ListServiceQuotasOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasListServicesFuture struct {
	Future workflow.Future
}

func (r *ServicequotasListServicesFuture) Get(ctx workflow.Context) (*servicequotas.ListServicesOutput, error) {
	var output servicequotas.ListServicesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasPutServiceQuotaIncreaseRequestIntoTemplateFuture struct {
	Future workflow.Future
}

func (r *ServicequotasPutServiceQuotaIncreaseRequestIntoTemplateFuture) Get(ctx workflow.Context) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	var output servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServicequotasRequestServiceQuotaIncreaseFuture struct {
	Future workflow.Future
}

func (r *ServicequotasRequestServiceQuotaIncreaseFuture) Get(ctx workflow.Context) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	var output servicequotas.RequestServiceQuotaIncreaseOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) AssociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.AssociateServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.AssociateServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) AssociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) *ServicequotasAssociateServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.AssociateServiceQuotaTemplate", input)
	return &ServicequotasAssociateServiceQuotaTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) DeleteServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) DeleteServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) *ServicequotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplate", input)
	return &ServicequotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) DisassociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.DisassociateServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.DisassociateServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) DisassociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) *ServicequotasDisassociateServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.DisassociateServiceQuotaTemplate", input)
	return &ServicequotasDisassociateServiceQuotaTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) GetAWSDefaultServiceQuota(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	var output servicequotas.GetAWSDefaultServiceQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAWSDefaultServiceQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetAWSDefaultServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) *ServicequotasGetAWSDefaultServiceQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAWSDefaultServiceQuota", input)
	return &ServicequotasGetAWSDefaultServiceQuotaFuture{Future: future}
}

func (a *ServiceQuotasStub) GetAssociationForServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	var output servicequotas.GetAssociationForServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAssociationForServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetAssociationForServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) *ServicequotasGetAssociationForServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAssociationForServiceQuotaTemplate", input)
	return &ServicequotasGetAssociationForServiceQuotaTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) GetRequestedServiceQuotaChange(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	var output servicequotas.GetRequestedServiceQuotaChangeOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetRequestedServiceQuotaChange", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetRequestedServiceQuotaChangeAsync(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) *ServicequotasGetRequestedServiceQuotaChangeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetRequestedServiceQuotaChange", input)
	return &ServicequotasGetRequestedServiceQuotaChangeFuture{Future: future}
}

func (a *ServiceQuotasStub) GetServiceQuota(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) (*servicequotas.GetServiceQuotaOutput, error) {
	var output servicequotas.GetServiceQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) *ServicequotasGetServiceQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuota", input)
	return &ServicequotasGetServiceQuotaFuture{Future: future}
}

func (a *ServiceQuotasStub) GetServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuotaIncreaseRequestFromTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) *ServicequotasGetServiceQuotaIncreaseRequestFromTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuotaIncreaseRequestFromTemplate", input)
	return &ServicequotasGetServiceQuotaIncreaseRequestFromTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) ListAWSDefaultServiceQuotas(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	var output servicequotas.ListAWSDefaultServiceQuotasOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListAWSDefaultServiceQuotas", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListAWSDefaultServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) *ServicequotasListAWSDefaultServiceQuotasFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListAWSDefaultServiceQuotas", input)
	return &ServicequotasListAWSDefaultServiceQuotasFuture{Future: future}
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistory(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistory", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistoryAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) *ServicequotasListRequestedServiceQuotaChangeHistoryFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistory", input)
	return &ServicequotasListRequestedServiceQuotaChangeHistoryFuture{Future: future}
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistoryByQuota(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistoryByQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistoryByQuotaAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) *ServicequotasListRequestedServiceQuotaChangeHistoryByQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistoryByQuota", input)
	return &ServicequotasListRequestedServiceQuotaChangeHistoryByQuotaFuture{Future: future}
}

func (a *ServiceQuotasStub) ListServiceQuotaIncreaseRequestsInTemplate(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	var output servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotaIncreaseRequestsInTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListServiceQuotaIncreaseRequestsInTemplateAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) *ServicequotasListServiceQuotaIncreaseRequestsInTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotaIncreaseRequestsInTemplate", input)
	return &ServicequotasListServiceQuotaIncreaseRequestsInTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) ListServiceQuotas(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) (*servicequotas.ListServiceQuotasOutput, error) {
	var output servicequotas.ListServiceQuotasOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotas", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) *ServicequotasListServiceQuotasFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotas", input)
	return &ServicequotasListServiceQuotasFuture{Future: future}
}

func (a *ServiceQuotasStub) ListServices(ctx workflow.Context, input *servicequotas.ListServicesInput) (*servicequotas.ListServicesOutput, error) {
	var output servicequotas.ListServicesOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServices", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListServicesAsync(ctx workflow.Context, input *servicequotas.ListServicesInput) *ServicequotasListServicesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServices", input)
	return &ServicequotasListServicesFuture{Future: future}
}

func (a *ServiceQuotasStub) PutServiceQuotaIncreaseRequestIntoTemplate(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	var output servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.PutServiceQuotaIncreaseRequestIntoTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) PutServiceQuotaIncreaseRequestIntoTemplateAsync(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) *ServicequotasPutServiceQuotaIncreaseRequestIntoTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.PutServiceQuotaIncreaseRequestIntoTemplate", input)
	return &ServicequotasPutServiceQuotaIncreaseRequestIntoTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) RequestServiceQuotaIncrease(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	var output servicequotas.RequestServiceQuotaIncreaseOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.RequestServiceQuotaIncrease", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) RequestServiceQuotaIncreaseAsync(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) *ServicequotasRequestServiceQuotaIncreaseFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.RequestServiceQuotaIncrease", input)
	return &ServicequotasRequestServiceQuotaIncreaseFuture{Future: future}
}
