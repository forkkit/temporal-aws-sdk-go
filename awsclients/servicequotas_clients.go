// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/servicequotas"
	"go.temporal.io/sdk/workflow"
)

type ServiceQuotasClient interface {
	AssociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) (*servicequotas.AssociateServiceQuotaTemplateOutput, error)
	AssociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) *ServiceQuotasAssociateServiceQuotaTemplateFuture

	DeleteServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error)
	DeleteServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) *ServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture

	DisassociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error)
	DisassociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) *ServiceQuotasDisassociateServiceQuotaTemplateFuture

	GetAWSDefaultServiceQuota(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error)
	GetAWSDefaultServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) *ServiceQuotasGetAWSDefaultServiceQuotaFuture

	GetAssociationForServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error)
	GetAssociationForServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) *ServiceQuotasGetAssociationForServiceQuotaTemplateFuture

	GetRequestedServiceQuotaChange(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error)
	GetRequestedServiceQuotaChangeAsync(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) *ServiceQuotasGetRequestedServiceQuotaChangeFuture

	GetServiceQuota(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) (*servicequotas.GetServiceQuotaOutput, error)
	GetServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) *ServiceQuotasGetServiceQuotaFuture

	GetServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error)
	GetServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) *ServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateFuture

	ListAWSDefaultServiceQuotas(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error)
	ListAWSDefaultServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) *ServiceQuotasListAWSDefaultServiceQuotasFuture

	ListRequestedServiceQuotaChangeHistory(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error)
	ListRequestedServiceQuotaChangeHistoryAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) *ServiceQuotasListRequestedServiceQuotaChangeHistoryFuture

	ListRequestedServiceQuotaChangeHistoryByQuota(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error)
	ListRequestedServiceQuotaChangeHistoryByQuotaAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) *ServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaFuture

	ListServiceQuotaIncreaseRequestsInTemplate(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error)
	ListServiceQuotaIncreaseRequestsInTemplateAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) *ServiceQuotasListServiceQuotaIncreaseRequestsInTemplateFuture

	ListServiceQuotas(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) (*servicequotas.ListServiceQuotasOutput, error)
	ListServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) *ServiceQuotasListServiceQuotasFuture

	ListServices(ctx workflow.Context, input *servicequotas.ListServicesInput) (*servicequotas.ListServicesOutput, error)
	ListServicesAsync(ctx workflow.Context, input *servicequotas.ListServicesInput) *ServiceQuotasListServicesFuture

	PutServiceQuotaIncreaseRequestIntoTemplate(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error)
	PutServiceQuotaIncreaseRequestIntoTemplateAsync(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) *ServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateFuture

	RequestServiceQuotaIncrease(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) (*servicequotas.RequestServiceQuotaIncreaseOutput, error)
	RequestServiceQuotaIncreaseAsync(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) *ServiceQuotasRequestServiceQuotaIncreaseFuture
}

type ServiceQuotasStub struct{}

func NewServiceQuotasStub() ServiceQuotasClient {
	return &ServiceQuotasStub{}
}

type ServiceQuotasAssociateServiceQuotaTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasAssociateServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.AssociateServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture) Get(ctx workflow.Context) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasDisassociateServiceQuotaTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasDisassociateServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.DisassociateServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasGetAWSDefaultServiceQuotaFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasGetAWSDefaultServiceQuotaFuture) Get(ctx workflow.Context) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	var output servicequotas.GetAWSDefaultServiceQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasGetAssociationForServiceQuotaTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasGetAssociationForServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	var output servicequotas.GetAssociationForServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasGetRequestedServiceQuotaChangeFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasGetRequestedServiceQuotaChangeFuture) Get(ctx workflow.Context) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	var output servicequotas.GetRequestedServiceQuotaChangeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasGetServiceQuotaFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasGetServiceQuotaFuture) Get(ctx workflow.Context) (*servicequotas.GetServiceQuotaOutput, error) {
	var output servicequotas.GetServiceQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateFuture) Get(ctx workflow.Context) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasListAWSDefaultServiceQuotasFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasListAWSDefaultServiceQuotasFuture) Get(ctx workflow.Context) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	var output servicequotas.ListAWSDefaultServiceQuotasOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasListRequestedServiceQuotaChangeHistoryFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasListRequestedServiceQuotaChangeHistoryFuture) Get(ctx workflow.Context) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaFuture) Get(ctx workflow.Context) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasListServiceQuotaIncreaseRequestsInTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasListServiceQuotaIncreaseRequestsInTemplateFuture) Get(ctx workflow.Context) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	var output servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasListServiceQuotasFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasListServiceQuotasFuture) Get(ctx workflow.Context) (*servicequotas.ListServiceQuotasOutput, error) {
	var output servicequotas.ListServiceQuotasOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasListServicesFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasListServicesFuture) Get(ctx workflow.Context) (*servicequotas.ListServicesOutput, error) {
	var output servicequotas.ListServicesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateFuture) Get(ctx workflow.Context) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	var output servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ServiceQuotasRequestServiceQuotaIncreaseFuture struct {
	Future workflow.Future
}

func (r *ServiceQuotasRequestServiceQuotaIncreaseFuture) Get(ctx workflow.Context) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	var output servicequotas.RequestServiceQuotaIncreaseOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) AssociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.AssociateServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.AssociateServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) AssociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) *ServiceQuotasAssociateServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.AssociateServiceQuotaTemplate", input)
	return &ServiceQuotasAssociateServiceQuotaTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) DeleteServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) DeleteServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) *ServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplate", input)
	return &ServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) DisassociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.DisassociateServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.DisassociateServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) DisassociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) *ServiceQuotasDisassociateServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.DisassociateServiceQuotaTemplate", input)
	return &ServiceQuotasDisassociateServiceQuotaTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) GetAWSDefaultServiceQuota(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	var output servicequotas.GetAWSDefaultServiceQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAWSDefaultServiceQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetAWSDefaultServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) *ServiceQuotasGetAWSDefaultServiceQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAWSDefaultServiceQuota", input)
	return &ServiceQuotasGetAWSDefaultServiceQuotaFuture{Future: future}
}

func (a *ServiceQuotasStub) GetAssociationForServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	var output servicequotas.GetAssociationForServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAssociationForServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetAssociationForServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) *ServiceQuotasGetAssociationForServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetAssociationForServiceQuotaTemplate", input)
	return &ServiceQuotasGetAssociationForServiceQuotaTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) GetRequestedServiceQuotaChange(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	var output servicequotas.GetRequestedServiceQuotaChangeOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetRequestedServiceQuotaChange", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetRequestedServiceQuotaChangeAsync(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) *ServiceQuotasGetRequestedServiceQuotaChangeFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetRequestedServiceQuotaChange", input)
	return &ServiceQuotasGetRequestedServiceQuotaChangeFuture{Future: future}
}

func (a *ServiceQuotasStub) GetServiceQuota(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) (*servicequotas.GetServiceQuotaOutput, error) {
	var output servicequotas.GetServiceQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) *ServiceQuotasGetServiceQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuota", input)
	return &ServiceQuotasGetServiceQuotaFuture{Future: future}
}

func (a *ServiceQuotasStub) GetServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuotaIncreaseRequestFromTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) GetServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) *ServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.GetServiceQuotaIncreaseRequestFromTemplate", input)
	return &ServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) ListAWSDefaultServiceQuotas(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	var output servicequotas.ListAWSDefaultServiceQuotasOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListAWSDefaultServiceQuotas", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListAWSDefaultServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) *ServiceQuotasListAWSDefaultServiceQuotasFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListAWSDefaultServiceQuotas", input)
	return &ServiceQuotasListAWSDefaultServiceQuotasFuture{Future: future}
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistory(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistory", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistoryAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) *ServiceQuotasListRequestedServiceQuotaChangeHistoryFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistory", input)
	return &ServiceQuotasListRequestedServiceQuotaChangeHistoryFuture{Future: future}
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistoryByQuota(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistoryByQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListRequestedServiceQuotaChangeHistoryByQuotaAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) *ServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListRequestedServiceQuotaChangeHistoryByQuota", input)
	return &ServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaFuture{Future: future}
}

func (a *ServiceQuotasStub) ListServiceQuotaIncreaseRequestsInTemplate(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	var output servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotaIncreaseRequestsInTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListServiceQuotaIncreaseRequestsInTemplateAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) *ServiceQuotasListServiceQuotaIncreaseRequestsInTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotaIncreaseRequestsInTemplate", input)
	return &ServiceQuotasListServiceQuotaIncreaseRequestsInTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) ListServiceQuotas(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) (*servicequotas.ListServiceQuotasOutput, error) {
	var output servicequotas.ListServiceQuotasOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotas", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) *ServiceQuotasListServiceQuotasFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServiceQuotas", input)
	return &ServiceQuotasListServiceQuotasFuture{Future: future}
}

func (a *ServiceQuotasStub) ListServices(ctx workflow.Context, input *servicequotas.ListServicesInput) (*servicequotas.ListServicesOutput, error) {
	var output servicequotas.ListServicesOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServices", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) ListServicesAsync(ctx workflow.Context, input *servicequotas.ListServicesInput) *ServiceQuotasListServicesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.ListServices", input)
	return &ServiceQuotasListServicesFuture{Future: future}
}

func (a *ServiceQuotasStub) PutServiceQuotaIncreaseRequestIntoTemplate(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	var output servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.PutServiceQuotaIncreaseRequestIntoTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) PutServiceQuotaIncreaseRequestIntoTemplateAsync(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) *ServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.PutServiceQuotaIncreaseRequestIntoTemplate", input)
	return &ServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateFuture{Future: future}
}

func (a *ServiceQuotasStub) RequestServiceQuotaIncrease(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	var output servicequotas.RequestServiceQuotaIncreaseOutput
	err := workflow.ExecuteActivity(ctx, "aws.servicequotas.RequestServiceQuotaIncrease", input).Get(ctx, &output)
	return &output, err
}

func (a *ServiceQuotasStub) RequestServiceQuotaIncreaseAsync(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) *ServiceQuotasRequestServiceQuotaIncreaseFuture {
	future := workflow.ExecuteActivity(ctx, "aws.servicequotas.RequestServiceQuotaIncrease", input)
	return &ServiceQuotasRequestServiceQuotaIncreaseFuture{Future: future}
}
