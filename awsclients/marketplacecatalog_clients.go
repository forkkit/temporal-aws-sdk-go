// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/marketplacecatalog"
	"go.temporal.io/sdk/workflow"
)

type MarketplaceCatalogClient interface {
	CancelChangeSet(ctx workflow.Context, input *marketplacecatalog.CancelChangeSetInput) (*marketplacecatalog.CancelChangeSetOutput, error)
	CancelChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.CancelChangeSetInput) *MarketplacecatalogCancelChangeSetFuture

	DescribeChangeSet(ctx workflow.Context, input *marketplacecatalog.DescribeChangeSetInput) (*marketplacecatalog.DescribeChangeSetOutput, error)
	DescribeChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.DescribeChangeSetInput) *MarketplacecatalogDescribeChangeSetFuture

	DescribeEntity(ctx workflow.Context, input *marketplacecatalog.DescribeEntityInput) (*marketplacecatalog.DescribeEntityOutput, error)
	DescribeEntityAsync(ctx workflow.Context, input *marketplacecatalog.DescribeEntityInput) *MarketplacecatalogDescribeEntityFuture

	ListChangeSets(ctx workflow.Context, input *marketplacecatalog.ListChangeSetsInput) (*marketplacecatalog.ListChangeSetsOutput, error)
	ListChangeSetsAsync(ctx workflow.Context, input *marketplacecatalog.ListChangeSetsInput) *MarketplacecatalogListChangeSetsFuture

	ListEntities(ctx workflow.Context, input *marketplacecatalog.ListEntitiesInput) (*marketplacecatalog.ListEntitiesOutput, error)
	ListEntitiesAsync(ctx workflow.Context, input *marketplacecatalog.ListEntitiesInput) *MarketplacecatalogListEntitiesFuture

	StartChangeSet(ctx workflow.Context, input *marketplacecatalog.StartChangeSetInput) (*marketplacecatalog.StartChangeSetOutput, error)
	StartChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.StartChangeSetInput) *MarketplacecatalogStartChangeSetFuture
}

type MarketplaceCatalogStub struct{}

func NewMarketplaceCatalogStub() MarketplaceCatalogClient {
	return &MarketplaceCatalogStub{}
}

type MarketplacecatalogCancelChangeSetFuture struct {
	Future workflow.Future
}

func (r *MarketplacecatalogCancelChangeSetFuture) Get(ctx workflow.Context) (*marketplacecatalog.CancelChangeSetOutput, error) {
	var output marketplacecatalog.CancelChangeSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type MarketplacecatalogDescribeChangeSetFuture struct {
	Future workflow.Future
}

func (r *MarketplacecatalogDescribeChangeSetFuture) Get(ctx workflow.Context) (*marketplacecatalog.DescribeChangeSetOutput, error) {
	var output marketplacecatalog.DescribeChangeSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type MarketplacecatalogDescribeEntityFuture struct {
	Future workflow.Future
}

func (r *MarketplacecatalogDescribeEntityFuture) Get(ctx workflow.Context) (*marketplacecatalog.DescribeEntityOutput, error) {
	var output marketplacecatalog.DescribeEntityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type MarketplacecatalogListChangeSetsFuture struct {
	Future workflow.Future
}

func (r *MarketplacecatalogListChangeSetsFuture) Get(ctx workflow.Context) (*marketplacecatalog.ListChangeSetsOutput, error) {
	var output marketplacecatalog.ListChangeSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type MarketplacecatalogListEntitiesFuture struct {
	Future workflow.Future
}

func (r *MarketplacecatalogListEntitiesFuture) Get(ctx workflow.Context) (*marketplacecatalog.ListEntitiesOutput, error) {
	var output marketplacecatalog.ListEntitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type MarketplacecatalogStartChangeSetFuture struct {
	Future workflow.Future
}

func (r *MarketplacecatalogStartChangeSetFuture) Get(ctx workflow.Context) (*marketplacecatalog.StartChangeSetOutput, error) {
	var output marketplacecatalog.StartChangeSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) CancelChangeSet(ctx workflow.Context, input *marketplacecatalog.CancelChangeSetInput) (*marketplacecatalog.CancelChangeSetOutput, error) {
	var output marketplacecatalog.CancelChangeSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.CancelChangeSet", input).Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) CancelChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.CancelChangeSetInput) *MarketplacecatalogCancelChangeSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.CancelChangeSet", input)
	return &MarketplacecatalogCancelChangeSetFuture{Future: future}
}

func (a *MarketplaceCatalogStub) DescribeChangeSet(ctx workflow.Context, input *marketplacecatalog.DescribeChangeSetInput) (*marketplacecatalog.DescribeChangeSetOutput, error) {
	var output marketplacecatalog.DescribeChangeSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.DescribeChangeSet", input).Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) DescribeChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.DescribeChangeSetInput) *MarketplacecatalogDescribeChangeSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.DescribeChangeSet", input)
	return &MarketplacecatalogDescribeChangeSetFuture{Future: future}
}

func (a *MarketplaceCatalogStub) DescribeEntity(ctx workflow.Context, input *marketplacecatalog.DescribeEntityInput) (*marketplacecatalog.DescribeEntityOutput, error) {
	var output marketplacecatalog.DescribeEntityOutput
	err := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.DescribeEntity", input).Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) DescribeEntityAsync(ctx workflow.Context, input *marketplacecatalog.DescribeEntityInput) *MarketplacecatalogDescribeEntityFuture {
	future := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.DescribeEntity", input)
	return &MarketplacecatalogDescribeEntityFuture{Future: future}
}

func (a *MarketplaceCatalogStub) ListChangeSets(ctx workflow.Context, input *marketplacecatalog.ListChangeSetsInput) (*marketplacecatalog.ListChangeSetsOutput, error) {
	var output marketplacecatalog.ListChangeSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.ListChangeSets", input).Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) ListChangeSetsAsync(ctx workflow.Context, input *marketplacecatalog.ListChangeSetsInput) *MarketplacecatalogListChangeSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.ListChangeSets", input)
	return &MarketplacecatalogListChangeSetsFuture{Future: future}
}

func (a *MarketplaceCatalogStub) ListEntities(ctx workflow.Context, input *marketplacecatalog.ListEntitiesInput) (*marketplacecatalog.ListEntitiesOutput, error) {
	var output marketplacecatalog.ListEntitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.ListEntities", input).Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) ListEntitiesAsync(ctx workflow.Context, input *marketplacecatalog.ListEntitiesInput) *MarketplacecatalogListEntitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.ListEntities", input)
	return &MarketplacecatalogListEntitiesFuture{Future: future}
}

func (a *MarketplaceCatalogStub) StartChangeSet(ctx workflow.Context, input *marketplacecatalog.StartChangeSetInput) (*marketplacecatalog.StartChangeSetOutput, error) {
	var output marketplacecatalog.StartChangeSetOutput
	err := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.StartChangeSet", input).Get(ctx, &output)
	return &output, err
}

func (a *MarketplaceCatalogStub) StartChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.StartChangeSetInput) *MarketplacecatalogStartChangeSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws.marketplacecatalog.StartChangeSet", input)
	return &MarketplacecatalogStartChangeSetFuture{Future: future}
}
