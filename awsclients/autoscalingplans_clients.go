// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/autoscalingplans"
	"go.temporal.io/sdk/workflow"
)

type AutoScalingPlansClient interface {
	CreateScalingPlan(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) (*autoscalingplans.CreateScalingPlanOutput, error)
	CreateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) *AutoScalingPlansCreateScalingPlanFuture

	DeleteScalingPlan(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) (*autoscalingplans.DeleteScalingPlanOutput, error)
	DeleteScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) *AutoScalingPlansDeleteScalingPlanFuture

	DescribeScalingPlanResources(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) (*autoscalingplans.DescribeScalingPlanResourcesOutput, error)
	DescribeScalingPlanResourcesAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) *AutoScalingPlansDescribeScalingPlanResourcesFuture

	DescribeScalingPlans(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) (*autoscalingplans.DescribeScalingPlansOutput, error)
	DescribeScalingPlansAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) *AutoScalingPlansDescribeScalingPlansFuture

	GetScalingPlanResourceForecastData(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) (*autoscalingplans.GetScalingPlanResourceForecastDataOutput, error)
	GetScalingPlanResourceForecastDataAsync(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) *AutoScalingPlansGetScalingPlanResourceForecastDataFuture

	UpdateScalingPlan(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) (*autoscalingplans.UpdateScalingPlanOutput, error)
	UpdateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) *AutoScalingPlansUpdateScalingPlanFuture
}

type AutoScalingPlansStub struct{}

func NewAutoScalingPlansStub() AutoScalingPlansClient {
	return &AutoScalingPlansStub{}
}

type AutoScalingPlansCreateScalingPlanFuture struct {
	Future workflow.Future
}

func (r *AutoScalingPlansCreateScalingPlanFuture) Get(ctx workflow.Context) (*autoscalingplans.CreateScalingPlanOutput, error) {
	var output autoscalingplans.CreateScalingPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoScalingPlansDeleteScalingPlanFuture struct {
	Future workflow.Future
}

func (r *AutoScalingPlansDeleteScalingPlanFuture) Get(ctx workflow.Context) (*autoscalingplans.DeleteScalingPlanOutput, error) {
	var output autoscalingplans.DeleteScalingPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoScalingPlansDescribeScalingPlanResourcesFuture struct {
	Future workflow.Future
}

func (r *AutoScalingPlansDescribeScalingPlanResourcesFuture) Get(ctx workflow.Context) (*autoscalingplans.DescribeScalingPlanResourcesOutput, error) {
	var output autoscalingplans.DescribeScalingPlanResourcesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoScalingPlansDescribeScalingPlansFuture struct {
	Future workflow.Future
}

func (r *AutoScalingPlansDescribeScalingPlansFuture) Get(ctx workflow.Context) (*autoscalingplans.DescribeScalingPlansOutput, error) {
	var output autoscalingplans.DescribeScalingPlansOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoScalingPlansGetScalingPlanResourceForecastDataFuture struct {
	Future workflow.Future
}

func (r *AutoScalingPlansGetScalingPlanResourceForecastDataFuture) Get(ctx workflow.Context) (*autoscalingplans.GetScalingPlanResourceForecastDataOutput, error) {
	var output autoscalingplans.GetScalingPlanResourceForecastDataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoScalingPlansUpdateScalingPlanFuture struct {
	Future workflow.Future
}

func (r *AutoScalingPlansUpdateScalingPlanFuture) Get(ctx workflow.Context) (*autoscalingplans.UpdateScalingPlanOutput, error) {
	var output autoscalingplans.UpdateScalingPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) CreateScalingPlan(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) (*autoscalingplans.CreateScalingPlanOutput, error) {
	var output autoscalingplans.CreateScalingPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.CreateScalingPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) CreateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) *AutoScalingPlansCreateScalingPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.CreateScalingPlan", input)
	return &AutoScalingPlansCreateScalingPlanFuture{Future: future}
}

func (a *AutoScalingPlansStub) DeleteScalingPlan(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) (*autoscalingplans.DeleteScalingPlanOutput, error) {
	var output autoscalingplans.DeleteScalingPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DeleteScalingPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) DeleteScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) *AutoScalingPlansDeleteScalingPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DeleteScalingPlan", input)
	return &AutoScalingPlansDeleteScalingPlanFuture{Future: future}
}

func (a *AutoScalingPlansStub) DescribeScalingPlanResources(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) (*autoscalingplans.DescribeScalingPlanResourcesOutput, error) {
	var output autoscalingplans.DescribeScalingPlanResourcesOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlanResources", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) DescribeScalingPlanResourcesAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) *AutoScalingPlansDescribeScalingPlanResourcesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlanResources", input)
	return &AutoScalingPlansDescribeScalingPlanResourcesFuture{Future: future}
}

func (a *AutoScalingPlansStub) DescribeScalingPlans(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) (*autoscalingplans.DescribeScalingPlansOutput, error) {
	var output autoscalingplans.DescribeScalingPlansOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlans", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) DescribeScalingPlansAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) *AutoScalingPlansDescribeScalingPlansFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlans", input)
	return &AutoScalingPlansDescribeScalingPlansFuture{Future: future}
}

func (a *AutoScalingPlansStub) GetScalingPlanResourceForecastData(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) (*autoscalingplans.GetScalingPlanResourceForecastDataOutput, error) {
	var output autoscalingplans.GetScalingPlanResourceForecastDataOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.GetScalingPlanResourceForecastData", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) GetScalingPlanResourceForecastDataAsync(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) *AutoScalingPlansGetScalingPlanResourceForecastDataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.GetScalingPlanResourceForecastData", input)
	return &AutoScalingPlansGetScalingPlanResourceForecastDataFuture{Future: future}
}

func (a *AutoScalingPlansStub) UpdateScalingPlan(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) (*autoscalingplans.UpdateScalingPlanOutput, error) {
	var output autoscalingplans.UpdateScalingPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.UpdateScalingPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) UpdateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) *AutoScalingPlansUpdateScalingPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.UpdateScalingPlan", input)
	return &AutoScalingPlansUpdateScalingPlanFuture{Future: future}
}
