// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/autoscalingplans"
	"go.temporal.io/sdk/workflow"
)

type AutoScalingPlansClient interface {
	CreateScalingPlan(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) (*autoscalingplans.CreateScalingPlanOutput, error)
	CreateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) *AutoscalingplansCreateScalingPlanFuture

	DeleteScalingPlan(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) (*autoscalingplans.DeleteScalingPlanOutput, error)
	DeleteScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) *AutoscalingplansDeleteScalingPlanFuture

	DescribeScalingPlanResources(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) (*autoscalingplans.DescribeScalingPlanResourcesOutput, error)
	DescribeScalingPlanResourcesAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) *AutoscalingplansDescribeScalingPlanResourcesFuture

	DescribeScalingPlans(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) (*autoscalingplans.DescribeScalingPlansOutput, error)
	DescribeScalingPlansAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) *AutoscalingplansDescribeScalingPlansFuture

	GetScalingPlanResourceForecastData(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) (*autoscalingplans.GetScalingPlanResourceForecastDataOutput, error)
	GetScalingPlanResourceForecastDataAsync(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) *AutoscalingplansGetScalingPlanResourceForecastDataFuture

	UpdateScalingPlan(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) (*autoscalingplans.UpdateScalingPlanOutput, error)
	UpdateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) *AutoscalingplansUpdateScalingPlanFuture
}

type AutoScalingPlansStub struct{}

func NewAutoScalingPlansStub() AutoScalingPlansClient {
	return &AutoScalingPlansStub{}
}

type AutoscalingplansCreateScalingPlanFuture struct {
	Future workflow.Future
}

func (r *AutoscalingplansCreateScalingPlanFuture) Get(ctx workflow.Context) (*autoscalingplans.CreateScalingPlanOutput, error) {
	var output autoscalingplans.CreateScalingPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoscalingplansDeleteScalingPlanFuture struct {
	Future workflow.Future
}

func (r *AutoscalingplansDeleteScalingPlanFuture) Get(ctx workflow.Context) (*autoscalingplans.DeleteScalingPlanOutput, error) {
	var output autoscalingplans.DeleteScalingPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoscalingplansDescribeScalingPlanResourcesFuture struct {
	Future workflow.Future
}

func (r *AutoscalingplansDescribeScalingPlanResourcesFuture) Get(ctx workflow.Context) (*autoscalingplans.DescribeScalingPlanResourcesOutput, error) {
	var output autoscalingplans.DescribeScalingPlanResourcesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoscalingplansDescribeScalingPlansFuture struct {
	Future workflow.Future
}

func (r *AutoscalingplansDescribeScalingPlansFuture) Get(ctx workflow.Context) (*autoscalingplans.DescribeScalingPlansOutput, error) {
	var output autoscalingplans.DescribeScalingPlansOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoscalingplansGetScalingPlanResourceForecastDataFuture struct {
	Future workflow.Future
}

func (r *AutoscalingplansGetScalingPlanResourceForecastDataFuture) Get(ctx workflow.Context) (*autoscalingplans.GetScalingPlanResourceForecastDataOutput, error) {
	var output autoscalingplans.GetScalingPlanResourceForecastDataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AutoscalingplansUpdateScalingPlanFuture struct {
	Future workflow.Future
}

func (r *AutoscalingplansUpdateScalingPlanFuture) Get(ctx workflow.Context) (*autoscalingplans.UpdateScalingPlanOutput, error) {
	var output autoscalingplans.UpdateScalingPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) CreateScalingPlan(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) (*autoscalingplans.CreateScalingPlanOutput, error) {
	var output autoscalingplans.CreateScalingPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.CreateScalingPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) CreateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.CreateScalingPlanInput) *AutoscalingplansCreateScalingPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.CreateScalingPlan", input)
	return &AutoscalingplansCreateScalingPlanFuture{Future: future}
}

func (a *AutoScalingPlansStub) DeleteScalingPlan(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) (*autoscalingplans.DeleteScalingPlanOutput, error) {
	var output autoscalingplans.DeleteScalingPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DeleteScalingPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) DeleteScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.DeleteScalingPlanInput) *AutoscalingplansDeleteScalingPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DeleteScalingPlan", input)
	return &AutoscalingplansDeleteScalingPlanFuture{Future: future}
}

func (a *AutoScalingPlansStub) DescribeScalingPlanResources(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) (*autoscalingplans.DescribeScalingPlanResourcesOutput, error) {
	var output autoscalingplans.DescribeScalingPlanResourcesOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlanResources", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) DescribeScalingPlanResourcesAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlanResourcesInput) *AutoscalingplansDescribeScalingPlanResourcesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlanResources", input)
	return &AutoscalingplansDescribeScalingPlanResourcesFuture{Future: future}
}

func (a *AutoScalingPlansStub) DescribeScalingPlans(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) (*autoscalingplans.DescribeScalingPlansOutput, error) {
	var output autoscalingplans.DescribeScalingPlansOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlans", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) DescribeScalingPlansAsync(ctx workflow.Context, input *autoscalingplans.DescribeScalingPlansInput) *AutoscalingplansDescribeScalingPlansFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.DescribeScalingPlans", input)
	return &AutoscalingplansDescribeScalingPlansFuture{Future: future}
}

func (a *AutoScalingPlansStub) GetScalingPlanResourceForecastData(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) (*autoscalingplans.GetScalingPlanResourceForecastDataOutput, error) {
	var output autoscalingplans.GetScalingPlanResourceForecastDataOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.GetScalingPlanResourceForecastData", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) GetScalingPlanResourceForecastDataAsync(ctx workflow.Context, input *autoscalingplans.GetScalingPlanResourceForecastDataInput) *AutoscalingplansGetScalingPlanResourceForecastDataFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.GetScalingPlanResourceForecastData", input)
	return &AutoscalingplansGetScalingPlanResourceForecastDataFuture{Future: future}
}

func (a *AutoScalingPlansStub) UpdateScalingPlan(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) (*autoscalingplans.UpdateScalingPlanOutput, error) {
	var output autoscalingplans.UpdateScalingPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.UpdateScalingPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *AutoScalingPlansStub) UpdateScalingPlanAsync(ctx workflow.Context, input *autoscalingplans.UpdateScalingPlanInput) *AutoscalingplansUpdateScalingPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.autoscalingplans.UpdateScalingPlan", input)
	return &AutoscalingplansUpdateScalingPlanFuture{Future: future}
}
