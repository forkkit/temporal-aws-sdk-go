// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsclients

import (
	"github.com/aws/aws-sdk-go/service/savingsplans"
	"go.temporal.io/sdk/workflow"
)

type SavingsPlansClient interface {
	CreateSavingsPlan(ctx workflow.Context, input *savingsplans.CreateSavingsPlanInput) (*savingsplans.CreateSavingsPlanOutput, error)
	CreateSavingsPlanAsync(ctx workflow.Context, input *savingsplans.CreateSavingsPlanInput) *SavingsplansCreateSavingsPlanFuture

	DeleteQueuedSavingsPlan(ctx workflow.Context, input *savingsplans.DeleteQueuedSavingsPlanInput) (*savingsplans.DeleteQueuedSavingsPlanOutput, error)
	DeleteQueuedSavingsPlanAsync(ctx workflow.Context, input *savingsplans.DeleteQueuedSavingsPlanInput) *SavingsplansDeleteQueuedSavingsPlanFuture

	DescribeSavingsPlanRates(ctx workflow.Context, input *savingsplans.DescribeSavingsPlanRatesInput) (*savingsplans.DescribeSavingsPlanRatesOutput, error)
	DescribeSavingsPlanRatesAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlanRatesInput) *SavingsplansDescribeSavingsPlanRatesFuture

	DescribeSavingsPlans(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansInput) (*savingsplans.DescribeSavingsPlansOutput, error)
	DescribeSavingsPlansAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansInput) *SavingsplansDescribeSavingsPlansFuture

	DescribeSavingsPlansOfferingRates(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingRatesInput) (*savingsplans.DescribeSavingsPlansOfferingRatesOutput, error)
	DescribeSavingsPlansOfferingRatesAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingRatesInput) *SavingsplansDescribeSavingsPlansOfferingRatesFuture

	DescribeSavingsPlansOfferings(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingsInput) (*savingsplans.DescribeSavingsPlansOfferingsOutput, error)
	DescribeSavingsPlansOfferingsAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingsInput) *SavingsplansDescribeSavingsPlansOfferingsFuture

	ListTagsForResource(ctx workflow.Context, input *savingsplans.ListTagsForResourceInput) (*savingsplans.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *savingsplans.ListTagsForResourceInput) *SavingsplansListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *savingsplans.TagResourceInput) (*savingsplans.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *savingsplans.TagResourceInput) *SavingsplansTagResourceFuture

	UntagResource(ctx workflow.Context, input *savingsplans.UntagResourceInput) (*savingsplans.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *savingsplans.UntagResourceInput) *SavingsplansUntagResourceFuture
}

type SavingsPlansStub struct{}

func NewSavingsPlansStub() SavingsPlansClient {
	return &SavingsPlansStub{}
}

type SavingsplansCreateSavingsPlanFuture struct {
	Future workflow.Future
}

func (r *SavingsplansCreateSavingsPlanFuture) Get(ctx workflow.Context) (*savingsplans.CreateSavingsPlanOutput, error) {
	var output savingsplans.CreateSavingsPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansDeleteQueuedSavingsPlanFuture struct {
	Future workflow.Future
}

func (r *SavingsplansDeleteQueuedSavingsPlanFuture) Get(ctx workflow.Context) (*savingsplans.DeleteQueuedSavingsPlanOutput, error) {
	var output savingsplans.DeleteQueuedSavingsPlanOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansDescribeSavingsPlanRatesFuture struct {
	Future workflow.Future
}

func (r *SavingsplansDescribeSavingsPlanRatesFuture) Get(ctx workflow.Context) (*savingsplans.DescribeSavingsPlanRatesOutput, error) {
	var output savingsplans.DescribeSavingsPlanRatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansDescribeSavingsPlansFuture struct {
	Future workflow.Future
}

func (r *SavingsplansDescribeSavingsPlansFuture) Get(ctx workflow.Context) (*savingsplans.DescribeSavingsPlansOutput, error) {
	var output savingsplans.DescribeSavingsPlansOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansDescribeSavingsPlansOfferingRatesFuture struct {
	Future workflow.Future
}

func (r *SavingsplansDescribeSavingsPlansOfferingRatesFuture) Get(ctx workflow.Context) (*savingsplans.DescribeSavingsPlansOfferingRatesOutput, error) {
	var output savingsplans.DescribeSavingsPlansOfferingRatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansDescribeSavingsPlansOfferingsFuture struct {
	Future workflow.Future
}

func (r *SavingsplansDescribeSavingsPlansOfferingsFuture) Get(ctx workflow.Context) (*savingsplans.DescribeSavingsPlansOfferingsOutput, error) {
	var output savingsplans.DescribeSavingsPlansOfferingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansListTagsForResourceFuture struct {
	Future workflow.Future
}

func (r *SavingsplansListTagsForResourceFuture) Get(ctx workflow.Context) (*savingsplans.ListTagsForResourceOutput, error) {
	var output savingsplans.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansTagResourceFuture struct {
	Future workflow.Future
}

func (r *SavingsplansTagResourceFuture) Get(ctx workflow.Context) (*savingsplans.TagResourceOutput, error) {
	var output savingsplans.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SavingsplansUntagResourceFuture struct {
	Future workflow.Future
}

func (r *SavingsplansUntagResourceFuture) Get(ctx workflow.Context) (*savingsplans.UntagResourceOutput, error) {
	var output savingsplans.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) CreateSavingsPlan(ctx workflow.Context, input *savingsplans.CreateSavingsPlanInput) (*savingsplans.CreateSavingsPlanOutput, error) {
	var output savingsplans.CreateSavingsPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.CreateSavingsPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) CreateSavingsPlanAsync(ctx workflow.Context, input *savingsplans.CreateSavingsPlanInput) *SavingsplansCreateSavingsPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.CreateSavingsPlan", input)
	return &SavingsplansCreateSavingsPlanFuture{Future: future}
}

func (a *SavingsPlansStub) DeleteQueuedSavingsPlan(ctx workflow.Context, input *savingsplans.DeleteQueuedSavingsPlanInput) (*savingsplans.DeleteQueuedSavingsPlanOutput, error) {
	var output savingsplans.DeleteQueuedSavingsPlanOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.DeleteQueuedSavingsPlan", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) DeleteQueuedSavingsPlanAsync(ctx workflow.Context, input *savingsplans.DeleteQueuedSavingsPlanInput) *SavingsplansDeleteQueuedSavingsPlanFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.DeleteQueuedSavingsPlan", input)
	return &SavingsplansDeleteQueuedSavingsPlanFuture{Future: future}
}

func (a *SavingsPlansStub) DescribeSavingsPlanRates(ctx workflow.Context, input *savingsplans.DescribeSavingsPlanRatesInput) (*savingsplans.DescribeSavingsPlanRatesOutput, error) {
	var output savingsplans.DescribeSavingsPlanRatesOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlanRates", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) DescribeSavingsPlanRatesAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlanRatesInput) *SavingsplansDescribeSavingsPlanRatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlanRates", input)
	return &SavingsplansDescribeSavingsPlanRatesFuture{Future: future}
}

func (a *SavingsPlansStub) DescribeSavingsPlans(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansInput) (*savingsplans.DescribeSavingsPlansOutput, error) {
	var output savingsplans.DescribeSavingsPlansOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlans", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) DescribeSavingsPlansAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansInput) *SavingsplansDescribeSavingsPlansFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlans", input)
	return &SavingsplansDescribeSavingsPlansFuture{Future: future}
}

func (a *SavingsPlansStub) DescribeSavingsPlansOfferingRates(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingRatesInput) (*savingsplans.DescribeSavingsPlansOfferingRatesOutput, error) {
	var output savingsplans.DescribeSavingsPlansOfferingRatesOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlansOfferingRates", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) DescribeSavingsPlansOfferingRatesAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingRatesInput) *SavingsplansDescribeSavingsPlansOfferingRatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlansOfferingRates", input)
	return &SavingsplansDescribeSavingsPlansOfferingRatesFuture{Future: future}
}

func (a *SavingsPlansStub) DescribeSavingsPlansOfferings(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingsInput) (*savingsplans.DescribeSavingsPlansOfferingsOutput, error) {
	var output savingsplans.DescribeSavingsPlansOfferingsOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlansOfferings", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) DescribeSavingsPlansOfferingsAsync(ctx workflow.Context, input *savingsplans.DescribeSavingsPlansOfferingsInput) *SavingsplansDescribeSavingsPlansOfferingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.DescribeSavingsPlansOfferings", input)
	return &SavingsplansDescribeSavingsPlansOfferingsFuture{Future: future}
}

func (a *SavingsPlansStub) ListTagsForResource(ctx workflow.Context, input *savingsplans.ListTagsForResourceInput) (*savingsplans.ListTagsForResourceOutput, error) {
	var output savingsplans.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) ListTagsForResourceAsync(ctx workflow.Context, input *savingsplans.ListTagsForResourceInput) *SavingsplansListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.ListTagsForResource", input)
	return &SavingsplansListTagsForResourceFuture{Future: future}
}

func (a *SavingsPlansStub) TagResource(ctx workflow.Context, input *savingsplans.TagResourceInput) (*savingsplans.TagResourceOutput, error) {
	var output savingsplans.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) TagResourceAsync(ctx workflow.Context, input *savingsplans.TagResourceInput) *SavingsplansTagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.TagResource", input)
	return &SavingsplansTagResourceFuture{Future: future}
}

func (a *SavingsPlansStub) UntagResource(ctx workflow.Context, input *savingsplans.UntagResourceInput) (*savingsplans.UntagResourceOutput, error) {
	var output savingsplans.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws.savingsplans.UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *SavingsPlansStub) UntagResourceAsync(ctx workflow.Context, input *savingsplans.UntagResourceInput) *SavingsplansUntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws.savingsplans.UntagResource", input)
	return &SavingsplansUntagResourceFuture{Future: future}
}
