
{{ $name := .Name -}}
{{ $lowerName := .Name |ToLower -}}
package awsactivities

import (
{{- range .Imports }}
	"github.com/aws/aws-sdk-go/service/{{ . }}"
{{- end }}
	"github.com/aws/aws-sdk-go/service/{{ $lowerName }}/{{ $lowerName }}iface"
)

type {{ $name }}Activities struct {
	client {{ $lowerName }}iface.{{ $name }}API
}

func New{{ $name }}Activities(client {{ $lowerName }}iface.{{ $name }}API) *{{ $name }}Activities {
    return &{{ $name }}Activities{client: client}
}

{{- range $i, $method := .Methods }}

{{ if HasPrefix $method.Name "Wait" -}}
func (a *{{ $name }}Activities) {{ $method.Name }}(input *{{ $method.InputPackage }}.{{ $method.Input }}) error {
    return a.client.{{ $method.Name }}(input)
}
{{- else -}}
func (a *{{ $name }}Activities) {{ $method.Name }}(input *{{ $method.InputPackage }}.{{ $method.Input }}) (*{{ $method.OutputPackage }}.{{ $method.Output }}, error) {
    return a.client.{{ $method.Name }}(input)
}
{{- end }}

{{- end }}
