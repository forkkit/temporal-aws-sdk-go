// Generated by https://github.com/temporalio/temporal-aws-sdk/cmd/temporal-aws-sdk-gen/main.go
// from https://github.com/aws/aws-sdk-go.
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsactivities

import (
	"context"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/marketplacecommerceanalytics"
	"github.com/aws/aws-sdk-go/service/marketplacecommerceanalytics/marketplacecommerceanalyticsiface"
	"temporal.io/aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken
type _ request.Option

type MarketplaceCommerceAnalyticsActivities struct {
	client marketplacecommerceanalyticsiface.MarketplaceCommerceAnalyticsAPI

	sessionFactory SessionFactory
}

func NewMarketplaceCommerceAnalyticsActivities(sess *session.Session, config ...*aws.Config) *MarketplaceCommerceAnalyticsActivities {
	client := marketplacecommerceanalytics.New(sess, config...)
	return &MarketplaceCommerceAnalyticsActivities{client: client}
}

func NewMarketplaceCommerceAnalyticsActivitiesWithSessionFactory(sessionFactory SessionFactory) *MarketplaceCommerceAnalyticsActivities {
	return &MarketplaceCommerceAnalyticsActivities{sessionFactory: sessionFactory}
}

func (a *MarketplaceCommerceAnalyticsActivities) getClient(ctx context.Context) (marketplacecommerceanalyticsiface.MarketplaceCommerceAnalyticsAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, err
	}

	return marketplacecommerceanalytics.New(sess), nil
}

func (a *MarketplaceCommerceAnalyticsActivities) GenerateDataSet(ctx context.Context, input *marketplacecommerceanalytics.GenerateDataSetInput) (*marketplacecommerceanalytics.GenerateDataSetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GenerateDataSetWithContext(ctx, input)
}

func (a *MarketplaceCommerceAnalyticsActivities) StartSupportDataExport(ctx context.Context, input *marketplacecommerceanalytics.StartSupportDataExportInput) (*marketplacecommerceanalytics.StartSupportDataExportOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.StartSupportDataExportWithContext(ctx, input)
}
