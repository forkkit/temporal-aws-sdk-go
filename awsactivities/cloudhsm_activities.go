// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package awsactivities

import (
	"context"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/cloudhsm"
	"github.com/aws/aws-sdk-go/service/cloudhsm/cloudhsmiface"
	"go.temporal.io/aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

type CloudHSMActivities struct {
	client cloudhsmiface.CloudHSMAPI

	sessionFactory SessionFactory
}

func NewCloudHSMActivities(sess *session.Session, config ...*aws.Config) *CloudHSMActivities {
	client := cloudhsm.New(sess, config...)
	return &CloudHSMActivities{client: client}
}

func NewCloudHSMActivitiesWithSessionFactory(sessionFactory SessionFactory) *CloudHSMActivities {
	return &CloudHSMActivities{sessionFactory: sessionFactory}
}

func (a *CloudHSMActivities) getClient(ctx context.Context) (cloudhsmiface.CloudHSMAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, err
	}

	return cloudhsm.New(sess), nil
}

func (a *CloudHSMActivities) AddTagsToResource(ctx context.Context, input *cloudhsm.AddTagsToResourceInput) (*cloudhsm.AddTagsToResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.AddTagsToResourceWithContext(ctx, input)
}

func (a *CloudHSMActivities) CreateHapg(ctx context.Context, input *cloudhsm.CreateHapgInput) (*cloudhsm.CreateHapgOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateHapgWithContext(ctx, input)
}

func (a *CloudHSMActivities) CreateHsm(ctx context.Context, input *cloudhsm.CreateHsmInput) (*cloudhsm.CreateHsmOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	internal.SetClientToken(ctx, &input.ClientToken)
	return client.CreateHsmWithContext(ctx, input)
}

func (a *CloudHSMActivities) CreateLunaClient(ctx context.Context, input *cloudhsm.CreateLunaClientInput) (*cloudhsm.CreateLunaClientOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateLunaClientWithContext(ctx, input)
}

func (a *CloudHSMActivities) DeleteHapg(ctx context.Context, input *cloudhsm.DeleteHapgInput) (*cloudhsm.DeleteHapgOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteHapgWithContext(ctx, input)
}

func (a *CloudHSMActivities) DeleteHsm(ctx context.Context, input *cloudhsm.DeleteHsmInput) (*cloudhsm.DeleteHsmOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteHsmWithContext(ctx, input)
}

func (a *CloudHSMActivities) DeleteLunaClient(ctx context.Context, input *cloudhsm.DeleteLunaClientInput) (*cloudhsm.DeleteLunaClientOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteLunaClientWithContext(ctx, input)
}

func (a *CloudHSMActivities) DescribeHapg(ctx context.Context, input *cloudhsm.DescribeHapgInput) (*cloudhsm.DescribeHapgOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DescribeHapgWithContext(ctx, input)
}

func (a *CloudHSMActivities) DescribeHsm(ctx context.Context, input *cloudhsm.DescribeHsmInput) (*cloudhsm.DescribeHsmOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DescribeHsmWithContext(ctx, input)
}

func (a *CloudHSMActivities) DescribeLunaClient(ctx context.Context, input *cloudhsm.DescribeLunaClientInput) (*cloudhsm.DescribeLunaClientOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DescribeLunaClientWithContext(ctx, input)
}

func (a *CloudHSMActivities) GetConfig(ctx context.Context, input *cloudhsm.GetConfigInput) (*cloudhsm.GetConfigOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetConfigWithContext(ctx, input)
}

func (a *CloudHSMActivities) ListAvailableZones(ctx context.Context, input *cloudhsm.ListAvailableZonesInput) (*cloudhsm.ListAvailableZonesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListAvailableZonesWithContext(ctx, input)
}

func (a *CloudHSMActivities) ListHapgs(ctx context.Context, input *cloudhsm.ListHapgsInput) (*cloudhsm.ListHapgsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListHapgsWithContext(ctx, input)
}

func (a *CloudHSMActivities) ListHsms(ctx context.Context, input *cloudhsm.ListHsmsInput) (*cloudhsm.ListHsmsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListHsmsWithContext(ctx, input)
}

func (a *CloudHSMActivities) ListLunaClients(ctx context.Context, input *cloudhsm.ListLunaClientsInput) (*cloudhsm.ListLunaClientsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListLunaClientsWithContext(ctx, input)
}

func (a *CloudHSMActivities) ListTagsForResource(ctx context.Context, input *cloudhsm.ListTagsForResourceInput) (*cloudhsm.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListTagsForResourceWithContext(ctx, input)
}

func (a *CloudHSMActivities) ModifyHapg(ctx context.Context, input *cloudhsm.ModifyHapgInput) (*cloudhsm.ModifyHapgOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ModifyHapgWithContext(ctx, input)
}

func (a *CloudHSMActivities) ModifyHsm(ctx context.Context, input *cloudhsm.ModifyHsmInput) (*cloudhsm.ModifyHsmOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ModifyHsmWithContext(ctx, input)
}

func (a *CloudHSMActivities) ModifyLunaClient(ctx context.Context, input *cloudhsm.ModifyLunaClientInput) (*cloudhsm.ModifyLunaClientOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ModifyLunaClientWithContext(ctx, input)
}

func (a *CloudHSMActivities) RemoveTagsFromResource(ctx context.Context, input *cloudhsm.RemoveTagsFromResourceInput) (*cloudhsm.RemoveTagsFromResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.RemoveTagsFromResourceWithContext(ctx, input)
}
